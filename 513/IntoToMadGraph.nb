(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     96058,       2261]
NotebookOptionsPosition[     85858,       2131]
NotebookOutlinePosition[     86543,       2154]
CellTagsIndexPosition[     86500,       2151]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Introduction to MadGraph5", "Title",
 CellChangeTimes->{{3.843417220164391*^9, 3.843417231527504*^9}, {
   3.849739633773053*^9, 3.84973963886338*^9}, 
   3.850611209248756*^9},ExpressionUUID->"e451d42f-665e-4dc2-9e86-\
ad5dedf74188"],

Cell[TextData[{
 "In this notebook you will be guided through the basics of MadGraph5. You \
will be invited to answer several questions, write some basic functions, and \
do some basic analysis of simulated collider events. Please answer every \
question along the way. You will know there is something for you to do or \
answer when you see ",
 StyleBox["bold",
  FontWeight->"Bold"],
 " text."
}], "Text",
 CellChangeTimes->{{3.850611148482774*^9, 3.850611164022236*^9}, {
  3.850611194417036*^9, 3.850611302888566*^9}, {3.850689503772916*^9, 
  3.8506895229431887`*^9}},ExpressionUUID->"9bd9001e-f61e-489f-923a-\
2e0c6f1e5f73"],

Cell["\<\
Let\[CloseCurlyQuote]s learn how to use MadGraph
First, navigate to the MadGraph directory, probably called something like
MG5_aMC_v3_4_1
the final numbers may be different depending on the version of the software \
you have

From that directory you can execute 
./bin/mg5_aMC

This should bring up a screen something like\
\>", "Text",
 CellChangeTimes->{{3.84341728050455*^9, 3.843417435689625*^9}, {
  3.850611176394532*^9, 3.850611176473024*^9}, {3.850611312760141*^9, 
  3.850611313979993*^9}, {3.8506895324424143`*^9, 3.850689532549082*^9}, {
  3.883091865650811*^9, 
  3.883091868493678*^9}},ExpressionUUID->"743fcf0d-8609-4ed0-90a1-\
753b043aef8f"],

Cell["\<\
************************************************************
*                     MadGraph5_aMC@NLO                    *
*                                                          *
*                *                       *                 *
*                  *        * *        *                   *
*                    * * * * 5 * * * *                     *
*                  *        * *        *                   *
*                *                       *                 *
*                                                          *
*                                                          *
*         VERSION 3.4.1                 2022-09-01         *
*                                                          *
*    The MadGraph5_aMC@NLO Development Team - Find us at   *
*    https://server06.fynu.ucl.ac.be/projects/madgraph     *
*                            and                           *
*            http://amcatnlo.web.cern.ch/amcatnlo/         *
*                                                          *
*               Type \[OpenCurlyQuote]help\[CloseCurlyQuote] for in-line \
help.              *
*           Type \[OpenCurlyQuote]tutorial\[CloseCurlyQuote] to learn how MG5 \
works         *
*    Type \[OpenCurlyQuote]tutorial aMCatNLO\[CloseCurlyQuote] to learn how \
aMC@NLO works   *
*    Type \[OpenCurlyQuote]tutorial MadLoop\[CloseCurlyQuote] to learn how \
MadLoop works    *
*                                                          *
************************************************************\
\>", "Text",
 CellChangeTimes->{{3.843417477601222*^9, 3.84341749523297*^9}, {
  3.843417530078977*^9, 3.843417532143244*^9}, {3.88313880574711*^9, 
  3.883138823981099*^9}},
 Background->RGBColor[
  0.9, 1, 1],ExpressionUUID->"243c15a7-213b-4779-b17b-03e997517f9d"],

Cell["\<\
Followed by a bunch of things you can mostly ignore. What you need to focus \
on is this part:\
\>", "Text",
 CellChangeTimes->{{3.8434175347935877`*^9, 3.8434175594303207`*^9}, 
   3.843417998304261*^9},ExpressionUUID->"4ed99dd4-4b5a-47cd-a83a-\
c569ae3ed6f9"],

Cell["\<\
Loading default model: sm
INFO: Restrict model sm with file models/sm/restrict_default.dat . 
INFO: Run \"set stdout_level DEBUG\" before import for more information. 
INFO: Change particles name to pass to MG5 convention 
Defined multiparticle p = g u c d s u~ c~ d~ s~
Defined multiparticle j = g u c d s u~ c~ d~ s~
Defined multiparticle l+ = e+ mu+
Defined multiparticle l- = e- mu-
Defined multiparticle vl = ve vm vt
Defined multiparticle vl~ = ve~ vm~ vt~
Defined multiparticle all = g u c d s u~ c~ d~ s~ a ve vm vt e- mu- ve~ vm~ \
vt~ e+ mu+ t b t~ b~ z w+ h w- ta- ta+
MG5_aMC>\
\>", "Text",
 CellChangeTimes->{{3.8434175347935877`*^9, 3.8434175594303207`*^9}, 
   3.843418001993973*^9},
 Background->RGBColor[
  0.9, 1, 1],ExpressionUUID->"99c59259-b3e3-4109-9487-6a76ebfe5fd1"],

Cell["\<\
Note that MadGraph has loaded the Standard Model for you (sm) and defined \
some multiparticle shorthand\[CloseCurlyQuote]s for you. That is, is you \
input  p that includes contributions from 
g gluons
u up-quarks
c charm-quarks
d down-quarks
s strange-quarks
u~ up-anti-quark
c~ charm-anti-quarks
d~ down-anti-quarks
s~ strange-anti-quarks

j is for jet, and contains the same possible particles
l+ defines the anti-electron and anti-muon 
l- defines the electron and muon
vl are the three flavors of neutrino
vl are the anti-neutrinos

there are also 
t top-quark
b bottom-quark
ta- tau
z Z-boson
w+ W-boson
h Higgs boson\
\>", "Text",
 CellChangeTimes->{{3.843417573287784*^9, 3.843417742958592*^9}, {
   3.843417776989011*^9, 3.8434178940337543`*^9}, 
   3.843418119664537*^9},ExpressionUUID->"9234bf51-0bdb-4713-9d91-\
253128768898"],

Cell["\<\
During the course you will become more familiar with these particles, you don\
\[CloseCurlyQuote]t need to know much of anything about them at this point. \
\>", "Text",
 CellChangeTimes->{{3.850611385368629*^9, 
  3.8506114214939833`*^9}},ExpressionUUID->"5cd4cd00-1eac-4887-86b9-\
e523ba3eb1d2"],

Cell["\<\
You can access some of the documentation by typing
MG5_aMC>help

for a specific command type
MG5_amc>help <command>\
\>", "Text",
 CellChangeTimes->{{3.8434262860563927`*^9, 
  3.843426336533224*^9}},ExpressionUUID->"c7c98e3d-70bb-4853-b88f-\
c1698a4b0d20"],

Cell[CellGroupData[{

Cell["electron-positron scattering", "Subtitle",
 CellChangeTimes->{{3.843427116399488*^9, 3.843427120562952*^9}, {
  3.8482729646449347`*^9, 3.848272972515478*^9}, {3.848278320737747*^9, 
  3.8482783238574677`*^9}},ExpressionUUID->"464b9e89-5a8e-4736-ba41-\
45f4b6172216"],

Cell["\<\
We are going to explore how MadGraph works with a very simple process. We are \
going to collide an electron and a positron and produce an electron and a \
positron.

The command is\
\>", "Text",
 CellChangeTimes->{{3.843427134608403*^9, 3.843427136720787*^9}, {
  3.848272981125903*^9, 3.84827303083421*^9}, {3.849911825778385*^9, 
  3.8499118609466352`*^9}, {3.850611478701521*^9, 
  3.85061147985048*^9}},ExpressionUUID->"513913eb-ca12-49e9-8b0a-\
4e6b6ad2b2ca"],

Cell["MG5_aMC>generate e+ e- > e+ e-", "Text",
 CellChangeTimes->{
  3.843427148244635*^9, {3.848272976121274*^9, 3.8482729785287857`*^9}},
 Background->RGBColor[
  0.9, 1, 1],ExpressionUUID->"b4405d13-6ca1-449d-97c0-3f3c3f0c6b6d"],

Cell["\<\
This tells MadGraph that you are interested in colliding an electron (e-) and \
a positron (e+) and producing an electron and a positron.
Once this has been done we need to tell MadGraph we want to start simulating \
events. We do this by making a directory for working in\
\>", "Text",
 CellChangeTimes->{{3.843427162939983*^9, 3.8434272932052383`*^9}, {
  3.848278297123362*^9, 
  3.8482783114721107`*^9}},ExpressionUUID->"9c7e4320-91b8-42a8-ac20-\
476b682947cd"],

Cell["MG5_aMC>output proc_sm_ee_ee", "Text",
 CellChangeTimes->{
  3.8434273076727324`*^9, {3.848278344741826*^9, 3.848278346311385*^9}},
 Background->RGBColor[
  0.9, 1, 1],ExpressionUUID->"abca2370-dae8-4a7c-9c55-91c982fe0ad2"],

Cell["\<\
This command tells MadGraph to output the process that was just generated \
into a new directory with the name specified afterward. I\[CloseCurlyQuote]ve \
used this one to remind me that I am using the Standard Model (sm) with \
initial state ee and final state ee. But you can name your whatever you\
\[CloseCurlyQuote]d like. However, as we will be generating a number of \
directories throughout the course I recommend a descriptive name so you can \
find what you need later.\
\>", "Text",
 CellChangeTimes->{{3.843427321506907*^9, 3.843427438096079*^9}, {
  3.848278369541769*^9, 
  3.8482783817209673`*^9}},ExpressionUUID->"30199bf8-edc3-402d-80a6-\
658d2a622450"],

Cell[TextData[{
 "Go ahead and quit using the command\n",
 StyleBox["MG5_aMC>quit",
  Background->RGBColor[0.9, 1, 1]]
}], "Text",
 CellChangeTimes->{{3.848278417808977*^9, 
  3.848278436674444*^9}},ExpressionUUID->"f9018144-5378-4a6d-8174-\
d046cb496b61"],

Cell["\<\
You should now see that in your MadGraph directory (or where ever you decided \
to call madgraph from) there is a folder with the name of whatever you called \
your output. In my case the folder is called \
\[OpenCurlyDoubleQuote]proc_sm_ee_ee\[CloseCurlyDoubleQuote]
Inside the folder there are lots of things, but let\[CloseCurlyQuote]s focus \
on the folder named \[OpenCurlyDoubleQuote]Cards\[CloseCurlyDoubleQuote]
These cards are full of different parameter values that MadGraph will use \
when generating events
Let\[CloseCurlyQuote]s start with the run card \
\[OpenCurlyDoubleQuote]run_card.dat\[CloseCurlyDoubleQuote]\
\>", "Text",
 CellChangeTimes->{{3.847647521692709*^9, 3.847647567695562*^9}, {
  3.847647599063923*^9, 3.8476476565648127`*^9}, {3.8476477699206123`*^9, 
  3.847647778676907*^9}, {3.848278454440504*^9, 3.848278455540032*^9}, {
  3.849909394567415*^9, 
  3.849909411111423*^9}},ExpressionUUID->"08774f50-784d-4019-8f7a-\
541e67beb881"],

Cell[TextData[{
 "Scan through this. \nThere are several things we can set. First,\n",
 StyleBox["# Warning: Do not generate more than 1M events in a single run     \
  *\n#*********************************************************************\n \
 10000 = nevents ! Number of unweighted events requested \n  0   = iseed   ! \
rnd seed (0=assigned automatically=default))\n\
#*********************************************************************",
  Background->RGBColor[0.9, 1, 1]],
 "\nThis lets us set how many event we\[CloseCurlyQuote]d like to generate. \
Let\[CloseCurlyQuote]s keep this at 10,000 for now. Note that since numerical \
methods are never truly random they don\[CloseCurlyQuote]t recommend \
generating more that 1 million events at once. If you need more than that \
make them in several 1 million event batches.\nNext,\n",
 StyleBox["# Collider type and energy                                         \
  *\n# lpp: 0=No PDF, 1=proton, -1=antiproton, 2=photon from proton,      *\n\
#                3=photon from electron, 4=photon from muon          *\n\
#*********************************************************************\n     \
0        = lpp1    ! beam 1 type \n     0        = lpp2    ! beam 2 type\n    \
 500.0     = ebeam1  ! beam 1 total energy in GeV\n     500.0     = ebeam2  ! \
beam 2 total energy in GeV\n\
#*********************************************************************\n# \
Beam polarization from -100 (left-handed) to 100 (right-handed)    *\n\
#*********************************************************************\n     \
0.0     = polbeam1 ! beam polarization for beam 1\n     0.0     = polbeam2 ! \
beam polarization for beam 2",
  Background->RGBColor[0.9, 1, 1]],
 "\n We can now set our collider type. We are considering an \
electron-positron collider so we leave these set to 0. For now we also leave \
the beams unpolarized. But what energy collider should we be using? Let\
\[CloseCurlyQuote]s use the low energy \n",
 StyleBox["     0.5     = ebeam1  ! beam 1 total energy in GeV\n     0.5     \
= ebeam2  ! beam 2 total energy in GeV",
  Background->RGBColor[0.9, 1, 1]],
 "\n",
 StyleBox["Question 1:",
  FontWeight->"Bold"],
 " With beam energies set as above, what is the center-of-momentum collider \
energy?",
 "\n",
 StyleBox["Answer:",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.8476477857400503`*^9, 3.8476477989390297`*^9}, {
  3.8476478739382687`*^9, 3.847647998124262*^9}, {3.8476480353734903`*^9, 
  3.8476480410128403`*^9}, {3.847648120906252*^9, 3.847648265924724*^9}, {
  3.8476483109905643`*^9, 3.847648315932014*^9}, {3.848278482851091*^9, 
  3.848278518835353*^9}, {3.850611645932989*^9, 
  3.850611747400709*^9}},ExpressionUUID->"2f5b2eaa-4949-40ac-9a9f-\
471686fc13a1"],

Cell[TextData[{
 "We can skip a bunch of things now. Go down to ",
 StyleBox["\n#*******************************                                 \
                \n# Parton level cuts definition *\n\
#*******************************                                     \n#      \
                                                              \n#\n\
#*********************************************************************\n# BW \
cutoff (M+/-bwcutoff*Gamma) ! Define on/off-shell for \
\[OpenCurlyDoubleQuote]$\[CloseCurlyDoubleQuote] and decay  \n\
#*********************************************************************\n  \
15.0  = bwcutoff      ! (M+/-bwcutoff*Gamma)\n\
#*********************************************************************\n# \
Standard Cuts                                                      *",
  Background->RGBColor[0.9, 1, 1]]
}], "Text",
 CellChangeTimes->{{3.847648319002513*^9, 3.847648329439383*^9}, {
  3.847648387475924*^9, 3.847648388218541*^9}, {3.847648484045115*^9, 
  3.847648504511372*^9}, {3.847648556889624*^9, 
  3.8476485631684628`*^9}},ExpressionUUID->"3fc4b0be-dd12-4535-b758-\
a2f9fabed99d"],

Cell[TextData[{
 "Let's look at this for a minute.",
 StyleBox["\n\
#*********************************************************************\n# \
Minimum and maximum pt's (for max, -1 means no cut)                *\n\
#*********************************************************************\n 10.0 \
 = ptl       ! minimum pt for the charged leptons \n -1.0  = ptlmax    ! \
maximum pt for the charged leptons\n {} = pt_min_pdg ! pt cut for other \
particles (use pdg code). Applied on particle and anti-particle\n {}\t= \
pt_max_pdg ! pt cut for other particles (syntax e.g. {6: 100, 25: 50}) ",
  Background->RGBColor[0.9, 1, 1]]
}], "Text",
 CellChangeTimes->{{3.847648319002513*^9, 3.847648329439383*^9}, {
  3.847648387475924*^9, 3.847648388218541*^9}, {3.847648484045115*^9, 
  3.847648504511372*^9}, {3.847648556889624*^9, 
  3.847648599804686*^9}},ExpressionUUID->"f244d1b0-5355-4aa1-8353-\
dab9a5252725"],

Cell[TextData[{
 "We don\[CloseCurlyQuote]t want the minimum pt (this is the transverse \
momentum) to be 10 GeV, because the collider energy was just set to 1 GeV. If \
we leave this the way it is we won\[CloseCurlyQuote]t produce any events. Let\
\[CloseCurlyQuote]s set this to -1, that way there is no minimum value. \nSo,\
\n",
 StyleBox["# Minimum and maximum pt\[CloseCurlyQuote]s (for max, -1 means no \
cut)                *\n\
#*********************************************************************\n -1.0 \
 = ptl       ! minimum pt for the charged leptons \n -1.0  = ptlmax    ! \
maximum pt for the charged leptons\n {} = pt_min_pdg ! pt cut for other \
particles (use pdg code). Applied on particle and anti-particle\n {}= \
pt_max_pdg ! pt cut for other particles (syntax e.g. {6: 100, 25: 50}) \n",
  Background->RGBColor[0.9, 1, 1]],
 "Make sure that after you change the card file you then save it. If you don\
\[CloseCurlyQuote]t save the changes then they won\[CloseCurlyQuote]t be \
applied when you generate actual events."
}], "Text",
 CellChangeTimes->{{3.847648608278561*^9, 3.847648629950684*^9}, {
  3.847648713412196*^9, 3.847648768872671*^9}, {3.847648805476346*^9, 
  3.847648820272682*^9}, {3.847665780884725*^9, 3.847665795106607*^9}, {
  3.848278534873899*^9, 3.8482785451687737`*^9}, {3.850611809446197*^9, 
  3.850611926785084*^9}},ExpressionUUID->"c288c277-3b50-4391-a030-\
2bf51746ac79"],

Cell[TextData[{
 "This sets the minimum and maximum energies ",
 "of various collider objects. The \ndefault is no cut, \
let\[CloseCurlyQuote]s leave it that way for now.",
 StyleBox["\n\
#*********************************************************************\n# \
Minimum and maximum E's (in the center of mass frame)              *\n\
#*********************************************************************\n  0.0 \
 = ej     ! minimum E for the jets\n  0.0  = eb     ! minimum E for the b\n  \
0.0  = ea     ! minimum E for the photons\n  0.0  = el     ! minimum E for \
the charged leptons\n  -1.0   = ejmax ! maximum E for the jets\n -1.0   = \
ebmax ! maximum E for the b\n -1.0   = eamax ! maximum E for the photons\n \
-1.0   = elmax ! maximum E for the charged leptons\n {} = e_min_pdg ! E cut \
for other particles (use pdg code). Applied on particle and anti-particle\n \
{} = e_max_pdg ! E cut for other particles (syntax e.g. {6: 100, 25: 50})",
  Background->RGBColor[0.9, 1, 1]]
}], "Text",
 CellChangeTimes->{{3.847648319002513*^9, 3.847648329439383*^9}, {
  3.847648387475924*^9, 3.847648388218541*^9}, {3.847648484045115*^9, 
  3.847648504511372*^9}, {3.847648556889624*^9, 3.847648584569603*^9}, {
  3.847648834297121*^9, 3.8476489145776997`*^9}, {3.85389457187143*^9, 
  3.853894574240837*^9}},ExpressionUUID->"ab22be06-3ced-4a21-b3b2-\
c3c34df5a093"],

Cell[TextData[{
 "Max rapidity looks fine for now. But we should remember that we have made a \
cut on the rapidity. Note also that this is \[Eta] which is actually the \
pseudorapidity. \n",
 StyleBox["Question 2:",
  FontWeight->"Bold"],
 " Why is the |\[Eta]|<2.5 cut the usual standard?\n",
 StyleBox["Answer:",
  FontWeight->"Bold"],
 " "
}], "Text",
 CellChangeTimes->{{3.847648319002513*^9, 3.847648329439383*^9}, {
   3.847648387475924*^9, 3.847648388218541*^9}, {3.847648484045115*^9, 
   3.847648504511372*^9}, {3.847648556889624*^9, 3.847648584569603*^9}, {
   3.84764919182966*^9, 3.847649242679943*^9}, {3.847649277160761*^9, 
   3.847649286343053*^9}, {3.847665140084536*^9, 3.847665166691353*^9}, {
   3.8476652095459146`*^9, 3.847665209720831*^9}, 3.848278564715828*^9, {
   3.849909588423168*^9, 3.8499096507719584`*^9}, {3.8506119472127533`*^9, 
   3.850612054952372*^9}, {3.8506120951248217`*^9, 3.850612209735676*^9}, {
   3.850612345383662*^9, 
   3.850612384232692*^9}},ExpressionUUID->"bb4230ce-2b3b-47c8-8c8c-\
d2d7ae1d9d1f"],

Cell[TextData[{
 StyleBox["#******************************************************************\
***\n# Maximum and minimum absolute rapidity (for max, -1 means no cut)   *\n\
#*********************************************************************\n 2.5  \
= etal    ! max rap for the charged leptons \n 0.0  = etalmin ! main rap for \
the charged leptons\n {} = eta_min_pdg ! rap cut for other particles (use pdg \
code). Applied on particle and anti-particle\n {} = eta_max_pdg ! rap cut for \
other particles (syntax e.g. {6: 2.5, 23: 5})\n\
#*********************************************************************\n# \
Minimum and maximum DeltaR distance                                *\n\
#*********************************************************************\n 0.4 \
= drll    ! min distance between leptons \n -1.0  = drllmax ! max distance \
between leptons\n",
  Background->RGBColor[0.9, 1, 1]],
 " Everything else can be left as the defaults assign them. Note here we are \
requiring a minimum \[CapitalDelta]R between leptons."
}], "Text",
 CellChangeTimes->{{3.847648319002513*^9, 3.847648329439383*^9}, {
   3.847648387475924*^9, 3.847648388218541*^9}, {3.847648484045115*^9, 
   3.847648504511372*^9}, {3.847648556889624*^9, 3.847648584569603*^9}, {
   3.84764919182966*^9, 3.847649242679943*^9}, {3.847649277160761*^9, 
   3.847649286343053*^9}, {3.847665140084536*^9, 3.847665166691353*^9}, {
   3.8476652095459146`*^9, 3.847665209720831*^9}, 3.848278564715828*^9, {
   3.849909588423168*^9, 3.8499096507719584`*^9}, {3.8506119472127533`*^9, 
   3.850612054952372*^9}, {3.8506120951248217`*^9, 3.850612209735676*^9}, {
   3.850612345383662*^9, 3.850612386270403*^9}, {3.851527677709999*^9, 
   3.851527678632846*^9}},ExpressionUUID->"58e0b3f3-e1ee-4d2e-a364-\
d54719a8596d"],

Cell[TextData[{
 "We have made some changes to the run card, so we need to make sure we ",
 StyleBox["SAVE",
  FontWeight->"Bold"],
 " the file with the changes or else they will not be applied when we \
generate events."
}], "Text",
 CellChangeTimes->{{3.849909653293185*^9, 3.8499096894371023`*^9}, {
  3.850612065327394*^9, 
  3.8506120665800877`*^9}},ExpressionUUID->"8c7f1393-b1c9-4061-a0d0-\
447e9e53a3dd"],

Cell[TextData[{
 "Now we need to look at the parameter card in param_card.dat\n",
 StyleBox["###################################\n## INFORMATION FOR MASS\n\
###################################\nBlock mass \n    5 4.700000e+00 # MB \n  \
  6 1.730000e+02 # MT \n   15 1.777000e+00 # MTA \n   23 9.118800e+01 # MZ \n \
  25 1.250000e+02 # MH \n## Dependent parameters, given by model \
restrictions.\n## Those values should be edited following the \n## analytical \
expression. MG5 ignores those values \n## but they are important for \
interfacing the output of MG5\n## to external program such as Pythia.\n  1 \
0.000000e+00 # d : 0.0 \n  2 0.000000e+00 # u : 0.0 \n  3 0.000000e+00 # s : \
0.0 \n  4 0.000000e+00 # c : 0.0 \n  11 0.000000e+00 # e- : 0.0 \n  12 \
0.000000e+00 # ve : 0.0 \n  13 0.000000e+00 # mu- : 0.0 \n  14 0.000000e+00 # \
vm : 0.0 \n  16 0.000000e+00 # vt : 0.0 \n  21 0.000000e+00 # g : 0.0 \n  22 \
0.000000e+00 # a : 0.0 \n  24 8.041900e+01 # w+ : cmath.sqrt(MZ__exp__2/2. + \
cmath.sqrt(MZ__exp__4/4. - (aEW*cmath.pi*MZ__exp__2)/(Gf*sqrt__2))) ",
  Background->RGBColor[0.9, 1, 1]],
 "\n  \n Notice that many of the particle masses have been hard coded in as \
zero. \n ",
 StyleBox["Question 3:",
  FontWeight->"Bold"],
 " Why are so many of these particles, which are known to have nonzero \
masses, explicitly taken to have zero mass?\n ",
 StyleBox["Answer: Because their mass is so small compared to the proton and \
other bigger particles, that it is essentially zero.",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.847989526165954*^9, 3.847989550669662*^9}, {
  3.8479896161626377`*^9, 3.847989619661853*^9}, {3.847989660873673*^9, 
  3.847989803758794*^9}, {3.8479898463792963`*^9, 3.847989886734973*^9}, {
  3.847989934755487*^9, 3.8479901178622923`*^9}, {3.847993946440658*^9, 
  3.847994084523121*^9}, {3.848278601716063*^9, 3.848278665156801*^9}, {
  3.850612265219076*^9, 3.850612335140193*^9}, {3.884305538164852*^9, 
  3.8843055780943937`*^9}},ExpressionUUID->"8b41c1b5-d53b-4de3-b5fd-\
b0329d851f35"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cross section Considerations", "Subtitle",
 CellChangeTimes->{{3.850670868772717*^9, 
  3.850670887975565*^9}},ExpressionUUID->"986de53a-4b00-48bf-9cfd-\
b62c2ef00bc4"],

Cell[TextData[{
 "Okay, we are ready to generate some events!\n\nIn the directory you made, \
in my case the name is\n",
 StyleBox["proc_sm_ee_ee",
  Background->RGBColor[0.9, 1, 1]],
 "\nwe execute the following command\n\n",
 StyleBox["./bin/generate_events 2 1 proc_sm_ee_ee_1GeV_10k",
  Background->RGBColor[0.9, 1, 1]],
 "\n\nThis calls the generate events function the flag 2 means multicore, so \
I could in principle use more than once core if they are available on \
whatever machine I\[CloseCurlyQuote]m using. The 1 means just use one core \
and then I give a name to the events I\[CloseCurlyQuote]m generating. In this \
case I have specified the model \[OpenCurlyDoubleQuote]sm\
\[CloseCurlyDoubleQuote] the process \[OpenCurlyDoubleQuote]ee_mumu\
\[CloseCurlyDoubleQuote] the center of mass energy \
\[OpenCurlyDoubleQuote]1GeV\[CloseCurlyDoubleQuote] and the  number of events \
\[OpenCurlyDoubleQuote]10k\[CloseCurlyDoubleQuote]\n\n",
 StyleBox["(I ran into a new issue on my Mac regarding making events. For \
some reason in my proc directory no \[OpenCurlyDoubleQuote]Events\
\[CloseCurlyDoubleQuote] file was made. This is annoying, but easy to fix. \
Just add an empty fold named \[OpenCurlyDoubleQuote]Events\
\[CloseCurlyDoubleQuote] and everything should work.)",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.847665169635148*^9, 3.8476652351212063`*^9}, {
  3.847665332628703*^9, 3.847665342663788*^9}, {3.847665813421485*^9, 
  3.847665850079598*^9}, {3.847665887154421*^9, 3.84766601374162*^9}, {
  3.848278672276186*^9, 3.848278679124069*^9}, {3.848278868928781*^9, 
  3.84827886905375*^9}, {3.850612425335867*^9, 3.8506124320399113`*^9}, {
  3.8831388928410892`*^9, 
  3.883138957759803*^9}},ExpressionUUID->"0ac825c1-3898-447d-8d26-\
ee677babafcd"],

Cell[TextData[{
 StyleBox["Question 4:",
  FontWeight->"Bold"],
 " What is the cross section generated by MadGraph, including the uncertainty\
\n",
 StyleBox["Answer:",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.847666312494268*^9, 3.847666384516259*^9}, {
  3.8482788895032787`*^9, 3.84827891104839*^9}, {3.848279276470276*^9, 
  3.848279332430375*^9}, {3.850612501498229*^9, 
  3.850612558772999*^9}},ExpressionUUID->"0bf4564c-f1c5-4225-aace-\
1d9b4ff346d3"],

Cell[TextData[{
 "Let\[CloseCurlyQuote]s see how this changes as we change the number of \
events generated. Go back and change the run card so that only 100 events are \
generated. Then 1,000 and 100,000. Record the cross sections below including \
the uncertainties. Also record the time it takes to generate the events. \
Remember to name each run uniquely so that you can check the individual \
events. (You already did the 10,000 case so you can just record that value \
again as part of the table.)\n",
 StyleBox["Table 1:",
  FontWeight->"Bold"],
 "\nNumber of Events                                    Cross section\t\t\t\t\
Total CPU time\n100\t\t\t\t\t\t\t\n1,000\t\t\t\t\t\t\n10,000\t\t\t\t\t\t\n\
100,000\t\t\t\t\t\t\n",
 StyleBox["Reflection 1:",
  FontWeight->"Bold"],
 " Considering the calculated cross sections, their uncertainties, and the \
time it takes to calculate how do you feel about the 10,000 event default?\n\
",
 StyleBox["Answer:",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.849910658172905*^9, 3.849910715682789*^9}, {
   3.8499108905253363`*^9, 3.849910942879039*^9}, {3.8499110437240753`*^9, 
   3.849911101208517*^9}, {3.8499112186054697`*^9, 3.8499112553291683`*^9}, {
   3.8506686305631638`*^9, 3.8506686792662773`*^9}, {3.850668710199155*^9, 
   3.850668729328209*^9}, 3.8506688679500237`*^9, {3.850669166418333*^9, 
   3.850669173852407*^9}, {3.8506692240996103`*^9, 3.85066928527905*^9}, {
   3.850669422099821*^9, 3.850669511406991*^9}, {3.850670952846945*^9, 
   3.8506710264971857`*^9}},ExpressionUUID->"176b58e6-fa04-4e4a-8661-\
cc525559ca9e"],

Cell[TextData[{
 "Remember that in the run card we left in place a cut on the maximum \
pseudorapidity.\nNext, let\[CloseCurlyQuote]s see what happens as we allow \
for more particles at higher \[Eta]. Go ahead and generate 10,000 events for \
each \[Eta] value. (Again you already did the first case, so just record it \
in this table again.) Remember to name each run uniquely so that you can \
check the events for each case. \n",
 StyleBox["Table 2:",
  FontWeight->"Bold"],
 "\nMax \[Eta]\t\t\t\tCross section\n2.5\t\t\t\t\t\n3.0\t\t\t\t\t\n5.0\t\t\t\t\
\t\n",
 StyleBox["Reflection 2:",
  FontWeight->"Bold"],
 " You should be seeing a significant change to the cross section for these \
different cases. The ATLAS and CMS detectors at the LHC only have full \
tracking and detection up to |\[Eta]| = 2.5, what does this mean about the \
number of produced particles that miss the detector and go down the beam \
pipe?\n",
 StyleBox["Answer:",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.849911473579571*^9, 3.849911534095319*^9}, {
  3.8499115786124*^9, 3.849911601724306*^9}, {3.849912168634721*^9, 
  3.849912204896132*^9}, {3.8506695394816504`*^9, 3.850669603110985*^9}, {
  3.850670483930101*^9, 3.8506705044138117`*^9}, {3.85067054185702*^9, 
  3.850670702452734*^9}, {3.850670991762879*^9, 3.850671000228558*^9}, {
  3.850671031292345*^9, 
  3.8506710826342*^9}},ExpressionUUID->"08bb88b2-fe10-4297-b958-a0ba889fbc9d"],

Cell["\<\
If we are only interested in a certain range of the detector, like the region \
|\[Eta]|<2.5, we should focus nearer that region with the generator level \
cuts. Otherwise we may generate a lot of events (because of larger cross \
sections) that don\[CloseCurlyQuote]t correspond to the effects we are \
interested in. This only leaves us with a few events  with sensitivity to the \
effects we do care about. \
\>", "Text",
 CellChangeTimes->{{3.849912232112279*^9, 3.849912301709373*^9}, {
  3.8506707608475924`*^9, 
  3.8506708340112247`*^9}},ExpressionUUID->"25e107a8-0a62-42ac-a416-\
c3b99ff38fc3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Looking at the Events", "Subtitle",
 CellChangeTimes->{{3.850670905158064*^9, 
  3.85067091214543*^9}},ExpressionUUID->"9c664d8e-5b71-478c-86ea-\
e9791ce94237"],

Cell["\<\
To find the events that you have generated go to the Events directory within \
the generated process directory
Inside you should find a folder with the names you specified when you called \
generate_events
Inside this folder there is a banner which includes the information related \
to how the events were generated and a zipped file called
unweighted_events.lhe.gz
This is then to be unzipped, leaving you with a .lhe file. (lhe stands for \
Les Houches Event)
re-name this so that its name is descriptive, like 
proc_sm_ee_ee_1GeV_10k_eta3.lhe
or something similar\
\>", "Text",
 CellChangeTimes->{{3.8476665223222637`*^9, 3.8476666664233007`*^9}, {
  3.847836931404397*^9, 3.847836977397715*^9}, {3.8482789798678923`*^9, 
  3.848278980476233*^9}, {3.848279383174529*^9, 3.848279384513267*^9}, {
  3.850670919285383*^9, 3.850670943058612*^9}, {3.850671433566455*^9, 
  3.8506714496618423`*^9}, {3.8506714925031633`*^9, 
  3.850671582187687*^9}},ExpressionUUID->"8d868243-5395-4aa5-bc44-\
75e1651ef210"],

Cell["\<\
Move a copy of two event files into the same directory as this notebook (you \
can also just make sure that the notebook is looking in the folder with the \
event files, but I find it easier to keep all the Mathematic analysis files \
in the folder with the notebook)
Then change your Mathematic directory to this directory also.\
\>", "Text",
 CellChangeTimes->{{3.847836788684915*^9, 3.84783682648976*^9}, {
  3.8506715993936243`*^9, 
  3.8506716506030293`*^9}},ExpressionUUID->"a6430dbd-984e-4c39-bb96-\
edad54dea994"],

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.847836827831521*^9, 3.8478368362069902`*^9}},
 CellLabel->
  "In[212]:=",ExpressionUUID->"dd3126e5-d9de-4e39-8d66-f3148bb4da7f"],

Cell["\<\
The function below is just to try and keep memory in check when importing \
events files. I don\[CloseCurlyQuote]t really know how much of a difference \
it makes, but it gets called in some of the functions bellow.\
\>", "Text",
 CellChangeTimes->{{3.850671674198721*^9, 
  3.850671753625587*^9}},ExpressionUUID->"a8c9183b-b20c-46c0-b5f2-\
c13fb9fbbf93"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ClearMemory", ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Unprotect", "[", 
        RowBox[{"In", ",", "Out"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Clear", "[", 
        RowBox[{"In", ",", "Out"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Protect", "[", 
        RowBox[{"In", ",", "Out"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"ClearSystemCache", "[", "]"}], ";"}]}], "\[IndentingNewLine]",
      "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "is", " ", "just", " ", "to", " ", "try", " ", "and", " ", 
    "ensure", " ", "memory", " ", "stays", " ", "somewhat", " ", "in", " ", 
    RowBox[{"control", "."}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.847837938856924*^9, 3.847837959900688*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"93842551-1e04-4d04-abbe-7be869c3f791"],

Cell[TextData[{
 "Ok, go ahead and look at the event file that you generated first, with \
10,000 events and |\[Eta]| < 2.5. It\[CloseCurlyQuote]s got a header full of \
all the choices you made that led up to the events. It\[CloseCurlyQuote]s \
nice to have a record of this, but what you really want comes after the \
second </header>\nYou should see something like\n",
 StyleBox["</header>\n<init>\n-11 11 5.000000e-01 5.000000e-01 0 0 247000 \
247000 -4 1\n3.918574e+07 4.901073e+04 3.918574e+07 1\n<generator name=\
\[CloseCurlyQuote]MadGraph5_aMC@NLO\[CloseCurlyQuote] version=\
\[CloseCurlyQuote]3.1.0\[CloseCurlyQuote]>please cite 1405.0301 </generator>\n\
</init>\n<event>\n 4      1 +3.9185742e+07 5.00000000e-01 7.54677100e-03 \
1.20361500e+00\n      -11 -1    0    0    0    0 +0.0000000000e+00 \
+0.0000000000e+00 +5.0000000000e-01 5.0000000000e-01 0.0000000000e+00 \
0.0000e+00 -1.0000e+00\n       11 -1    0    0    0    0 -0.0000000000e+00 \
-0.0000000000e+00 -5.0000000000e-01 5.0000000000e-01 0.0000000000e+00 \
0.0000e+00 -1.0000e+00\n      -11  1    1    2    0    0 -8.4979345748e-02 \
-4.5761208182e-03 +4.9270434331e-01 5.0000000000e-01 0.0000000000e+00 \
0.0000e+00 -1.0000e+00\n       11  1    1    2    0    0 +8.4979345748e-02 \
+4.5761208182e-03 -4.9270434331e-01 5.0000000000e-01 0.0000000000e+00 \
0.0000e+00 -1.0000e+00\n</event>",
  Background->RGBColor[0.9, 1, 1]],
 "\nWhat we are really interested in is all the events. So, let\
\[CloseCurlyQuote]s understand the anatomy of each of these event blocks\nThe \
first line has six entries but not all of them are useful for us at present. \
\n(NUP, IDPRUP, XWGTUP, SCALUP, AQEDUP, AQCDUP)\nNUP= number of particle \
entries in the event\nIDPRUP= ID of the process for the event\nXWGTUP= event \
weight\nSCALUP= scale of the event in GeV\nAQEDUP= the QED coupling \[Alpha] \
used in the event\nAQCDUP= the QCD coupling ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "s"], TraditionalForm]],ExpressionUUID->
  "248ba202-8687-4b6c-91f1-21eb41ead0e2"],
 " used in the event\nMore information is given in \n\
https://arxiv.org/pdf/hep-ph/0109068.pdf and \
https://arxiv.org/pdf/hep-ph/0609017.pdf\n\nThat wasn\[CloseCurlyQuote]t too \
helpful, so let\[CloseCurlyQuote]s now look at the next four lines\nThese 13 \
entries define\n(IDUP, ISTUP, MOTHUP1, MOTHUP2, ICOLUP1, ICOLUP2, Px, Py, Pz, \
E, M, VTIMUP, SPINUP)\nIDUP= particle ID according to PDG convention\nISTUP= \
Status code (-1:Incoming Particle, +1 Outgoing final state particle, -2 \
intermediate spacelike propagator, +2 intermediate resonance...)\nMOTHUP1= \
index of first mother particle\nMOTHUP1= index of second mother, or set to 0\n\
ICOLUP1= integer tag of color flow line passing through the color of the \
particle\nICOLUP2= integer tag of color flow line passing through the \
anti-color of the particle\nPx= x-component of three momentum of the particle\
\nPy= y-component of three momentum of the particle\nPz=z-component of three \
momentum of the particle\nE= energy of the particle\nM= mass of the particle\n\
VTIMUP= invariant lifetime c\[Tau] (distance from production to decay) in \
millimeters\nSPINUP= cosine of the angle between the spin-vector of the \
particle and the 3-momentum of the decaying particle, in the lab frame. If \
unknown set 9\n\nWe will use a few commands to only grab what we need from \
each event"
}], "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQ/ejXsS1aq984rvmatx9Ebym5cBJEJ6wLPQeip15d
fU4bSHsL5F8A0XI8G5l0gLToMQcWEO2ryCcMokXerxYF0YL/nBXB/KVBGiD6
6sIuWxBt9PCwPYj+uXujM4hOvvI2GER/tXkXDaJXqZrFgOgJT1RV9EHuOCbs
AqJN3+31A9HTYg+D6Zh1u8NBdMfEVzEguu35/CQQ/WpiZyqI1lhalwWiJ6yT
zwfRCg8Tp4Bos+g3YLruC9dsEJ1nsnIpiP6ruGY1iI576XYUREcvUTkFopcw
9l4G0Yxt/rdB9LpTU++C6EV5zXuY1rxxZF4cdRBEOxeyXpq04Y1jywKdOyDa
xvnvMxDtFCf/EkQDAIshtZk=
  "],ExpressionUUID->"aae730d9-5b9a-4d0c-b7f1-aad7fe54e5fb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eventInfo", "=", 
   RowBox[{"{", 
    RowBox[{"_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"decayedOrIn", " ", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"_", ",", 
      RowBox[{"-", "1"}], ",", "_", ",", "_", ",", "_", ",", "_", ",", "_", 
      ",", "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_"}], "}"}], 
    "  ", "|", " ", 
    RowBox[{"{", 
     RowBox[{
     "_", ",", "2", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", 
      "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOut", "[", " ", "event_", " ", "]"}], "  ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{"DeleteCases", "[", 
     RowBox[{"event", ",", "decayedOrIn", ",", "2"}], "]"}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReadLHE", "[", "rawInput_", " ", "]"}], " ", ":=", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "Search", " ", "for", " ", "beginning", " ", "of", " ", "events"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pos", "=", 
      RowBox[{
       RowBox[{"Position", "[", 
        RowBox[{"rawInput", ",", 
         RowBox[{"{", "\"\<</init>\>\"", "}"}]}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "Throw", " ", "away", " ", "header", " ", "info", " ", "at", " ", 
        "start", " ", "of", " ", "file"}], ",", " ", 
       RowBox[{"combine", " ", "events", " ", "in", " ", 
        RowBox[{"{", "}"}], " ", "array", " ", "and", " ", "remove", " ", 
        "the", " ", "XML", " ", "commands", " ", "and", " ", "compulsory", 
        " ", "eventinfo"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"DeleteCases", "[", 
      RowBox[{
       RowBox[{"Split", "[", 
        RowBox[{
         RowBox[{"Drop", "[", " ", 
          RowBox[{"rawInput", ",", " ", "pos"}], "]"}], ",", 
         RowBox[{
          RowBox[{"#", "=!=", 
           RowBox[{"{", "\"\<</event>\>\"", "}"}]}], "&"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_String", ",", "___"}], "}"}], "|", " ", "eventInfo"}], ",",
        "2"}], "]"}]}], "\[IndentingNewLine]", ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReadEvents", "[", "filename_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eventListp", ",", " ", "eventListOutLp"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Time taken to read events: \>\"", ",", 
        RowBox[{
         RowBox[{"Timing", "[", 
          RowBox[{
           RowBox[{"testp", "=", 
            RowBox[{"Import", "[", 
             RowBox[{"filename", ",", "\"\<Table\>\""}], "]"}]}], ";"}], 
          "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"Timing", "[", 
       RowBox[{
        RowBox[{"eventListp", "=", 
         RowBox[{"ReadLHE", "[", "testp", "]"}]}], ";"}], " ", "]"}], ";", 
      " ", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "convert", " ", "raw", " ", "data", " ", "into", " ", "readable", " ", 
        "form"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"eventListp", " ", "=", " ", 
       RowBox[{"eventListp", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Length", "[", "eventListp", "]"}], "-", "1"}], ")"}]}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"drop", " ", "dummy", " ", "event", " ", "at", " ", "end"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"eventListOutLp", "=", 
       RowBox[{"SetOut", "[", "eventListp", "]"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"remove", " ", "initial", " ", "particle", " ", "info"}], 
       "*)"}], "\[IndentingNewLine]", "ClearMemory", ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"eventListp", ",", " ", "eventListOutLp"}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.847837310960843*^9, 3.8478373134441223`*^9}, {
  3.847837380443243*^9, 3.8478373816893377`*^9}, {3.84783746474723*^9, 
  3.847837466295433*^9}, {3.847837541568139*^9, 3.847837664051133*^9}, {
  3.847837771734838*^9, 3.847837778000106*^9}, {3.847838104856832*^9, 
  3.847838119254533*^9}, {3.847838185226925*^9, 3.847838185411417*^9}, {
  3.847838217273398*^9, 3.847838217401039*^9}, {3.847838561321814*^9, 
  3.8478385619694967`*^9}},ExpressionUUID->"67f6f86b-9e5e-4571-b3c0-\
c22f3640b516"],

Cell[TextData[{
 "Note that the ReadEvents function makes an array with two lists inside it.\n\
The first contains the full event, initial particles and final particles\nThe \
second just gives the final particles, this can be more useful when the \
initial particle state is identical for every particle, such as for an \
idealized ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["e", "+"], 
    SuperscriptBox["e", "-"]}], TraditionalForm]],ExpressionUUID->
  "747e5765-ec93-4cc8-a66c-bb5b75f99f6d"],
 " collider."
}], "Text",
 CellChangeTimes->{{3.847838427257022*^9, 
  3.84783855609641*^9}},ExpressionUUID->"5df13bd4-e8a4-440c-957d-\
92ad0a7f69e7"],

Cell["\<\
There is, of course, nothing special about these functions for reading in the \
events. If you come up with a better way let me know! I\[CloseCurlyQuote]d \
love to \[OpenCurlyDoubleQuote]borrow\[CloseCurlyDoubleQuote] it from you :)\
\>", "Text",
 CellChangeTimes->{{3.85067210687739*^9, 
  3.8506721749721537`*^9}},ExpressionUUID->"6acb5a16-c321-4896-a100-\
a8cd1e424c7d"],

Cell["\<\
Let\[CloseCurlyQuote]s see if this works with our data
I label io as meaning events with both the ingoing and outgoing particles \
while o just means outgoing\
\>", "Text",
 CellChangeTimes->{{3.847837785935629*^9, 3.847837792979007*^9}, {
   3.849964611460363*^9, 3.849964650297756*^9}, 3.849964740440256*^9, 
   3.8506720883611727`*^9},ExpressionUUID->"bfa093da-94b5-4532-816e-\
2c61df2ea4b5"],

Cell[TextData[{
 StyleBox["Directive 1: ",
  FontWeight->"Bold"],
 "Modify the following code to work with the files you have generated. Check \
that you have as many events as you expected. Check to see that the code \
grabs the part of each event (pick whatever random event number you\
\[CloseCurlyQuote]d like) that we are interested in."
}], "Text",
 CellChangeTimes->{{3.850672235304121*^9, 3.850672346172965*^9}, 
   3.85067244875077*^9},ExpressionUUID->"db133696-1863-4b9e-a3be-\
ab9be1725d8c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ioeetoeeEvents", ",", "oeetoeeEvents"}], "}"}], "=", 
   RowBox[{"ReadEvents", "[", "\"\<proc_sm_ee_ee_1GeV_10k.lhe\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8478378137156477`*^9, 3.847837835899864*^9}, {
  3.847838275224321*^9, 3.84783829651151*^9}, {3.8482795841171227`*^9, 
  3.848279591043962*^9}, {3.8499646565107594`*^9, 3.849964673482801*^9}},
 CellLabel->
  "In[390]:=",ExpressionUUID->"ffe1c39c-c29c-452d-8eb8-dedab0b1a70f"],

Cell[BoxData[{
 RowBox[{"Length", "[", "ioeetoeeEvents", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "oeetoeeEvents", "]"}]}], "Input",
 CellChangeTimes->{{3.8478383890731487`*^9, 3.847838394776587*^9}, {
  3.8478386182153873`*^9, 3.847838627575865*^9}, {3.848279602628573*^9, 
  3.848279604102057*^9}, {3.849964687724802*^9, 3.849964695785439*^9}},
 CellLabel->
  "In[391]:=",ExpressionUUID->"33069753-03c6-4944-814e-d302fe833bf8"],

Cell[BoxData[{
 RowBox[{"ioeetoeeEvents", "[", 
  RowBox[{"[", "11", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"oeetoeeEvents", "[", 
  RowBox[{"[", "11", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.847838639859961*^9, 3.847838640261088*^9}, 
   3.848279610907552*^9, {3.849964707820039*^9, 3.849964721160078*^9}},
 CellLabel->
  "In[394]:=",ExpressionUUID->"2fc73d08-c346-4c59-bba8-1e0b3296db27"],

Cell["\<\
Let\[CloseCurlyQuote]s put in the PDG particle ID numbers. See \
https://link.springer.com/content/pdf/10.1007/BF02683426.pdf\
\>", "Text",
 CellChangeTimes->{{3.8478383826887007`*^9, 3.847838386646441*^9}, {
  3.8478386459419947`*^9, 3.8478386536515408`*^9}, {3.847847732175139*^9, 
  3.8478477813792143`*^9}, {3.850672362842326*^9, 
  3.850672367085409*^9}},ExpressionUUID->"7d108370-9d2c-4c68-bfb9-\
74760a22dbe2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"PIDu", "=", " ", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PIDubar", " ", "=", " ", 
   RowBox[{"-", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PIDd", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PIDdbar", " ", "=", " ", 
   RowBox[{"-", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PIDs", " ", "=", " ", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PIDsbar", " ", "=", " ", 
   RowBox[{"-", "3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PIDc", " ", "=", " ", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PIDcbar", " ", "=", " ", 
   RowBox[{"-", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PIDb", " ", "=", " ", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PIDbbar", " ", "=", " ", 
   RowBox[{"-", "5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PIDt", " ", "=", " ", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PIDtbar", " ", "=", " ", 
   RowBox[{"-", "6"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PIDeminus", " ", "=", " ", "11"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PIDeplus", " ", "=", " ", 
   RowBox[{"-", "11"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PIDnue", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PIDnuebar", " ", "=", " ", 
   RowBox[{"-", "12"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PIDmuminus", " ", "=", " ", "13"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PIDmuplus", " ", "=", 
   RowBox[{"-", "13"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PIDnumu", " ", "=", " ", "14"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PIDnumubar", " ", "=", " ", 
   RowBox[{"-", "14"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PIDtauminus", " ", "=", " ", "15"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PIDtauplus", " ", "=", " ", 
   RowBox[{"-", "15"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PIDnutau", " ", "=", " ", "16"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PIDnutaubar", " ", "=", " ", 
   RowBox[{"-", "16"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PIDgluon", " ", "=", " ", "21"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PIDphoton", " ", "=", " ", "22"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PIDZ", " ", "=", " ", "23"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PIDWplus", " ", "=", " ", "24"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PIDWminus", " ", "=", " ", 
   RowBox[{"-", "24"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PIDh", " ", "=", " ", "25"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"particle", "[", "2", "]"}], " ", "=", "\"\<u\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"particle", "[", 
     RowBox[{"-", "2"}], "]"}], " ", "=", 
    "\"\<\!\(\*OverscriptBox[\(u\), \(_\)]\)\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"particle", "[", "1", "]"}], " ", "=", "\"\<d\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"particle", "[", 
     RowBox[{"-", "1"}], "]"}], " ", "=", 
    "\"\<\!\(\*OverscriptBox[\(d\), \(_\)]\)\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"particle", "[", "3", "]"}], " ", "=", "\"\<s\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"particle", "[", 
     RowBox[{"-", "3"}], "]"}], " ", "=", 
    "\"\<\!\(\*OverscriptBox[\(s\), \(_\)]\)\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"particle", "[", "4", "]"}], " ", "=", "\"\<c\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"particle", "[", 
     RowBox[{"-", "4"}], "]"}], " ", "=", 
    "\"\<\!\(\*OverscriptBox[\(c\), \(_\)]\)\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"particle", "[", "5", "]"}], " ", "=", "\"\<b\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"particle", "[", 
     RowBox[{"-", "5"}], "]"}], " ", "=", 
    "\"\<\!\(\*OverscriptBox[\(b\), \(_\)]\)\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"particle", "[", "6", "]"}], " ", "=", "\"\<t\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"particle", "[", 
     RowBox[{"-", "6"}], "]"}], " ", "=", 
    "\"\<\!\(\*OverscriptBox[\(t\), \(_\)]\)\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"particle", "[", "11", "]"}], " ", "=", 
   "\"\<\!\(\*SuperscriptBox[\(e\), \(-\)]\)\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"particle", "[", 
     RowBox[{"-", "11"}], "]"}], " ", "=", 
    "\"\<\!\(\*SuperscriptBox[\(e\), \(+\)]\)\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"particle", "[", "12", "]"}], " ", "=", 
   "\"\<\!\(\*SubscriptBox[\(\[Nu]\), \(e\)]\)\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"particle", "[", 
     RowBox[{"-", "12"}], "]"}], " ", "=", 
    "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(\[Nu]\), \(e\)], \(c\)]\)\>\""}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"particle", "[", "13", "]"}], " ", "=", 
   "\"\<\!\(\*SuperscriptBox[\(\[Mu]\), \(-\)]\)\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"particle", "[", 
     RowBox[{"-", "13"}], "]"}], "=", 
    "\"\<\!\(\*SuperscriptBox[\(\[Mu]\), \(+\)]\)\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"particle", "[", "14", "]"}], " ", "=", 
   "\"\<\!\(\*SubscriptBox[\(\[Nu]\), \(\[Mu]\)]\)\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"particle", "[", 
     RowBox[{"-", "14"}], "]"}], " ", "=", 
    "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(\[Nu]\), \(\[Mu]\)], \
\(c\)]\)\>\""}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"particle", "[", "15", "]"}], " ", "=", 
   "\"\<\!\(\*SuperscriptBox[\(\[Tau]\), \(-\)]\)\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"particle", "[", 
     RowBox[{"-", "15"}], "]"}], "=", 
    "\"\<\!\(\*SuperscriptBox[\(\[Tau]\), \(+\)]\)\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"particle", "[", "16", "]"}], " ", "=", 
   "\"\<\!\(\*SubscriptBox[\(\[Nu]\), \(\[Tau]\)]\)\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"particle", "[", 
     RowBox[{"-", "16"}], "]"}], " ", "=", 
    "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(\[Nu]\), \(\[Tau]\)], \(c\)]\)\>\
\""}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"particle", "[", "21", "]"}], " ", "=", "\"\<gluon\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"particle", "[", "22", "]"}], " ", "=", " ", "\"\<\[Gamma]\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"particle", "[", "23", "]"}], " ", "=", " ", "\"\<Z\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"particle", "[", "24", "]"}], " ", "=", 
   "\"\<\!\(\*SuperscriptBox[\(W\), \(+\)]\)\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"particle", "[", 
    RowBox[{"-", "24"}], "]"}], " ", "=", " ", 
   "\"\<\!\(\*SuperscriptBox[\(W\), \(-\)]\)\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"particle", "[", "25", "]"}], " ", "=", " ", "\"\<h\>\""}], ";"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"finout", "[", 
    RowBox[{"-", "1"}], "]"}], " ", "=", " ", "\"\<in\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"finout", "[", "1", "]"}], " ", "=", " ", "\"\<out\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"finout", "[", "2", "]"}], "  ", "=", " ", "\"\<decayed\>\""}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EventPrint", "[", " ", "event_", " ", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "printevent", ",", " ", "numlist", ",", " ", "x1", ",", "x2", ",", 
        "x3", ",", "x4", ",", "x5", ",", "x6", ",", "x7", ",", "x8", ",", 
        "x9", ",", "x10", ",", "x11", ",", "x12", ",", "x13", ",", " ", "x14",
         ",", "x15", ",", "x16", ",", "x17", ",", "x18", ",", "x19"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"printevent", " ", "=", " ", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"pid", ",", " ", 
             RowBox[{"in", "/", "out"}], ",", "mother1", ",", "mother2", ",", 
             "color1", ",", "color2", ",", " ", "px", ",", "py", ",", "pz", 
             ",", "p0", ",", "mass", ",", "c\[Tau]", ",", "hel"}], "}"}], 
           "}"}], ",", " ", 
          RowBox[{"(", 
           RowBox[{"event", "/.", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "x1_", ",", "x2_", ",", "x3_", ",", "x4_", ",", "x5_", ",", 
               "x6_", ",", "x7_", ",", "x8_", ",", "x9_", ",", "x10_", ",", 
               "x11_", ",", "x12_", ",", "x13_"}], "}"}], "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"particle", "[", "x1", "]"}], ",", 
               RowBox[{"finout", "[", "x2", "]"}], ",", "x3", ",", "x4", ",", 
               "x5", ",", "x6", ",", "x7", ",", "x8", ",", "x9", ",", "x10", 
               ",", "x11", ",", "x12", ",", "x13"}], "}"}]}]}], ")"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"numlist", " ", "=", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", "\"\<#\>\"", "}"}], ",", " ", 
          RowBox[{"Table", "[", 
           RowBox[{"i", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "event", "]"}]}], "}"}]}], "]"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", "numlist", "}"}], ",", 
            RowBox[{"Transpose", "[", "printevent", "]"}]}], "]"}], "//", 
          "Transpose"}], "//", "MatrixForm"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], " "}]}], "Input",
 CellChangeTimes->{{3.847837310960843*^9, 3.8478373134441223`*^9}, {
  3.847837380443243*^9, 3.8478373816893377`*^9}, {3.84783746474723*^9, 
  3.847837466295433*^9}, {3.847837541568139*^9, 3.847837664051133*^9}, {
  3.847837771734838*^9, 3.847837778000106*^9}, {3.8479330638608522`*^9, 
  3.847933064222537*^9}, {3.847933201674035*^9, 3.847933207582979*^9}, {
  3.847933296077785*^9, 3.84793329797926*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"ab3621ef-fa5e-4e10-b334-a217b01cb434"],

Cell[TextData[{
 StyleBox["Directive 2: ",
  FontWeight->"Bold"],
 "Check that this code expresses the events in an easier to read format"
}], "Text",
 CellChangeTimes->{{3.850672399602736*^9, 3.850672424207121*^9}, {
  3.850672455785391*^9, 
  3.850672460341157*^9}},ExpressionUUID->"aa614eed-c62a-474b-8c4c-\
09c85ba95ff9"],

Cell[BoxData[{
 RowBox[{"EventPrint", "[", 
  RowBox[{"ioeetoeeEvents", "[", 
   RowBox[{"[", "11", "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"EventPrint", "[", 
  RowBox[{"oeetoeeEvents", "[", 
   RowBox[{"[", "11", "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.847933239781996*^9, 3.847933244448801*^9}, {
  3.848279624285329*^9, 3.8482796256699953`*^9}, {3.849965403301249*^9, 
  3.849965413539419*^9}, {3.850672433473374*^9, 
  3.850672434344537*^9}},ExpressionUUID->"0d5cbe6d-baff-4390-a30f-\
13d9f42c5c6e"],

Cell[TextData[{
 StyleBox["Question 5:",
  FontWeight->"Bold"],
 " Are you surprised that the electrons and positrons have no mass? Why or \
why not?",
 "\n",
 StyleBox["Answer:",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.847933736810547*^9, 3.8479337414297543`*^9}, {
  3.8482796363350554`*^9, 3.8482796500319357`*^9}, {3.848413012002726*^9, 
  3.84841302723641*^9}, {3.850672483385029*^9, 
  3.850672545977289*^9}},ExpressionUUID->"8878284d-da1d-4f69-885b-\
9a2a4f7d8937"],

Cell["\<\
Now that we have all these events, what can we learn?

We can learn where the particle hit the detector, the \[Theta] and \[Phi] \
coordinates
Here \[Phi] is the angle around the cylinder of the detector and \[Theta] is \
zero along the z-axis and \[Pi]/2 pointing perpendicularly from the axis.

I am writing functions that do this for this example case. You\
\[CloseCurlyQuote]ll need to write similar code below, so make sure you \
understand how this code is working (or can at least copy it effectively...)\
\>", "Text",
 CellChangeTimes->{{3.848413184999508*^9, 3.848413199301179*^9}, {
  3.848413754807831*^9, 3.848413841301091*^9}, {3.850672538128128*^9, 
  3.850672540297864*^9}, {3.8506725777708673`*^9, 
  3.850672617780107*^9}},ExpressionUUID->"406f053b-7bbb-4d05-be8f-\
4efaa6f87e4b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"thetaOf", "[", 
    RowBox[{"{", 
     RowBox[{
     "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "px_", ",", 
      "py_", ",", "pz_", ",", "___"}], "}"}], "]"}], ":=", " ", 
   RowBox[{"ArcCos", "[", 
    FractionBox["pz", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["px", "2"], " ", "+", " ", 
       SuperscriptBox["py", "2"], "+", " ", 
       SuperscriptBox["pz", "2"]}]]], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"phifn", "[", 
     RowBox[{"px_", ",", "py_"}], "]"}], ":=", 
    RowBox[{"Which", "[", "\[IndentingNewLine]", " ", 
     RowBox[{
      RowBox[{"py", " ", ">", " ", "0"}], ",", " ", "\[IndentingNewLine]", 
      RowBox[{"ArcTan", "[", 
       RowBox[{"px", ",", "py"}], "]"}], "\[IndentingNewLine]", ",", 
      "\[IndentingNewLine]", " ", 
      RowBox[{"py", " ", "<", " ", "0"}], ",", " ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"2", "\[Pi]"}], " ", "+", " ", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"px", ",", "py"}], "]"}]}]}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "This", " ", "function", " ", "is", " ", "defined", " ", "such", " ", 
     "that", " ", "\[Phi]"}], "\[Element]", 
    RowBox[{"[", 
     RowBox[{"0", ",", 
      RowBox[{"2", "\[Pi]"}]}], "]"}]}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"phiOf", "[", 
    RowBox[{"{", 
     RowBox[{
     "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "px_", ",", 
      "py_", ",", "pz_", ",", "___"}], "}"}], "]"}], ":=", " ", 
   RowBox[{"phifn", "[", 
    RowBox[{"px", ",", "py"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.84841325618508*^9, 3.848413319151257*^9}, {
  3.849964411399302*^9, 
  3.8499644909593983`*^9}},ExpressionUUID->"c87b641b-dd91-45cc-83a8-\
cc5654ce9eca"],

Cell[TextData[{
 StyleBox["Directive 3: ",
  FontWeight->"Bold"],
 "Check that the code works on some incoming particle events."
}], "Text",
 CellChangeTimes->{{3.850672628531582*^9, 3.850672630923808*^9}, {
  3.850672664321048*^9, 3.850672676265777*^9}, {3.8506731834328117`*^9, 
  3.850673185678342*^9}},ExpressionUUID->"fff13d23-99c8-455d-b3cb-\
1838618d1ff2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"thetaOf", "[", 
  RowBox[{"ioeetoeeEvents", "[", 
   RowBox[{"[", 
    RowBox[{"11", ",", "1"}], "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"phiOf", "[", 
  RowBox[{"ioeetoeeEvents", "[", 
   RowBox[{"[", 
    RowBox[{"11", ",", "1"}], "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"thetaOf", "[", 
  RowBox[{"ioeetoeeEvents", "[", 
   RowBox[{"[", 
    RowBox[{"11", ",", "2"}], "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"phiOf", "[", 
  RowBox[{"ioeetoeeEvents", "[", 
   RowBox[{"[", 
    RowBox[{"11", ",", "2"}], "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.848413343051053*^9, 3.8484134118316927`*^9}, {
  3.8484139411658173`*^9, 3.848413970930966*^9}, {3.849965459802168*^9, 
  3.849965481997552*^9}, {3.850672746156323*^9, 3.850672762149022*^9}},
 CellLabel->
  "In[459]:=",ExpressionUUID->"782d49ec-7998-46a2-926f-0513b3c35ed7"],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{{3.848413345486845*^9, 3.848413382149611*^9}, 
   3.8484134123173227`*^9, {3.8484139436452208`*^9, 3.848413971943487*^9}, 
   3.8499645286103067`*^9, 3.8499654833369427`*^9, 3.8506727627369537`*^9},
 CellLabel->
  "Out[459]=",ExpressionUUID->"a5a0daf4-9dbd-460c-bcca-d0069b78daf1"],

Cell[BoxData["3.141592653589793`"], "Output",
 CellChangeTimes->{{3.848413345486845*^9, 3.848413382149611*^9}, 
   3.8484134123173227`*^9, {3.8484139436452208`*^9, 3.848413971943487*^9}, 
   3.8499645286103067`*^9, 3.8499654833369427`*^9, 3.850672762743566*^9},
 CellLabel->
  "Out[461]=",ExpressionUUID->"7ab2ecb0-3d67-4821-a4f7-8d9460077eb0"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Question 6:",
  FontWeight->"Bold"],
 " Why is nothing returned for the \[Phi] values?\n",
 StyleBox["Answer:\nQuestion 7:",
  FontWeight->"Bold"],
 " Do the theta values surprise you? Check another few events and explain why \
they are all the same.\n",
 StyleBox["Answer:",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.8506728676421337`*^9, 
  3.850672959480692*^9}},ExpressionUUID->"4e0f9d27-0291-4ec8-95af-\
da7997e0ec76"],

Cell["\<\
Clearly it is not very interesting (except as a check) to look at the \
incoming particles. Let\[CloseCurlyQuote]s focus on the outgoing. We really \
want to look at the whole population of particles we\[CloseCurlyQuote]ve \
generated. This can be done using the code below. Again, you should make sure \
you understand how it works. \
\>", "Text",
 CellChangeTimes->{{3.8484236987339067`*^9, 3.848423705316332*^9}, {
  3.850672978452839*^9, 
  3.850673040752317*^9}},ExpressionUUID->"e242e506-2f8c-40b4-9afd-\
08d4dff06bd7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"theta", "[", "event_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{"thetaOf", ",", "event", ",", 
      RowBox[{"{", "1", "}"}]}], "]"}], "//", "Flatten"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"phi", "[", "event_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{"phiOf", ",", "event", ",", 
      RowBox[{"{", "1", "}"}]}], "]"}], "//", "Flatten"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.8484237321187687`*^9, 3.848423742192333*^9}},
 CellLabel->
  "In[384]:=",ExpressionUUID->"b58dadb7-59fc-472f-b36b-5752c48f9fba"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"thetaList", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"theta", "/@", "oeetoeeEvents"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phiList", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"phi", "/@", "oeetoeeEvents"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.848423877942361*^9, 3.848423910062251*^9}, {
  3.848423960121377*^9, 3.8484239890413713`*^9}, {3.849965494786604*^9, 
  3.849965511431761*^9}},
 CellLabel->
  "In[403]:=",ExpressionUUID->"5141f5e4-448f-4462-9353-fe22946b125f"],

Cell[TextData[{
 StyleBox["Directive 4: ",
  FontWeight->"Bold"],
 "Adapt the code below to make a histogram of \[Theta] and \[Phi] for all the \
outgoing particles\nFirst consider \[Theta]."
}], "Text",
 CellChangeTimes->{{3.848423584904664*^9, 3.848423603928431*^9}, {
   3.8506731924216433`*^9, 3.8506732541704283`*^9}, 
   3.850673353764552*^9},ExpressionUUID->"23b90393-38ac-4687-97a0-\
127def758889"],

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"thetaList", ",", 
   RowBox[{"{", "0.1", "}"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<\!\(\*SuperscriptBox[\(e\), \(+\)]\)\!\(\*SuperscriptBox[\(e\), \
\(-\)]\)\[Rule]\!\(\*SuperscriptBox[\(e\), \
\(+\)]\)\!\(\*SuperscriptBox[\(e\), \(-\)]\)\>\""}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<events\>\""}], "}"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.848423998205723*^9, 3.848424002129238*^9}, {
  3.8484241272848682`*^9, 3.848424162807019*^9}, {3.848424210777069*^9, 
  3.848424259682199*^9}, {3.8499655250216627`*^9, 3.8499655535405903`*^9}, {
  3.85067336886552*^9, 3.850673376825268*^9}},
 CellLabel->
  "In[465]:=",ExpressionUUID->"598f8522-3703-4b74-83fe-5f8f6dc522dc"],

Cell[TextData[{
 StyleBox["Question 8: ",
  FontWeight->"Bold"],
 "Where, within the detector, do most of the produced particles end up. Why \
is this?\n",
 StyleBox["Answer:",
  FontWeight->"Bold"],
 " \n\nNow let\[CloseCurlyQuote]s look at \[Phi]."
}], "Text",
 CellChangeTimes->{{3.850673266029421*^9, 
  3.850673351035315*^9}},ExpressionUUID->"c19871a3-34f3-4e31-ae05-\
91b7aa39a143"],

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"phiList", ",", 
   RowBox[{"{", "0.1", "}"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<\!\(\*SuperscriptBox[\(e\), \(+\)]\)\!\(\*SuperscriptBox[\(e\), \
\(-\)]\)\[Rule]\!\(\*SuperscriptBox[\(e\), \
\(+\)]\)\!\(\*SuperscriptBox[\(e\), \(-\)]\)\>\""}], ",", " ", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Phi]\>\"", ",", "\"\<events\>\""}], "}"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8484241068112583`*^9, 3.8484241117513866`*^9}, {
  3.84842417287999*^9, 3.848424174407134*^9}, {3.848424274229725*^9, 
  3.848424276769609*^9}, {3.848424381444021*^9, 3.848424396113082*^9}, {
  3.849965602075781*^9, 3.8499656063001738`*^9}, {3.850673389638571*^9, 
  3.85067338978905*^9}},
 CellLabel->
  "In[466]:=",ExpressionUUID->"e66aa5cb-d95d-4f1b-b48e-696c3a2d2afe"],

Cell[TextData[{
 StyleBox["Question 9: ",
  FontWeight->"Bold"],
 "What does the \[Phi] histogram mean about where the particles end up? Is \
this surprising, why or why not?\n",
 StyleBox["Answer:",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.8506734124729147`*^9, 3.850673414867551*^9}, {
  3.850673460568665*^9, 
  3.850673514913082*^9}},ExpressionUUID->"0e8a6bdb-4708-418f-a5f3-\
7fa8d01adb3e"],

Cell[TextData[{
 "Rapidity and\n pseduo-rapidity \[Eta]\n \n ",
 StyleBox["Directive 4:",
  FontWeight->"Bold"],
 " Using the formulae given in class write functions for determining the \
rapidity and pseudorapidity or a particle from an event. Then for a list of \
many events."
}], "Text",
 CellChangeTimes->{{3.848413059640121*^9, 3.8484130827323313`*^9}, {
  3.848414088342222*^9, 3.8484140914256067`*^9}, {3.850674174996394*^9, 
  3.850674303315885*^9}},ExpressionUUID->"afe5bb5a-92bd-4626-a46c-\
b4d6f487c0de"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rapOf", "[", 
    RowBox[{"{", 
     RowBox[{
     "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "px_", ",", 
      "py_", ",", "pz_", ",", "e_", ",", "___"}], "}"}], "]"}], ":="}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"etaOf", "[", 
    RowBox[{"{", 
     RowBox[{
     "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "px_", ",", 
      "py_", ",", "pz_", ",", "e_", ",", "___"}], "}"}], "]"}], ":="}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rap", "[", "event_", "]"}], " ", ":="}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eta", "[", "event_", "]"}], " ", ":="}], " ", ";"}]}], "Input",
 CellChangeTimes->{{3.848414037125293*^9, 3.8484140776807947`*^9}, {
  3.848424837277649*^9, 3.8484248654740057`*^9}, {3.850674275487981*^9, 
  3.850674311214432*^9}},ExpressionUUID->"f7561028-cf4d-428e-89b4-\
9ba3f3077ee3"],

Cell[TextData[{
 " ",
 StyleBox["Directive 5: ",
  FontWeight->"Bold"],
 "Make histograms of rapidity and pseudorapidity."
}], "Text",
 CellChangeTimes->{{3.8506743338643913`*^9, 
  3.85067437579716*^9}},ExpressionUUID->"0181486b-af45-48b0-a5de-\
8a3f4331d931"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rapList", "="}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"etaList", "="}], ";"}]}], "Input",
 CellChangeTimes->{{3.848423877942361*^9, 3.848423910062251*^9}, {
  3.848423960121377*^9, 3.8484239890413713`*^9}, {3.848424890027275*^9, 
  3.848424905466885*^9}, {3.849965750285174*^9, 3.84996575687535*^9}, {
  3.850674382845408*^9, 
  3.8506743857760067`*^9}},ExpressionUUID->"1028290a-c6d0-4f93-b3f8-\
2c26ce934a45"],

Cell[TextData[{
 StyleBox["Question 10:",
  FontWeight->"Bold"],
 " How do the two histograms compare and why?\n",
 StyleBox["Answer:\nQuestion 11:",
  FontWeight->"Bold"],
 " How does the shape of the \[Eta] histogram compare to \[Theta] ? What is \
(approximately) the maximum \[Eta] that any produced particle attains? Why is \
that?\n",
 StyleBox["Answers:",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.85067441513239*^9, 3.8506744798997726`*^9}, {
  3.850674525500252*^9, 
  3.850674584977418*^9}},ExpressionUUID->"48c3a764-e237-4ef1-bf4b-\
86be77c67afe"],

Cell["\<\
Load the events from the run with \[Eta] < 5 and make the same rapidity and \
\[Eta] plots. \
\>", "Text",
 CellChangeTimes->{{3.84841413671511*^9, 3.848414162473525*^9}, {
  3.848424996615901*^9, 3.848425007915975*^9}, {3.848425174874386*^9, 
  3.848425224931237*^9}, {3.848428116852221*^9, 3.848428174909347*^9}, {
  3.84996584267103*^9, 3.849965875428692*^9}, {3.8506744939540653`*^9, 
  3.8506744951180687`*^9}, {3.850674591622554*^9, 3.850674593223114*^9}, {
  3.85068658168052*^9, 
  3.850686590596353*^9}},ExpressionUUID->"8a2123d1-c7c0-4bab-bd63-\
6a00ebcb97a9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ioeetoee\[Eta]5", ",", "oeetoee\[Eta]5"}], "}"}], "=", 
   RowBox[{
   "ReadEvents", "[", "\"\<proc_sm_ee_ee_1GeV_10k_eta_5.lhe\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8499658942913103`*^9, 3.8499659051920757`*^9}, {
  3.849965966717605*^9, 3.849965970539535*^9}},
 CellLabel->
  "In[416]:=",ExpressionUUID->"7ba0306f-3e52-4293-9f3a-c6ea271c21df"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rapList\[Eta]5", "="}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"etaList\[Eta]5", "="}], ";"}]}], "Input",
 CellChangeTimes->{{3.848423877942361*^9, 3.848423910062251*^9}, {
  3.848423960121377*^9, 3.8484239890413713`*^9}, {3.848424890027275*^9, 
  3.848424905466885*^9}, {3.849965750285174*^9, 3.84996575687535*^9}, {
  3.849965993342753*^9, 3.8499660046149406`*^9}, {3.850686603695661*^9, 
  3.8506866071863737`*^9}},ExpressionUUID->"bf8d95b6-ce54-493a-9934-\
0116b2b2943e"],

Cell[TextData[{
 StyleBox["Question 12:",
  FontWeight->"Bold"],
 " About how many events have |\[Eta]| < 2.5?\n",
 StyleBox["Answer:",
  FontWeight->"Bold"],
 "\n",
 StyleBox["Question 13:",
  FontWeight->"Bold"],
 " If we keep the generator cut of |\[Eta]| < 5, about how many events will \
we need to generate to get about 10,000 events with |\[Eta]| < 2.5?\n",
 StyleBox["Answer:",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.84996602832253*^9, 3.849966088836032*^9}, {
  3.850686659390607*^9, 3.850686685336213*^9}, {3.850686802713039*^9, 
  3.850686834615718*^9}, {3.850686879371036*^9, 
  3.850687018126092*^9}},ExpressionUUID->"54e42341-3f14-4565-a5b6-\
f604d9cfa381"],

Cell["\<\
The take home lesson here is that often one can be prudent about what kind of \
events are being generated. We want to ensure that the events we are taking \
the time to simulate are actually the ones we are interested it. \
\>", "Text",
 CellChangeTimes->{{3.850687022683696*^9, 
  3.8506870947701797`*^9}},ExpressionUUID->"508d1b3a-e8da-4b52-bf5c-\
63b6d8a02887"],

Cell[TextData[{
 "Transverse momentum ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "T"], TraditionalForm]],ExpressionUUID->
  "5be6e348-7302-4417-9cc8-a3fbb152755f"],
 "(and energy)\n",
 StyleBox["Directive 5:",
  FontWeight->"Bold"],
 " Define functions that find the transverse momentum and the energy of a \
given particle. Then write the versions that apply to entire events."
}], "Text",
 CellChangeTimes->{{3.848413094089827*^9, 3.84841310412116*^9}, {
  3.8506871187566767`*^9, 3.850687175568016*^9}, {3.854057557194175*^9, 
  3.854057591614419*^9}},ExpressionUUID->"ab12f924-b78c-4313-a42b-\
09bafd8a0112"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ptOf", "[", 
    RowBox[{"{", 
     RowBox[{
     "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "px_", ",", 
      "py_", ",", "___"}], "}"}], "]"}], ":="}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"enOf", "[", 
    RowBox[{"{", 
     RowBox[{
     "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", 
      "_", ",", "_", ",", "En_", ",", "___"}], "}"}], "]"}], ":="}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pT", "[", "event_", "]"}], "  ", ":="}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"en", "[", "event_", "]"}], ":="}], ";"}]}], "Input",
 CellChangeTimes->{{3.848425288997813*^9, 3.848425298268345*^9}, {
  3.848425859950328*^9, 3.8484259058919783`*^9}, {3.8506871784327087`*^9, 
  3.850687190185295*^9}},ExpressionUUID->"9de44623-be4b-45e4-86db-\
b17abd920e8a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pTList", "="}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"enList", "="}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pTList\[Eta]5", "="}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"enList\[Eta]5", "="}], ";"}]}], "Input",
 CellChangeTimes->{{3.848425312599045*^9, 3.848425317950379*^9}, {
  3.8484259096052217`*^9, 3.8484259252159777`*^9}, {3.849966204848568*^9, 
  3.849966210512595*^9}, {3.8506871952829523`*^9, 
  3.8506872249749107`*^9}},ExpressionUUID->"496ad961-e15e-4643-9ede-\
b18cb36dd95a"],

Cell[TextData[{
 StyleBox["Directive 6:",
  FontWeight->"Bold"],
 " Make histograms of transverse momentum for both the |\[Eta]| < 2.5 and |\
\[Eta]| < 5 events."
}], "Text",
 CellChangeTimes->{{3.850687254600059*^9, 
  3.850687303310588*^9}},ExpressionUUID->"2c87322d-1d2c-4ebc-a434-\
afc1e8d7267d"],

Cell[TextData[{
 StyleBox["Question 14:",
  FontWeight->"Bold"],
 " Explain how and why the two histograms differ.\n",
 StyleBox["Answer:",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.8506877639338713`*^9, 
  3.850687800691729*^9}},ExpressionUUID->"34d34ccb-d3f2-4f54-becf-\
82d6d03d4aec"],

Cell[TextData[{
 StyleBox["Directive 7: ",
  FontWeight->"Bold"],
 "Make a histogram of the energy. Note that it doesn\[CloseCurlyQuote]t \
really work. Take a look at 50 or so particle energies to see what\
\[CloseCurlyQuote]s going on"
}], "Text",
 CellChangeTimes->{{3.850687811457917*^9, 3.850687816458271*^9}, {
  3.850688599737582*^9, 
  3.850688715794813*^9}},ExpressionUUID->"38349087-6416-473f-8424-\
f22d29baccd1"],

Cell[BoxData[
 RowBox[{"enList", "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "50"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.848426019212226*^9, 3.848426025624028*^9}},
 CellLabel->
  "In[298]:=",ExpressionUUID->"679658e6-60bb-4cd7-994c-0e19e41b0ee4"],

Cell[TextData[{
 StyleBox["Question 15: ",
  FontWeight->"Bold"],
 "Explain the form of the energy list.\n",
 StyleBox["Answer:",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.8506887309465446`*^9, 
  3.850688758400833*^9}},ExpressionUUID->"5540ae75-ff26-4a56-93f1-\
fa62ee6e901f"],

Cell["\<\
So far we have looked at each particle individually, now lets look at how the \
two final state particles relate to each other
\[CapitalDelta]\[Phi] finds the difference in \[Phi] between two particles\
\>", "Text",
 CellChangeTimes->{{3.848426208980792*^9, 3.848426212315053*^9}, {
  3.848426483858337*^9, 3.8484265074639797`*^9}, {3.850688817240761*^9, 
  3.850688842343566*^9}},ExpressionUUID->"68841ae1-6900-48d5-a598-\
673aa5e9376e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"AbsMin", "[", "list_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Sort", "[", 
     RowBox[{"list", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Abs", "[", "#1", "]"}], "<", 
        RowBox[{"Abs", "[", "#2", "]"}]}], "&"}]}], "]"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DeltaPhi", "[", 
    RowBox[{"{", 
     RowBox[{"part1_", ",", "part2_"}], "}"}], "]"}], ":=", 
   RowBox[{"AbsMin", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"phiOf", "[", "part1", "]"}], "-", 
        RowBox[{"phiOf", "[", "part2", "]"}]}], ")"}], "\[IndentingNewLine]", 
      ",", "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "\[Pi]"}], " ", "-", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"phiOf", "[", "part1", "]"}], "-", 
          RowBox[{"phiOf", "[", "part2", "]"}]}], ")"}]}], ")"}], 
      "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "\[Pi]"}], " ", "+", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"phiOf", "[", "part1", "]"}], "-", 
          RowBox[{"phiOf", "[", "part2", "]"}]}], ")"}]}], ")"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.848426571408585*^9, 3.848426583294559*^9}, 
   3.84842664029908*^9},
 CellLabel->
  "In[304]:=",ExpressionUUID->"0454e0e7-58d5-4b58-bd31-34851f4f322a"],

Cell[TextData[{
 StyleBox["Question 16: ",
  FontWeight->"Bold"],
 "What do you expect to find when you find the \[CapitalDelta]\[Phi] of the \
outgoing electrons?\n",
 StyleBox["Answer:",
  FontWeight->"Bold"],
 " "
}], "Text",
 CellChangeTimes->{{3.850688891797016*^9, 3.8506888972595778`*^9}, {
  3.850688970727376*^9, 
  3.850689033210229*^9}},ExpressionUUID->"d1a92abc-c13e-42ce-ac6c-\
f77a612ca67a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DeltaPhiList", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"DeltaPhi", "/@", "oeetoeeEvents"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8484266096200953`*^9, 3.84842662801217*^9}, {
   3.8499665152485037`*^9, 3.8499665193554373`*^9}, 3.850688879563816*^9, {
   3.8506889357305307`*^9, 
   3.8506889359797163`*^9}},ExpressionUUID->"04053e14-c829-4bcd-9392-\
4dae3f8cdfdf"],

Cell[TextData[{
 StyleBox["Question 17:",
  FontWeight->"Bold"],
 " Were you correct? Either way, comment on the \[CapitalDelta]\[Phi] \
results.\n",
 StyleBox["Answer:",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.848426660234153*^9, 3.8484266769908447`*^9}, {
  3.8506890467258587`*^9, 
  3.850689094660775*^9}},ExpressionUUID->"009e401c-e8eb-495b-a731-\
27fdd15ed5d0"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalDelta]R", "=", 
    SqrtBox[
     RowBox[{
      SuperscriptBox["\[CapitalDelta]\[Eta]", "2"], "+", 
      SuperscriptBox["\[CapitalDelta]\[Phi]", "2"]}]]}], TraditionalForm]],
  ExpressionUUID->"ec288fec-1807-453a-9ab9-f60014ef5c8c"],
 "\n is a measure of the angular separation between the particles \nNote that \
it can be no less that \[CapitalDelta]\[Phi] "
}], "Text",
 CellChangeTimes->{{3.8484131160240307`*^9, 3.8484131206542377`*^9}, {
  3.848426798253063*^9, 3.848426801117249*^9}, {3.8484270292751293`*^9, 
  3.848427038569002*^9}, {3.8484274572884207`*^9, 3.848427518643352*^9}, {
  3.850689117117614*^9, 
  3.850689130799561*^9}},ExpressionUUID->"46083b96-fd15-4b0d-9120-\
04b2e8659767"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DeltaR", "[", 
    RowBox[{"{", 
     RowBox[{"part1_", ",", "part2_"}], "}"}], "]"}], ":=", 
   SqrtBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"etaOf", "[", "part1", "]"}], " ", "-", " ", 
        RowBox[{"etaOf", "[", "part2", "]"}]}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"DeltaPhi", "[", 
       RowBox[{"{", 
        RowBox[{"part1", ",", "part2"}], "}"}], "]"}], "2"]}]]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.84842684615283*^9, 3.848426888793312*^9}},
 CellLabel->
  "In[309]:=",ExpressionUUID->"cb840d87-abd7-4716-90b9-e073ca14bccc"],

Cell[TextData[{
 StyleBox["Directive 8:",
  FontWeight->"Bold"],
 " Make histograms of \[CapitalDelta]R for both the |\[Eta]| < 2.5 and \
|\[Eta]| < 5 events."
}], "Text",
 CellChangeTimes->{{3.850689202225265*^9, 
  3.85068923928084*^9}},ExpressionUUID->"2ede5fd2-c07e-4a85-beb1-\
62009fd7edd5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DeltaRList", "="}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DeltaRList\[Eta]5", "="}], ";"}]}], "Input",
 CellChangeTimes->{{3.848426902440374*^9, 3.8484269054554453`*^9}, {
  3.849966538229887*^9, 3.8499665643757467`*^9}, {3.8506891466640997`*^9, 
  3.850689150805211*^9}},ExpressionUUID->"ddaef1ac-f27c-4436-938b-\
aeb9657406bd"],

Cell[TextData[{
 StyleBox["Reflection 3:",
  FontWeight->"Bold"],
 " Comment on the two histograms.\n",
 StyleBox["Answer:",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.849966741287385*^9, 3.849966754140016*^9}, {
  3.850689278964549*^9, 
  3.8506893020778*^9}},ExpressionUUID->"ef33443b-d9d6-4bc9-ab70-5dcdfbcda155"],

Cell["\<\
Invariant Mass of of two or more objects is obtained by adding the 4-vector \
of all the particle and asking what the \[OpenCurlyDoubleQuote]mass\
\[CloseCurlyDoubleQuote] of the result is\
\>", "Text",
 CellChangeTimes->{{3.848413131287086*^9, 3.848413134344059*^9}, {
  3.84842753183539*^9, 3.84842755733497*^9}, {3.850689318390122*^9, 
  3.850689346404632*^9}},ExpressionUUID->"513a85f4-30ed-4659-a449-\
266c3659db95"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FourVectorFrom", "[", 
    RowBox[{"{", 
     RowBox[{
     "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "px_", ",", 
      "py_", ",", "pz_", ",", "En_", ",", "___"}], "}"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"{", 
    RowBox[{"En", ",", " ", "px", ",", " ", "py", ",", "pz"}], " ", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FourLength", "[", 
    RowBox[{"{", 
     RowBox[{"En_", ",", "px_", ",", "py_", ",", "pz_"}], "}"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     SuperscriptBox["En", "2"], " ", "-", " ", 
     SuperscriptBox["px", "2"], " ", "-", " ", 
     SuperscriptBox["py", "2"], "-", 
     SuperscriptBox["pz", "2"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InvMass", "[", "particles_", "]"}], ":=", " ", 
   RowBox[{"FourLength", "[", " ", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"FourVectorFrom", "[", 
       RowBox[{"particles", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "particles", "]"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.848427709020978*^9, 3.848427774160297*^9}, {
  3.848427860823573*^9, 3.848427864468788*^9}},
 CellLabel->
  "In[321]:=",ExpressionUUID->"d87bf613-fb24-4bb3-891d-f5e0eacb9b24"],

Cell[TextData[{
 StyleBox["Directive 9:",
  FontWeight->"Bold"],
 " Determine the invariant mass of the outgoing particles."
}], "Text",
 CellChangeTimes->{{3.850689387865176*^9, 
  3.85068943063894*^9}},ExpressionUUID->"fc7c085e-e973-4dad-b98c-\
dd7547b26195"],

Cell[BoxData[
 RowBox[{
  RowBox[{"InvMassList", "="}], ";"}]], "Input",
 CellChangeTimes->{{3.848427790767314*^9, 3.8484278066163797`*^9}, {
   3.849966798496139*^9, 3.849966801183927*^9}, 
   3.8506894120033484`*^9},ExpressionUUID->"e063e316-9df5-45ec-9a0f-\
9ef92f778f3c"],

Cell[TextData[{
 StyleBox["Reflection 4:",
  FontWeight->"Bold"],
 " Comment on the results.\n",
 StyleBox["Answer:",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.848427901347234*^9, 3.8484279015180607`*^9}, {
  3.848427966390576*^9, 3.8484279976605597`*^9}, {3.850689440612384*^9, 
  3.85068945092435*^9}},ExpressionUUID->"d80d4821-712d-4584-a6d0-\
953689fb78db"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1032, 250},
WindowMargins->{{30, Automatic}, {17, Automatic}},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Text"], Background -> RGBColor[0.87, 0.94, 1]]}, Visible -> 
  False, FrontEndVersion -> 
  "12.1 for Microsoft Windows (64-bit) (June 19, 2020)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"8d6a60b0-87fb-4700-a761-ed4b92ff77f3"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 240, 4, 98, "Title",ExpressionUUID->"e451d42f-665e-4dc2-9e86-ad5dedf74188"],
Cell[823, 28, 631, 13, 94, "Text",ExpressionUUID->"9bd9001e-f61e-489f-923a-2e0c6f1e5f73"],
Cell[1457, 43, 666, 17, 226, "Text",ExpressionUUID->"743fcf0d-8609-4ed0-90a1-753b043aef8f"],
Cell[2126, 62, 1820, 33, 534, "Text",ExpressionUUID->"243c15a7-213b-4779-b17b-03e997517f9d"],
Cell[3949, 97, 271, 6, 50, "Text",ExpressionUUID->"4ed99dd4-4b5a-47cd-a83a-c569ae3ed6f9"],
Cell[4223, 105, 800, 18, 292, "Text",ExpressionUUID->"99c59259-b3e3-4109-9487-6a76ebfe5fd1"],
Cell[5026, 125, 849, 31, 578, "Text",ExpressionUUID->"9234bf51-0bdb-4713-9d91-253128768898"],
Cell[5878, 158, 307, 6, 50, "Text",ExpressionUUID->"5cd4cd00-1eac-4887-86b9-e523ba3eb1d2"],
Cell[6188, 166, 267, 9, 138, "Text",ExpressionUUID->"c7c98e3d-70bb-4853-b88f-c1698a4b0d20"],
Cell[CellGroupData[{
Cell[6480, 179, 273, 4, 53, "Subtitle",ExpressionUUID->"464b9e89-5a8e-4736-ba41-45f4b6172216"],
Cell[6756, 185, 475, 11, 116, "Text",ExpressionUUID->"513913eb-ca12-49e9-8b0a-4e6b6ad2b2ca"],
Cell[7234, 198, 231, 4, 50, "Text",ExpressionUUID->"b4405d13-6ca1-449d-97c0-3f3c3f0c6b6d"],
Cell[7468, 204, 475, 9, 72, "Text",ExpressionUUID->"9c7e4320-91b8-42a8-ac20-476b682947cd"],
Cell[7946, 215, 229, 4, 50, "Text",ExpressionUUID->"abca2370-dae8-4a7c-9c55-91c982fe0ad2"],
Cell[8178, 221, 681, 12, 116, "Text",ExpressionUUID->"30199bf8-edc3-402d-80a6-658d2a622450"],
Cell[8862, 235, 256, 7, 72, "Text",ExpressionUUID->"f9018144-5378-4a6d-8174-d046cb496b61"],
Cell[9121, 244, 974, 17, 138, "Text",ExpressionUUID->"08774f50-784d-4019-8f7a-541e67beb881"],
Cell[10098, 263, 2765, 48, 688, "Text",ExpressionUUID->"2f5b2eaa-4949-40ac-9a9f-471686fc13a1"],
Cell[12866, 313, 1138, 19, 292, "Text",ExpressionUUID->"3fc4b0be-dd12-4535-b758-a2f9fabed99d"],
Cell[14007, 334, 909, 16, 204, "Text",ExpressionUUID->"f244d1b0-5355-4aa1-8353-dab9a5252725"],
Cell[14919, 352, 1423, 23, 270, "Text",ExpressionUUID->"c288c277-3b50-4391-a030-2bf51746ac79"],
Cell[16345, 377, 1370, 22, 358, "Text",ExpressionUUID->"ab22be06-3ced-4a21-b3b2-c3c34df5a093"],
Cell[17718, 401, 1049, 21, 116, "Text",ExpressionUUID->"bb4230ce-2b3b-47c8-8c8c-d2d7ae1d9d1f"],
Cell[18770, 424, 1788, 27, 314, "Text",ExpressionUUID->"58e0b3f3-e1ee-4d2e-a364-d54719a8596d"],
Cell[20561, 453, 412, 10, 72, "Text",ExpressionUUID->"8c7f1393-b1c9-4061-a0d0-447e9e53a3dd"],
Cell[20976, 465, 2053, 33, 710, "Text",ExpressionUUID->"8b41c1b5-d53b-4de3-b5fd-b0329d851f35"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23066, 503, 174, 3, 53, "Subtitle",ExpressionUUID->"986de53a-4b00-48bf-9cfd-b62c2ef00bc4"],
Cell[23243, 508, 1787, 31, 336, "Text",ExpressionUUID->"0ac825c1-3898-447d-8d26-ee677babafcd"],
Cell[25033, 541, 473, 12, 72, "Text",ExpressionUUID->"0bf4564c-f1c5-4225-aace-1d9b4ff346d3"],
Cell[25509, 555, 1599, 29, 314, "Text",ExpressionUUID->"176b58e6-fa04-4e4a-8661-cc525559ca9e"],
Cell[27111, 586, 1443, 27, 314, "Text",ExpressionUUID->"08bb88b2-fe10-4297-b958-a0ba889fbc9d"],
Cell[28557, 615, 613, 11, 94, "Text",ExpressionUUID->"25e107a8-0a62-42ac-a416-c3b99ff38fc3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29207, 631, 166, 3, 53, "Subtitle",ExpressionUUID->"9c664d8e-5b71-478c-86ea-e9791ce94237"],
Cell[29376, 636, 1015, 20, 204, "Text",ExpressionUUID->"8d868243-5395-4aa5-bc44-75e1651ef210"],
Cell[30394, 658, 531, 10, 94, "Text",ExpressionUUID->"a6430dbd-984e-4c39-bb96-edad54dea994"],
Cell[30928, 670, 255, 5, 28, "Input",ExpressionUUID->"dd3126e5-d9de-4e39-8d66-f3148bb4da7f"],
Cell[31186, 677, 365, 7, 72, "Text",ExpressionUUID->"a8c9183b-b20c-46c0-b5f2-c13fb9fbbf93"],
Cell[31554, 686, 971, 22, 126, "Input",ExpressionUUID->"93842551-1e04-4d04-abbe-7be869c3f791"],
Cell[32528, 710, 3892, 60, 1062, "Text",ExpressionUUID->"aae730d9-5b9a-4d0c-b7f1-aad7fe54e5fb"],
Cell[36423, 772, 4907, 123, 418, "Input",ExpressionUUID->"67f6f86b-9e5e-4571-b3c0-c22f3640b516"],
Cell[41333, 897, 665, 16, 116, "Text",ExpressionUUID->"5df13bd4-e8a4-440c-957d-92ad0a7f69e7"],
Cell[42001, 915, 384, 7, 72, "Text",ExpressionUUID->"6acb5a16-c321-4896-a100-a8cd1e424c7d"],
Cell[42388, 924, 405, 8, 72, "Text",ExpressionUUID->"bfa093da-94b5-4532-816e-2c61df2ea4b5"],
Cell[42796, 934, 502, 10, 72, "Text",ExpressionUUID->"db133696-1863-4b9e-a3be-ab9be1725d8c"],
Cell[43301, 946, 513, 11, 28, "Input",ExpressionUUID->"ffe1c39c-c29c-452d-8eb8-dedab0b1a70f"],
Cell[43817, 959, 443, 7, 48, "Input",ExpressionUUID->"33069753-03c6-4944-814e-d302fe833bf8"],
Cell[44263, 968, 405, 8, 48, "Input",ExpressionUUID->"2fc73d08-c346-4c59-bba8-1e0b3296db27"],
Cell[44671, 978, 427, 8, 50, "Text",ExpressionUUID->"7d108370-9d2c-4c68-bfb9-74760a22dbe2"],
Cell[45101, 988, 11561, 322, 1699, "Input",ExpressionUUID->"ab3621ef-fa5e-4e10-b334-a217b01cb434"],
Cell[56665, 1312, 325, 8, 50, "Text",ExpressionUUID->"aa614eed-c62a-474b-8c4c-09c85ba95ff9"],
Cell[56993, 1322, 532, 11, 48, "Input",ExpressionUUID->"0d5cbe6d-baff-4390-a30f-13d9f42c5c6e"],
Cell[57528, 1335, 488, 13, 72, "Text",ExpressionUUID->"8878284d-da1d-4f69-885b-9a2a4f7d8937"],
Cell[58019, 1350, 807, 16, 182, "Text",ExpressionUUID->"406f053b-7bbb-4d05-be8f-4efaa6f87e4b"],
Cell[58829, 1368, 1954, 53, 248, "Input",ExpressionUUID->"c87b641b-dd91-45cc-83a8-cc5654ce9eca"],
Cell[60786, 1423, 363, 8, 50, "Text",ExpressionUUID->"fff13d23-99c8-455d-b3cb-1838618d1ff2"],
Cell[CellGroupData[{
Cell[61174, 1435, 902, 21, 87, "Input",ExpressionUUID->"782d49ec-7998-46a2-926f-0513b3c35ed7"],
Cell[62079, 1458, 331, 5, 32, "Output",ExpressionUUID->"a5a0daf4-9dbd-460c-bcca-d0069b78daf1"],
Cell[62413, 1465, 344, 5, 32, "Output",ExpressionUUID->"7ab2ecb0-3d67-4821-a4f7-8d9460077eb0"]
}, Open  ]],
Cell[62772, 1473, 464, 13, 116, "Text",ExpressionUUID->"4e0f9d27-0291-4ec8-95af-da7997e0ec76"],
Cell[63239, 1488, 535, 10, 94, "Text",ExpressionUUID->"e242e506-2f8c-40b4-9afd-08d4dff06bd7"],
Cell[63777, 1500, 659, 19, 48, "Input",ExpressionUUID->"b58dadb7-59fc-472f-b36b-5752c48f9fba"],
Cell[64439, 1521, 555, 14, 48, "Input",ExpressionUUID->"5141f5e4-448f-4462-9353-fe22946b125f"],
Cell[64997, 1537, 406, 9, 72, "Text",ExpressionUUID->"23b90393-38ac-4687-97a0-127def758889"],
Cell[65406, 1548, 978, 21, 28, "Input",ExpressionUUID->"598f8522-3703-4b74-83fe-5f8f6dc522dc"],
Cell[66387, 1571, 388, 11, 116, "Text",ExpressionUUID->"c19871a3-34f3-4e31-ae05-91b7aa39a143"],
Cell[66778, 1584, 1027, 22, 28, "Input",ExpressionUUID->"e66aa5cb-d95d-4f1b-b48e-696c3a2d2afe"],
Cell[67808, 1608, 410, 11, 72, "Text",ExpressionUUID->"0e8a6bdb-4708-418f-a5f3-7fa8d01adb3e"],
Cell[68221, 1621, 516, 11, 138, "Text",ExpressionUUID->"afe5bb5a-92bd-4626-a46c-b4d6f487c0de"],
Cell[68740, 1634, 975, 27, 87, "Input",ExpressionUUID->"f7561028-cf4d-428e-89b4-9ba3f3077ee3"],
Cell[69718, 1663, 261, 8, 50, "Text",ExpressionUUID->"0181486b-af45-48b0-a5de-8a3f4331d931"],
Cell[69982, 1673, 461, 10, 48, "Input",ExpressionUUID->"1028290a-c6d0-4f93-b3f8-2c26ce934a45"],
Cell[70446, 1685, 572, 15, 138, "Text",ExpressionUUID->"48c3a764-e237-4ef1-bf4b-86be77c67afe"],
Cell[71021, 1702, 580, 11, 50, "Text",ExpressionUUID->"8a2123d1-c7c0-4bab-bd63-6a00ebcb97a9"],
Cell[71604, 1715, 429, 11, 28, "Input",ExpressionUUID->"7ba0306f-3e52-4293-9f3a-c6ea271c21df"],
Cell[72036, 1728, 523, 10, 48, "Input",ExpressionUUID->"bf8d95b6-ce54-493a-9934-0116b2b2943e"],
Cell[72562, 1740, 688, 18, 116, "Text",ExpressionUUID->"54e42341-3f14-4565-a5b6-f604d9cfa381"],
Cell[73253, 1760, 375, 7, 72, "Text",ExpressionUUID->"508d1b3a-e8da-4b52-bf5c-63b6d8a02887"],
Cell[73631, 1769, 619, 15, 94, "Text",ExpressionUUID->"ab12f924-b78c-4313-a42b-09bafd8a0112"],
Cell[74253, 1786, 926, 26, 87, "Input",ExpressionUUID->"9de44623-be4b-45e4-86db-b17abd920e8a"],
Cell[75182, 1814, 565, 13, 87, "Input",ExpressionUUID->"496ad961-e15e-4643-9ede-b18cb36dd95a"],
Cell[75750, 1829, 300, 8, 50, "Text",ExpressionUUID->"2c87322d-1d2c-4ebc-a434-afc1e8d7267d"],
Cell[76053, 1839, 301, 9, 72, "Text",ExpressionUUID->"34d34ccb-d3f2-4f54-becf-82d6d03d4aec"],
Cell[76357, 1850, 424, 10, 50, "Text",ExpressionUUID->"38349087-6416-473f-8424-f22d29baccd1"],
Cell[76784, 1862, 257, 6, 28, "Input",ExpressionUUID->"679658e6-60bb-4cd7-994c-0e19e41b0ee4"],
Cell[77044, 1870, 291, 9, 72, "Text",ExpressionUUID->"5540ae75-ff26-4a56-93f1-fa62ee6e901f"],
Cell[77338, 1881, 448, 8, 72, "Text",ExpressionUUID->"68841ae1-6900-48d5-a598-673aa5e9376e"],
Cell[77789, 1891, 1592, 45, 165, "Input",ExpressionUUID->"0454e0e7-58d5-4b58-bd31-34851f4f322a"],
Cell[79384, 1938, 405, 12, 72, "Text",ExpressionUUID->"d1a92abc-c13e-42ce-ac6c-f77a612ca67a"],
Cell[79792, 1952, 416, 9, 28, "Input",ExpressionUUID->"04053e14-c829-4bcd-9392-4dae3f8cdfdf"],
Cell[80211, 1963, 383, 11, 72, "Text",ExpressionUUID->"009e401c-e8eb-495b-a731-27fdd15ed5d0"],
Cell[80597, 1976, 764, 17, 99, "Text",ExpressionUUID->"46083b96-fd15-4b0d-9120-04b2e8659767"],
Cell[81364, 1995, 659, 20, 36, "Input",ExpressionUUID->"cb840d87-abd7-4716-90b9-e073ca14bccc"],
Cell[82026, 2017, 296, 8, 50, "Text",ExpressionUUID->"2ede5fd2-c07e-4a85-beb1-62009fd7edd5"],
Cell[82325, 2027, 379, 8, 48, "Input",ExpressionUUID->"ddaef1ac-f27c-4436-938b-aeb9657406bd"],
Cell[82707, 2037, 329, 9, 72, "Text",ExpressionUUID->"ef33443b-d9d6-4bc9-ab70-5dcdfbcda155"],
Cell[83039, 2048, 431, 8, 50, "Text",ExpressionUUID->"513a85f4-30ed-4659-a449-266c3659db95"],
Cell[83473, 2058, 1437, 40, 70, "Input",ExpressionUUID->"d87bf613-fb24-4bb3-891d-f5e0eacb9b24"],
Cell[84913, 2100, 261, 7, 50, "Text",ExpressionUUID->"fc7c085e-e973-4dad-b98c-dd7547b26195"],
Cell[85177, 2109, 275, 6, 28, "Input",ExpressionUUID->"e063e316-9df5-45ec-9a0f-9ef92f778f3c"],
Cell[85455, 2117, 375, 10, 72, "Text",ExpressionUUID->"d80d4821-712d-4584-a6d0-953689fb78db"]
}, Open  ]]
}, Open  ]]
}
]
*)

