(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    318131,       6268]
NotebookOptionsPosition[    309898,       6134]
NotebookOutlinePosition[    310365,       6151]
CellTagsIndexPosition[    310322,       6148]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Homework 31", "Title",
 CellChangeTimes->{{3.449448496953125*^9, 
  3.449448499453125*^9}},ExpressionUUID->"56702932-a0f9-4976-bc60-\
0cff57ac4743"],

Cell["", "Text",
 CellChangeTimes->{{3.44944867515625*^9, 3.449448681109375*^9}, {
   3.449448727890625*^9, 3.449448780359375*^9}, 
   3.45287989913074*^9},ExpressionUUID->"4085a8ca-2dd6-4d5c-aa20-\
040b1c2b00a1"],

Cell[CellGroupData[{

Cell["31.1", "Section",
 CellChangeTimes->{{3.4528799108649654`*^9, 3.452879918224246*^9}, {
  3.8002423981649866`*^9, 
  3.8002423985019956`*^9}},ExpressionUUID->"9d698942-ba4f-4440-9ae5-\
04e350046fb8"],

Cell["\<\
The point of this problem is to gain some intuition for the Euler angles. I \
have provided quite a bit of code for you already, and you do not need to try \
to understand it. Mostly you should just look at the pictures you will \
generate!\
\>", "Text",
 CellChangeTimes->{{3.4528799362083907`*^9, 3.4528799859108796`*^9}, {
   3.452880343750049*^9, 3.4528803578748684`*^9}, 3.766336447148493*^9, {
   3.8002151216165223`*^9, 
   3.800215185793979*^9}},ExpressionUUID->"8eeaac1c-c8d5-4b6f-99ac-\
327ce5cede24"],

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.4528799917389297`*^9, 3.4528799928014164`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"1f354660-aebd-4678-8f77-36162bd9dcd0"],

Cell[CellGroupData[{

Cell["", "Subsection",ExpressionUUID->"a8a81c26-fca4-4fd3-853b-6fcb53038921"],

Cell["\<\
First, we have the unit vectors in the x, y, and z directions.\
\>", "Text",ExpressionUUID->"6f3e1734-842f-43f5-bc3f-159eef399214"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"vx", "=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vy", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vz", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.452879994629518*^9, 3.452880019535449*^9}, {
   3.45288017845529*^9, 3.452880244845065*^9}, 3.4528804032961617`*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"03d26a0f-02dd-4cef-a3f0-39a4c7311c9e"],

Cell["\<\
Next we create rotation matrices. Since the Euler rotations are made in three \
different coordinate frames, we have to rotate the second and third rotation \
matrices back into the lab frame.

You don't need to worry about these details, as all I really want you to do \
is understand the Euler angles.\
\>", "Text",
 CellChangeTimes->{{3.452880046331981*^9, 
  3.4528800502850556`*^9}},ExpressionUUID->"13b6e399-a4d5-444f-a38a-\
43f7a5406f7e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"R1", "[", "t_", "]"}], "=", " ", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], ",", "0"}], "}"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ",", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"R2", "[", "t_", "]"}], "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], ",", "0", ",", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], ",", "0", ",", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"R3", "[", "t_", "]"}], "=", " ", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}], ",", "0"}], "}"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], ",", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"R1I", "[", "t_", "]"}], "=", " ", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ",", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], ",", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ",", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"R2I", "[", "t_", "]"}], "=", " ", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], ",", "0", ",", 
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"+", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], ",", "0", ",", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"R2sp", "[", "t_", "]"}], "=", 
   RowBox[{
    RowBox[{"R1", "[", "t", "]"}], ".", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"R2", "[", "t", "]"}], ".", 
      RowBox[{"R1I", "[", "t", "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R2spI", "[", "t_", "]"}], "=", 
   RowBox[{
    RowBox[{"R1I", "[", "t", "]"}], ".", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"R2I", "[", "t", "]"}], ".", 
      RowBox[{"R1", "[", "t", "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R3sp", "[", "t_", "]"}], "=", 
   RowBox[{
    RowBox[{"R1", "[", "t", "]"}], ".", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"R2", "[", "t", "]"}], ".", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"R3", "[", "t", "]"}], ".", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"R2I", "[", "t", "]"}], ".", 
          RowBox[{"R1I", "[", "t", "]"}]}], ")"}]}], ")"}]}], ")"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.452880178517789*^9, 3.4528804079523525`*^9}, {
  3.4528804452487497`*^9, 3.4528807527916884`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"2430cdb5-2e4a-47dc-b69d-22ad49055acf"],

Cell["\<\
Now set the values of the Euler angles. We\[CloseCurlyQuote]ll set each one \
to Pi/6 as an initial example, but you should come back and play around with \
different values when you are done working through this example.\
\>", "Text",
 CellChangeTimes->{
  3.452880217064171*^9, {3.800215423991993*^9, 
   3.8002154800372334`*^9}},ExpressionUUID->"9c679298-e248-42b9-a2b6-\
6dfa68999d65"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]", "[", "t_", "]"}], "=", 
   FractionBox["\[Pi]", "6"]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]", "[", "t_", "]"}], "=", 
   FractionBox["\[Pi]", "6"]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]", "[", "t_", "]"}], "=", 
   FractionBox["\[Pi]", "6"]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4528801939707165`*^9, 3.4528802112048707`*^9}, {
  3.4528802767821565`*^9, 3.452880276813406*^9}, {3.452880322812817*^9, 
  3.452880379952711*^9}, {3.452880768869608*^9, 3.4528807819944396`*^9}, {
  3.4528815131257057`*^9, 3.4528815162819157`*^9}, {3.8002153536702228`*^9, 
  3.800215384573407*^9}, {3.8002154436530952`*^9, 3.8002154488930845`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"edf29081-febf-46f9-a312-863763075945"],

Cell["\<\
Now calculate the results of each rotation and plot the old and new axes \
after each rotation. Note the colors shift from \"light\" to \"regular\" to \
distinguish between the axes.\
\>", "Text",
 CellChangeTimes->{{3.4528800859252243`*^9, 3.452880087097084*^9}, {
  3.452881570562471*^9, 3.452881573171812*^9}, {3.800215491104333*^9, 
  3.8002154913712964`*^9}},ExpressionUUID->"d34018a8-baf9-42b1-af58-\
5caba9cdb361"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Vx1", "=", 
   RowBox[{
    RowBox[{"R1", "[", "t", "]"}], ".", "vx"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vy1", "=", 
   RowBox[{
    RowBox[{"R1", "[", "t", "]"}], ".", "vy"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vz1", "=", 
   RowBox[{
    RowBox[{"R1", "[", "t", "]"}], ".", "vz"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vx2", "=", 
   RowBox[{
    RowBox[{"R2sp", "[", "t", "]"}], ".", "Vx1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vy2", "=", 
   RowBox[{
    RowBox[{"R2sp", "[", "t", "]"}], ".", "Vy1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vz2", "=", 
   RowBox[{
    RowBox[{"R2sp", "[", "t", "]"}], ".", "Vz1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vx3", "=", 
   RowBox[{
    RowBox[{"R3sp", "[", "t", "]"}], ".", "Vx2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vy3", "=", 
   RowBox[{
    RowBox[{"R3sp", "[", "t", "]"}], ".", "Vy2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vz3", "=", 
   RowBox[{
    RowBox[{"R3sp", "[", "t", "]"}], ".", "Vz2"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4528801940175905`*^9, 3.452880217423541*^9}, {
   3.452880276813406*^9, 3.4528802769227796`*^9}, {3.4528808102128286`*^9, 
   3.4528808739620123`*^9}, 3.452881434829833*^9, {3.4528815243286877`*^9, 
   3.452881534312935*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"2bf79b2e-be4c-46f8-b59f-12461099eaa8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pl1", "=", 
   RowBox[{"{", 
    RowBox[{"LightBlue", ",", "Thick", ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "vx"}], "}"}], 
      "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pl2", "=", 
   RowBox[{"{", 
    RowBox[{"LightGreen", ",", "Thick", ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "vy"}], "}"}], 
      "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pl3", "=", 
   RowBox[{"{", 
    RowBox[{"LightRed", ",", "Thick", ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "vz"}], "}"}], 
      "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pl4", "=", 
   RowBox[{"{", 
    RowBox[{"Blue", ",", "Thick", ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "Vx1"}], "}"}], 
      "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pl5", "=", 
   RowBox[{"{", 
    RowBox[{"Green", ",", "Thick", ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "Vy1"}], "}"}], 
      "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pl6", "=", 
   RowBox[{"{", 
    RowBox[{"Red", ",", "Thick", ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "Vz1"}], "}"}], 
      "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pl7", "=", 
   RowBox[{"{", 
    RowBox[{"LightBlue", ",", "Thick", ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "Vx2"}], "}"}], 
      "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pl8", "=", 
   RowBox[{"{", 
    RowBox[{"LightGreen", ",", "Thick", ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "Vy2"}], "}"}], 
      "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pl9", "=", 
   RowBox[{"{", 
    RowBox[{"LightRed", ",", "Thick", ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "Vz2"}], "}"}], 
      "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pl10", "=", 
   RowBox[{"{", 
    RowBox[{"Blue", ",", "Thick", ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "Vx3"}], "}"}], 
      "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pl11", "=", 
   RowBox[{"{", 
    RowBox[{"Green", ",", "Thick", ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "Vy3"}], "}"}], 
      "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pl12", "=", 
   RowBox[{"{", 
    RowBox[{"Red", ",", "Thick", ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "Vz3"}], "}"}], 
      "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
     "pl1", ",", "pl2", ",", "pl3", ",", "pl4", ",", "pl5", ",", "pl6"}], 
     "}"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
     "pl4", ",", "pl5", ",", "pl6", ",", "pl7", ",", "pl8", ",", "pl9"}], 
     "}"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
     "pl7", ",", "pl8", ",", "pl9", ",", "pl10", ",", "pl11", ",", "pl12"}], 
     "}"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.4528809870543146`*^9, 3.4528813325342674`*^9}, {
  3.452881367549444*^9, 3.4528814208300123`*^9}, {3.452881690560935*^9, 
  3.4528816997014427`*^9}, {3.452881730451049*^9, 3.452881741935277*^9}, {
  3.4528817773723235`*^9, 3.4528818143406005`*^9}, {3.4528818615899954`*^9, 
  3.452881891542737*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"4a9360fa-082f-468a-8897-fabd46c83b42"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0.87, 0.94, 1], Thickness[Large], 
    Line3DBox[{{0, 0, 0}, {1, 0, 0}}]}, 
   {RGBColor[0.88, 1, 0.88], Thickness[Large], 
    Line3DBox[{{0, 0, 0}, {0, 1, 0}}]}, 
   {RGBColor[1, 0.85, 0.85], Thickness[Large], 
    Line3DBox[{{0, 0, 0}, {0, 0, 1}}]}, 
   {RGBColor[0, 0, 1], Thickness[Large], 
    Line3DBox[
     NCache[{{0, 0, 0}, {
       Rational[1, 2] 3^Rational[1, 2], Rational[1, 2], 0}}, {{0, 0, 0}, {
       0.8660254037844386, 0.5, 0}}]]}, 
   {RGBColor[0, 1, 0], Thickness[Large], 
    Line3DBox[
     NCache[{{0, 0, 0}, {
       Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2], 0}}, {{0, 0, 
       0}, {-0.5, 0.8660254037844386, 0}}]]}, 
   {RGBColor[1, 0, 0], Thickness[Large], Line3DBox[{{0, 0, 0}, {0, 0, 1}}]}},
  PlotRange->{{-1, 1}, {-1, 1}, {-1, 1}}]], "Output",
 CellChangeTimes->{3.877222877987487*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"ecc64266-bb8b-4b37-b17d-f353df2b914a"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 0, 1], Thickness[Large], 
    Line3DBox[
     NCache[{{0, 0, 0}, {
       Rational[1, 2] 3^Rational[1, 2], Rational[1, 2], 0}}, {{0, 0, 0}, {
       0.8660254037844386, 0.5, 0}}]]}, 
   {RGBColor[0, 1, 0], Thickness[Large], 
    Line3DBox[
     NCache[{{0, 0, 0}, {
       Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2], 0}}, {{0, 0, 
       0}, {-0.5, 0.8660254037844386, 0}}]]}, 
   {RGBColor[1, 0, 0], Thickness[Large], Line3DBox[{{0, 0, 0}, {0, 0, 1}}]}, 
   {RGBColor[0.87, 0.94, 1], Thickness[Large], 
    Line3DBox[
     NCache[{{0, 0, 0}, {
       Rational[1, 2] (Rational[3, 8] + Rational[-1, 4] 3^Rational[1, 2]) + 
        Rational[1, 2] 
         3^Rational[1, 2] (Rational[1, 4] + Rational[3, 8] 3^Rational[1, 2]), 
        Rational[1, 2] 
         3^Rational[1, 2] (Rational[3, 8] + Rational[-1, 4] 3^Rational[1, 2]) + 
        Rational[1, 2] (Rational[3, 4] + Rational[1, 8] 3^Rational[1, 2]), 
        Rational[-1, 2]}}, {{0, 0, 0}, {0.75, 0.4330127018922193, -0.5}}]]}, 
   {RGBColor[0.88, 1, 0.88], Thickness[Large], 
    Line3DBox[
     NCache[{{0, 0, 0}, {
       Rational[1, 2] (Rational[-1, 4] + Rational[-3, 8] 3^Rational[1, 2]) + 
        Rational[1, 2] 
         3^Rational[1, 2] (Rational[3, 8] + Rational[-1, 4] 3^Rational[1, 2]),
         Rational[1, 2] 
         3^Rational[1, 2] (Rational[3, 4] + Rational[1, 8] 3^Rational[1, 2]) + 
        Rational[1, 2] (Rational[-3, 8] + Rational[1, 4] 3^Rational[1, 2]), 
        0}}, {{0, 0, 0}, {-0.5, 0.8660254037844386, 0}}]]}, 
   {RGBColor[1, 0.85, 0.85], Thickness[Large], 
    Line3DBox[
     NCache[{{0, 0, 0}, {
       Rational[1, 4] 3^Rational[1, 2], Rational[1, 4], Rational[1, 2] 
        3^Rational[1, 2]}}, {{0, 0, 0}, {0.4330127018922193, 0.25, 
       0.8660254037844386}}]]}},
  PlotRange->{{-1, 1}, {-1, 1}, {-1, 1}}]], "Output",
 CellChangeTimes->{3.8772228780220895`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"ec849541-3abf-4d58-9785-e73e4974a668"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0.87, 0.94, 1], Thickness[Large], 
    Line3DBox[
     NCache[{{0, 0, 0}, {
       Rational[1, 2] (Rational[3, 8] + Rational[-1, 4] 3^Rational[1, 2]) + 
        Rational[1, 2] 
         3^Rational[1, 2] (Rational[1, 4] + Rational[3, 8] 3^Rational[1, 2]), 
        Rational[1, 2] 
         3^Rational[1, 2] (Rational[3, 8] + Rational[-1, 4] 3^Rational[1, 2]) + 
        Rational[1, 2] (Rational[3, 4] + Rational[1, 8] 3^Rational[1, 2]), 
        Rational[-1, 2]}}, {{0, 0, 0}, {0.75, 0.4330127018922193, -0.5}}]]}, 
   {RGBColor[0.88, 1, 0.88], Thickness[Large], 
    Line3DBox[
     NCache[{{0, 0, 0}, {
       Rational[1, 2] (Rational[-1, 4] + Rational[-3, 8] 3^Rational[1, 2]) + 
        Rational[1, 2] 
         3^Rational[1, 2] (Rational[3, 8] + Rational[-1, 4] 3^Rational[1, 2]),
         Rational[1, 2] 
         3^Rational[1, 2] (Rational[3, 4] + Rational[1, 8] 3^Rational[1, 2]) + 
        Rational[1, 2] (Rational[-3, 8] + Rational[1, 4] 3^Rational[1, 2]), 
        0}}, {{0, 0, 0}, {-0.5, 0.8660254037844386, 0}}]]}, 
   {RGBColor[1, 0.85, 0.85], Thickness[Large], 
    Line3DBox[
     NCache[{{0, 0, 0}, {
       Rational[1, 4] 3^Rational[1, 2], Rational[1, 4], Rational[1, 2] 
        3^Rational[1, 2]}}, {{0, 0, 0}, {0.4330127018922193, 0.25, 
       0.8660254037844386}}]]}, 
   {RGBColor[0, 0, 1], Thickness[Large], 
    Line3DBox[
     NCache[{{0, 0, 0}, {
       Rational[1, 2] (Rational[-1, 8] + 
          Rational[-1, 2] 
           3^Rational[1, 2] (Rational[-3, 8] + 
            Rational[1, 4] 3^Rational[1, 2])) + (
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[3, 8] + 
            Rational[-1, 4] 3^Rational[1, 2]) + 
          Rational[1, 2] (Rational[3, 4] + Rational[1, 8] 3^Rational[1, 2])) (
          Rational[1, 2] (Rational[-3, 4] + Rational[-1, 8] 3^Rational[1, 2]) + 
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[1, 8] + 
            Rational[1, 2] 
             3^Rational[1, 2] (Rational[3, 8] + 
              Rational[-1, 4] 3^Rational[1, 2]))) + (
          Rational[1, 2] (Rational[3, 8] + Rational[-1, 4] 3^Rational[1, 2]) + 
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[1, 4] + 
            Rational[3, 8] 3^Rational[1, 2])) (
          Rational[1, 2] (Rational[-3, 8] + Rational[1, 4] 3^Rational[1, 2]) + 
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[1, 8] 3^Rational[1, 2] + 
            Rational[1, 2] 
             3^Rational[1, 2] (Rational[1, 4] + 
              Rational[3, 8] 3^Rational[1, 2]))), 
        Rational[1, 2] (Rational[1, 8] 3^Rational[1, 2] + 
          Rational[1, 2] (Rational[3, 8] + 
            Rational[-1, 4] 3^Rational[1, 2])) + (
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[3, 8] + 
            Rational[-1, 4] 3^Rational[1, 2]) + 
          Rational[1, 2] (Rational[3, 4] + Rational[1, 8] 3^Rational[1, 2])) (
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[3, 4] + 
            Rational[1, 8] 3^Rational[1, 2]) + 
          Rational[1, 2] (Rational[1, 8] + 
            Rational[1, 2] 
             3^Rational[1, 2] (Rational[3, 8] + 
              Rational[-1, 4] 3^Rational[1, 2]))) + (
          Rational[1, 2] (Rational[3, 8] + Rational[-1, 4] 3^Rational[1, 2]) + 
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[1, 4] + 
            Rational[3, 8] 3^Rational[1, 2])) (
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[3, 8] + 
            Rational[-1, 4] 3^Rational[1, 2]) + 
          Rational[1, 2] (Rational[1, 8] 3^Rational[1, 2] + 
            Rational[1, 2] 
             3^Rational[1, 2] (Rational[1, 4] + 
              Rational[3, 8] 3^Rational[1, 2]))), 
        Rational[1, 2] (Rational[-3, 4] + 
          Rational[-1, 8] 3^Rational[1, 2]) + (
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[3, 8] + 
            Rational[-1, 4] 3^Rational[1, 2]) + 
          Rational[1, 2] (Rational[3, 4] + Rational[1, 8] 3^Rational[1, 2])) (
          Rational[1, 8] 3^Rational[1, 2] + 
          Rational[1, 2] (Rational[-3, 8] + 
            Rational[1, 4] 3^Rational[1, 2])) + (Rational[3, 8] + 
          Rational[1, 2] (Rational[-1, 4] + 
            Rational[-3, 8] 3^Rational[1, 2])) (
          Rational[1, 2] (Rational[3, 8] + Rational[-1, 4] 3^Rational[1, 2]) + 
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[1, 4] + 
            Rational[3, 8] 3^Rational[1, 2]))}}, {{0, 0, 0}, {
       0.3995190528383288, 0.8080127018922192, -0.4330127018922193}}]]}, 
   {RGBColor[0, 1, 0], Thickness[Large], 
    Line3DBox[
     NCache[{{0, 0, 
       0}, {(Rational[1, 2] 
           3^Rational[1, 2] (Rational[3, 4] + 
            Rational[1, 8] 3^Rational[1, 2]) + 
          Rational[1, 2] (Rational[-3, 8] + 
            Rational[1, 4] 3^Rational[1, 2])) (
          Rational[1, 2] (Rational[-3, 4] + Rational[-1, 8] 3^Rational[1, 2]) + 
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[1, 8] + 
            Rational[1, 2] 
             3^Rational[1, 2] (Rational[3, 8] + 
              Rational[-1, 4] 3^Rational[1, 2]))) + (
          Rational[1, 2] (Rational[-1, 4] + Rational[-3, 8] 3^Rational[1, 2]) + 
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[3, 8] + 
            Rational[-1, 4] 3^Rational[1, 2])) (
          Rational[1, 2] (Rational[-3, 8] + Rational[1, 4] 3^Rational[1, 2]) + 
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[1, 8] 3^Rational[1, 2] + 
            Rational[1, 2] 
             3^Rational[1, 2] (Rational[1, 4] + 
              Rational[3, 8] 3^Rational[1, 2]))), (
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[3, 4] + 
            Rational[1, 8] 3^Rational[1, 2]) + 
          Rational[1, 2] (Rational[-3, 8] + 
            Rational[1, 4] 3^Rational[1, 2])) (
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[3, 4] + 
            Rational[1, 8] 3^Rational[1, 2]) + 
          Rational[1, 2] (Rational[1, 8] + 
            Rational[1, 2] 
             3^Rational[1, 2] (Rational[3, 8] + 
              Rational[-1, 4] 3^Rational[1, 2]))) + (
          Rational[1, 2] (Rational[-1, 4] + Rational[-3, 8] 3^Rational[1, 2]) + 
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[3, 8] + 
            Rational[-1, 4] 3^Rational[1, 2])) (
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[3, 8] + 
            Rational[-1, 4] 3^Rational[1, 2]) + 
          Rational[1, 2] (Rational[1, 8] 3^Rational[1, 2] + 
            Rational[1, 2] 
             3^Rational[1, 2] (Rational[1, 4] + 
              Rational[3, 8] 3^Rational[1, 2]))), (Rational[3, 8] + 
          Rational[1, 2] (Rational[-1, 4] + 
            Rational[-3, 8] 3^Rational[1, 2])) (
          Rational[1, 2] (Rational[-1, 4] + Rational[-3, 8] 3^Rational[1, 2]) + 
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[3, 8] + 
            Rational[-1, 4] 3^Rational[1, 2])) + (
          Rational[1, 8] 3^Rational[1, 2] + 
          Rational[1, 2] (Rational[-3, 8] + 
            Rational[1, 4] 3^Rational[1, 2])) (
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[3, 4] + 
            Rational[1, 8] 3^Rational[1, 2]) + 
          Rational[1, 2] (Rational[-3, 8] + 
            Rational[1, 4] 3^Rational[1, 2]))}}, {{0, 0, 
       0}, {-0.8080127018922192, 0.5334936490538903, 
       0.24999999999999997`}}]]}, 
   {RGBColor[1, 0, 0], Thickness[Large], 
    Line3DBox[
     NCache[{{0, 0, 0}, {
       Rational[1, 2] 
         3^Rational[1, 2] (Rational[1, 8] + 
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[-3, 8] + 
            Rational[1, 4] 3^Rational[1, 2])) + 
        Rational[1, 4] (
          Rational[1, 2] (Rational[-3, 4] + Rational[-1, 8] 3^Rational[1, 2]) + 
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[1, 8] + 
            Rational[1, 2] 
             3^Rational[1, 2] (Rational[3, 8] + 
              Rational[-1, 4] 3^Rational[1, 2]))) + 
        Rational[1, 4] 
         3^Rational[1, 2] (
          Rational[1, 2] (Rational[-3, 8] + Rational[1, 4] 3^Rational[1, 2]) + 
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[1, 8] 3^Rational[1, 2] + 
            Rational[1, 2] 
             3^Rational[1, 2] (Rational[1, 4] + 
              Rational[3, 8] 3^Rational[1, 2]))), 
        Rational[1, 2] 
         3^Rational[1, 2] (Rational[-1, 8] 3^Rational[1, 2] + 
          Rational[1, 2] (Rational[-3, 8] + Rational[1, 4] 3^Rational[1, 2])) + 
        Rational[1, 4] (
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[3, 4] + 
            Rational[1, 8] 3^Rational[1, 2]) + 
          Rational[1, 2] (Rational[1, 8] + 
            Rational[1, 2] 
             3^Rational[1, 2] (Rational[3, 8] + 
              Rational[-1, 4] 3^Rational[1, 2]))) + 
        Rational[1, 4] 
         3^Rational[1, 2] (
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[3, 8] + 
            Rational[-1, 4] 3^Rational[1, 2]) + 
          Rational[1, 2] (Rational[1, 8] 3^Rational[1, 2] + 
            Rational[1, 2] 
             3^Rational[1, 2] (Rational[1, 4] + 
              Rational[3, 8] 3^Rational[1, 2]))), 
        Rational[1, 2] 
         3^Rational[1, 2] (Rational[3, 4] + Rational[1, 8] 3^Rational[1, 2]) + 
        Rational[1, 4] 
         3^Rational[1, 2] (Rational[3, 8] + 
          Rational[1, 2] (Rational[-1, 4] + 
            Rational[-3, 8] 3^Rational[1, 2])) + 
        Rational[1, 4] (Rational[1, 8] 3^Rational[1, 2] + 
          Rational[1, 2] (Rational[-3, 8] + 
            Rational[1, 4] 3^Rational[1, 2]))}}, {{0, 0, 0}, {
       0.43301270189221913`, 0.24999999999999994`, 0.8660254037844385}}]]}},
  PlotRange->{{-1, 1}, {-1, 1}, {-1, 1}}]], "Output",
 CellChangeTimes->{3.8772228780478563`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"7b079966-ada6-43e5-b9d8-6795d5efb766"]
}, Open  ]],

Cell["\<\
Finally, display the original (pastel) and final (regular) axes.\
\>", "Text",
 CellChangeTimes->{
  3.452880099721923*^9, {3.800215409549955*^9, 3.8002154109169617`*^9}, 
   3.800215512820385*^9},ExpressionUUID->"86d63338-e42f-4a09-accb-\
f965618e7536"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
     "pl1", ",", "pl2", ",", "pl3", ",", "pl10", ",", "pl11", ",", "pl12"}], 
     "}"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.4528802114548674`*^9, {3.4528819581512594`*^9, 3.4528819651355453`*^9}, {
   3.4528820254160233`*^9, 3.4528820278066177`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"0d206660-f5f5-4d0b-bfd8-dcf96b750141"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0.87, 0.94, 1], Thickness[Large], 
    Line3DBox[{{0, 0, 0}, {1, 0, 0}}]}, 
   {RGBColor[0.88, 1, 0.88], Thickness[Large], 
    Line3DBox[{{0, 0, 0}, {0, 1, 0}}]}, 
   {RGBColor[1, 0.85, 0.85], Thickness[Large], 
    Line3DBox[{{0, 0, 0}, {0, 0, 1}}]}, 
   {RGBColor[0, 0, 1], Thickness[Large], 
    Line3DBox[
     NCache[{{0, 0, 0}, {
       Rational[1, 2] (Rational[-1, 8] + 
          Rational[-1, 2] 
           3^Rational[1, 2] (Rational[-3, 8] + 
            Rational[1, 4] 3^Rational[1, 2])) + (
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[3, 8] + 
            Rational[-1, 4] 3^Rational[1, 2]) + 
          Rational[1, 2] (Rational[3, 4] + Rational[1, 8] 3^Rational[1, 2])) (
          Rational[1, 2] (Rational[-3, 4] + Rational[-1, 8] 3^Rational[1, 2]) + 
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[1, 8] + 
            Rational[1, 2] 
             3^Rational[1, 2] (Rational[3, 8] + 
              Rational[-1, 4] 3^Rational[1, 2]))) + (
          Rational[1, 2] (Rational[3, 8] + Rational[-1, 4] 3^Rational[1, 2]) + 
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[1, 4] + 
            Rational[3, 8] 3^Rational[1, 2])) (
          Rational[1, 2] (Rational[-3, 8] + Rational[1, 4] 3^Rational[1, 2]) + 
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[1, 8] 3^Rational[1, 2] + 
            Rational[1, 2] 
             3^Rational[1, 2] (Rational[1, 4] + 
              Rational[3, 8] 3^Rational[1, 2]))), 
        Rational[1, 2] (Rational[1, 8] 3^Rational[1, 2] + 
          Rational[1, 2] (Rational[3, 8] + 
            Rational[-1, 4] 3^Rational[1, 2])) + (
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[3, 8] + 
            Rational[-1, 4] 3^Rational[1, 2]) + 
          Rational[1, 2] (Rational[3, 4] + Rational[1, 8] 3^Rational[1, 2])) (
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[3, 4] + 
            Rational[1, 8] 3^Rational[1, 2]) + 
          Rational[1, 2] (Rational[1, 8] + 
            Rational[1, 2] 
             3^Rational[1, 2] (Rational[3, 8] + 
              Rational[-1, 4] 3^Rational[1, 2]))) + (
          Rational[1, 2] (Rational[3, 8] + Rational[-1, 4] 3^Rational[1, 2]) + 
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[1, 4] + 
            Rational[3, 8] 3^Rational[1, 2])) (
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[3, 8] + 
            Rational[-1, 4] 3^Rational[1, 2]) + 
          Rational[1, 2] (Rational[1, 8] 3^Rational[1, 2] + 
            Rational[1, 2] 
             3^Rational[1, 2] (Rational[1, 4] + 
              Rational[3, 8] 3^Rational[1, 2]))), 
        Rational[1, 2] (Rational[-3, 4] + 
          Rational[-1, 8] 3^Rational[1, 2]) + (
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[3, 8] + 
            Rational[-1, 4] 3^Rational[1, 2]) + 
          Rational[1, 2] (Rational[3, 4] + Rational[1, 8] 3^Rational[1, 2])) (
          Rational[1, 8] 3^Rational[1, 2] + 
          Rational[1, 2] (Rational[-3, 8] + 
            Rational[1, 4] 3^Rational[1, 2])) + (Rational[3, 8] + 
          Rational[1, 2] (Rational[-1, 4] + 
            Rational[-3, 8] 3^Rational[1, 2])) (
          Rational[1, 2] (Rational[3, 8] + Rational[-1, 4] 3^Rational[1, 2]) + 
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[1, 4] + 
            Rational[3, 8] 3^Rational[1, 2]))}}, {{0, 0, 0}, {
       0.3995190528383288, 0.8080127018922192, -0.4330127018922193}}]]}, 
   {RGBColor[0, 1, 0], Thickness[Large], 
    Line3DBox[
     NCache[{{0, 0, 
       0}, {(Rational[1, 2] 
           3^Rational[1, 2] (Rational[3, 4] + 
            Rational[1, 8] 3^Rational[1, 2]) + 
          Rational[1, 2] (Rational[-3, 8] + 
            Rational[1, 4] 3^Rational[1, 2])) (
          Rational[1, 2] (Rational[-3, 4] + Rational[-1, 8] 3^Rational[1, 2]) + 
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[1, 8] + 
            Rational[1, 2] 
             3^Rational[1, 2] (Rational[3, 8] + 
              Rational[-1, 4] 3^Rational[1, 2]))) + (
          Rational[1, 2] (Rational[-1, 4] + Rational[-3, 8] 3^Rational[1, 2]) + 
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[3, 8] + 
            Rational[-1, 4] 3^Rational[1, 2])) (
          Rational[1, 2] (Rational[-3, 8] + Rational[1, 4] 3^Rational[1, 2]) + 
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[1, 8] 3^Rational[1, 2] + 
            Rational[1, 2] 
             3^Rational[1, 2] (Rational[1, 4] + 
              Rational[3, 8] 3^Rational[1, 2]))), (
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[3, 4] + 
            Rational[1, 8] 3^Rational[1, 2]) + 
          Rational[1, 2] (Rational[-3, 8] + 
            Rational[1, 4] 3^Rational[1, 2])) (
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[3, 4] + 
            Rational[1, 8] 3^Rational[1, 2]) + 
          Rational[1, 2] (Rational[1, 8] + 
            Rational[1, 2] 
             3^Rational[1, 2] (Rational[3, 8] + 
              Rational[-1, 4] 3^Rational[1, 2]))) + (
          Rational[1, 2] (Rational[-1, 4] + Rational[-3, 8] 3^Rational[1, 2]) + 
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[3, 8] + 
            Rational[-1, 4] 3^Rational[1, 2])) (
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[3, 8] + 
            Rational[-1, 4] 3^Rational[1, 2]) + 
          Rational[1, 2] (Rational[1, 8] 3^Rational[1, 2] + 
            Rational[1, 2] 
             3^Rational[1, 2] (Rational[1, 4] + 
              Rational[3, 8] 3^Rational[1, 2]))), (Rational[3, 8] + 
          Rational[1, 2] (Rational[-1, 4] + 
            Rational[-3, 8] 3^Rational[1, 2])) (
          Rational[1, 2] (Rational[-1, 4] + Rational[-3, 8] 3^Rational[1, 2]) + 
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[3, 8] + 
            Rational[-1, 4] 3^Rational[1, 2])) + (
          Rational[1, 8] 3^Rational[1, 2] + 
          Rational[1, 2] (Rational[-3, 8] + 
            Rational[1, 4] 3^Rational[1, 2])) (
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[3, 4] + 
            Rational[1, 8] 3^Rational[1, 2]) + 
          Rational[1, 2] (Rational[-3, 8] + 
            Rational[1, 4] 3^Rational[1, 2]))}}, {{0, 0, 
       0}, {-0.8080127018922192, 0.5334936490538903, 
       0.24999999999999997`}}]]}, 
   {RGBColor[1, 0, 0], Thickness[Large], 
    Line3DBox[
     NCache[{{0, 0, 0}, {
       Rational[1, 2] 
         3^Rational[1, 2] (Rational[1, 8] + 
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[-3, 8] + 
            Rational[1, 4] 3^Rational[1, 2])) + 
        Rational[1, 4] (
          Rational[1, 2] (Rational[-3, 4] + Rational[-1, 8] 3^Rational[1, 2]) + 
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[1, 8] + 
            Rational[1, 2] 
             3^Rational[1, 2] (Rational[3, 8] + 
              Rational[-1, 4] 3^Rational[1, 2]))) + 
        Rational[1, 4] 
         3^Rational[1, 2] (
          Rational[1, 2] (Rational[-3, 8] + Rational[1, 4] 3^Rational[1, 2]) + 
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[1, 8] 3^Rational[1, 2] + 
            Rational[1, 2] 
             3^Rational[1, 2] (Rational[1, 4] + 
              Rational[3, 8] 3^Rational[1, 2]))), 
        Rational[1, 2] 
         3^Rational[1, 2] (Rational[-1, 8] 3^Rational[1, 2] + 
          Rational[1, 2] (Rational[-3, 8] + Rational[1, 4] 3^Rational[1, 2])) + 
        Rational[1, 4] (
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[3, 4] + 
            Rational[1, 8] 3^Rational[1, 2]) + 
          Rational[1, 2] (Rational[1, 8] + 
            Rational[1, 2] 
             3^Rational[1, 2] (Rational[3, 8] + 
              Rational[-1, 4] 3^Rational[1, 2]))) + 
        Rational[1, 4] 
         3^Rational[1, 2] (
          Rational[1, 2] 
           3^Rational[1, 2] (Rational[3, 8] + 
            Rational[-1, 4] 3^Rational[1, 2]) + 
          Rational[1, 2] (Rational[1, 8] 3^Rational[1, 2] + 
            Rational[1, 2] 
             3^Rational[1, 2] (Rational[1, 4] + 
              Rational[3, 8] 3^Rational[1, 2]))), 
        Rational[1, 2] 
         3^Rational[1, 2] (Rational[3, 4] + Rational[1, 8] 3^Rational[1, 2]) + 
        Rational[1, 4] 
         3^Rational[1, 2] (Rational[3, 8] + 
          Rational[1, 2] (Rational[-1, 4] + 
            Rational[-3, 8] 3^Rational[1, 2])) + 
        Rational[1, 4] (Rational[1, 8] 3^Rational[1, 2] + 
          Rational[1, 2] (Rational[-3, 8] + 
            Rational[1, 4] 3^Rational[1, 2]))}}, {{0, 0, 0}, {
       0.43301270189221913`, 0.24999999999999994`, 0.8660254037844385}}]]}},
  PlotRange->{{-1, 1}, {-1, 1}, {-1, 1}}]], "Output",
 CellChangeTimes->{3.8772228850401287`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"13ccff00-e698-48da-9af7-5cb892f2d1c0"]
}, Open  ]],

Cell["\<\
Go back and set different values for the Euler angles until you feel like you \
have a decent intuitive understanding of the angles.\
\>", "Text",
 CellChangeTimes->{{3.452880322812817*^9, 3.4528803799683356`*^9}, {
  3.4528804225459156`*^9, 3.4528804225615406`*^9}, {3.8002155178674126`*^9, 
  3.8002155614356174`*^9}, {3.8002158074736156`*^9, 
  3.8002158083186235`*^9}},ExpressionUUID->"a8101bf4-92c1-4f8d-8cbd-\
9cc6ebaa66f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "Subsection",ExpressionUUID->"71041fc9-492b-4987-8ff7-5b4dcdff4c60"],

Cell["\<\
Next, let's build some intuition for what \[Theta]dot, \[Phi]dot, and \
\[Psi]dot mean. 
We'll assume the angular velocities are all constant.\
\>", "Text",
 CellChangeTimes->{{3.8002158205806975`*^9, 3.80021582919069*^9}, {
  3.800215875135838*^9, 
  3.8002158972759123`*^9}},ExpressionUUID->"30b1183a-5cd1-4cb4-8853-\
85b3f6ef5ba5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Phi]0", "=", 
   FractionBox["\[Pi]", "6"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]0", "=", 
   FractionBox["\[Pi]", "6"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]0", "=", 
   FractionBox["\[Pi]", "6"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]dot", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]dot", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]dot", "=", "0.1"}], ";"}]}], "Input",
 CellChangeTimes->{{3.4528801944550853`*^9, 3.4528802160485587`*^9}, {
  3.452880322828442*^9, 3.4528803799683356`*^9}, {3.4528804225615406`*^9, 
  3.452880422577165*^9}, {3.4528820680873528`*^9, 3.4528820705716953`*^9}, {
  3.452882956232234*^9, 3.4528829614665422`*^9}, {3.45288313857365*^9, 
  3.4528831402455034`*^9}, {3.800215626766919*^9, 3.8002156284189262`*^9}, {
  3.8002156615121326`*^9, 3.800215664829097*^9}, {3.8002159045289392`*^9, 
  3.8002159071939764`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"24e0ac25-dbd6-45dc-8431-200a1fefc8ce"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]", "[", "t_", "]"}], "=", 
   RowBox[{"\[Phi]0", "+", 
    RowBox[{"\[Phi]dot", " ", "t"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]", "[", "t_", "]"}], "=", 
   RowBox[{"\[Theta]0", "+", 
    RowBox[{"\[Theta]dot", " ", "t"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]", "[", "t_", "]"}], "=", 
   RowBox[{"\[Psi]0", "+", 
    RowBox[{"\[Psi]dot", " ", "t"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4528801944550853`*^9, 3.4528802247828217`*^9}, {
  3.4528802769227796`*^9, 3.452880276938404*^9}, {3.4528803228440666`*^9, 
  3.452880379999585*^9}, {3.4528804225927896`*^9, 3.4528804225927896`*^9}, {
  3.452882075852878*^9, 3.452882079118461*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"b7f6add2-fd2d-484b-b4c8-b6ca416db43b"],

Cell["We now calculate the vectors.", "Text",ExpressionUUID->"8acb55f8-7415-4a3d-b010-86a707cda455"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Vx1", "=", 
   RowBox[{
    RowBox[{"R1", "[", "t", "]"}], ".", "vx"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vy1", "=", 
   RowBox[{
    RowBox[{"R1", "[", "t", "]"}], ".", "vy"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vz1", "=", 
   RowBox[{
    RowBox[{"R1", "[", "t", "]"}], ".", "vz"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vx2", "=", 
   RowBox[{
    RowBox[{"R2sp", "[", "t", "]"}], ".", "Vx1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vy2", "=", 
   RowBox[{
    RowBox[{"R2sp", "[", "t", "]"}], ".", "Vy1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vz2", "=", 
   RowBox[{
    RowBox[{"R2sp", "[", "t", "]"}], ".", "Vz1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vx3", "=", 
   RowBox[{
    RowBox[{"R3sp", "[", "t", "]"}], ".", "Vx2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vy3", "=", 
   RowBox[{
    RowBox[{"R3sp", "[", "t", "]"}], ".", "Vy2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vz3", "=", 
   RowBox[{
    RowBox[{"R3sp", "[", "t", "]"}], ".", "Vz2"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.45288019447071*^9, 3.4528802162204313`*^9}, {
  3.452880276938404*^9, 3.4528802770009036`*^9}, {3.452880810587824*^9, 
  3.452880810650323*^9}, {3.452882095462002*^9, 3.452882147273839*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"56463f2b-cd43-4890-aff9-40e832a89188"],

Cell["Now animate your plot.", "Text",
 CellChangeTimes->{
  3.452882161539281*^9},ExpressionUUID->"601c5d80-ff21-405c-88e3-\
e0b4549669c0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PL1", "=", 
   RowBox[{"{", 
    RowBox[{"Blue", ",", "Thick", ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "Vx3"}], "}"}], 
      "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PL2", "=", 
   RowBox[{"{", 
    RowBox[{"Green", ",", "Thick", ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "Vy3"}], "}"}], 
      "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PL3", "=", 
   RowBox[{"{", 
    RowBox[{"Red", ",", "Thick", ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "Vz3"}], "}"}], 
      "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Graphics3D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "pl1", ",", "pl2", ",", "pl3", ",", "PL1", ",", "PL2", ",", "PL3"}], 
       "}"}], "/.", 
      RowBox[{"t", "\[Rule]", "T"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"T", ",", "0", ",", "62.8"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.452882265834821*^9, 3.4528823112873645`*^9}, {
  3.452882374067811*^9, 3.452882501300557*^9}, {3.452882549581189*^9, 
  3.452882604064867*^9}, {3.452882639439414*^9, 3.4528827400162516`*^9}, {
  3.4528827802032375`*^9, 3.4528828105153494`*^9}, {3.4528829068891153`*^9, 
  3.452882907826604*^9}, {3.8002155851597247`*^9, 3.8002155932547708`*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"ea8abbc7-52bf-4859-9889-1db1038c5f32"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`T$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`T$$], 0, 62.8}}, Typeset`size$$ = {
    360., {177., 183.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`T$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics3D[
        ReplaceAll[{$CellContext`pl1, $CellContext`pl2, $CellContext`pl3, \
$CellContext`PL1, $CellContext`PL2, $CellContext`PL3}, $CellContext`t -> \
$CellContext`T$$], PlotRange -> {{-1, 1}, {-1, 1}, {-1, 1}}], 
      "Specifications" :> {{$CellContext`T$$, 0, 62.8}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{407., {219., 225.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.877222894863721*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"fba346b9-e3e1-4f83-bdb9-5f6f9f4a147b"]
}, Open  ]],

Cell["\<\
Go back and set several different values of the angular velocities for each \
Euler angle. First, do just one angular velocity at a time, with the other \
two set to zero. This will help you visualize the type of rotation associated \
with each angular velocity. Then, set nonzero values for two or all three of \
the angular velocities. You may be surprised at the complexity of the \
rotation that you observe!\
\>", "Text",
 CellChangeTimes->{{3.8002156935762663`*^9, 
  3.8002157937736263`*^9}},ExpressionUUID->"f5265ce6-475a-448a-8000-\
946d234efe97"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["31.2", "Section",
 CellChangeTimes->{{3.4528799108649654`*^9, 3.452879918224246*^9}, {
  3.8002345308193293`*^9, 3.8002345309094353`*^9}, {3.80024240343241*^9, 
  3.800242403833417*^9}},ExpressionUUID->"a27f99b3-ebca-4fb2-8978-\
fb3cabfce264"],

Cell[TextData[{
 "In this problem, you will construct the Lagrangian for the spinning top and \
solve the equations of motion for various initial conditions. The goal is to \
find a set of initial conditions that causes the symmetry axis of the top to \
form cusps in its nutation pattern, similar to the figure shown below.\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt3b2O7EiamOGW5MjULciWuY5cmXJX0AXsQtMLOSNgV4Aga++pzbmRuY82
GvKonuZsLpt/GSTj54vg8+BgMOd0nTpZVWS8Gcxg5H/8+//1tz/+2x9++OGf
/v2v//O3f/d//ss//uPf/d//9h9+/c1//+M//c9/+OMf/sd//eP//sM//OEf
//Pf/7tf//D//ZsffvhPv378X/7/BAAAAAAAAAAAAAAAAABv9dNPP/34m9YP
BIAX+dRHgwCo5qeF+U80CIDSPt1ZBmjSIACKmS+7ncx6NAiA7Fb1mX+7/TAN
AiCj1Ss+n/+vQQCUs03P15d+NAiAh1b1WV6F+9AgADLaXnbbrc/sqEEyBMAl
2yUHR+n5OJocaRAAiW7UZ7abGw0CIMUqN+n1me3m5mjNNgDMzhe8JTqa8mgQ
ALvSlxykfCoNAuCr3ftMb9fnQ4MAOHF7yUEKDQJg19EeOxlpEAArDxe8pdMg
AD4yLjlIcdSgov8oANFUrs/Mdj0Ab7a75KDaNMR2PQDvVHTBWyLb9QC8TYUF
b4lslQDwHtUWvCXSIIA3aLLkIIUGAYxqe9ktTn1mGgQwnrYL3tJpEMBIIix4
S6dBAGOItuQghQYB9K7EGyvUYasEgH4FX3LwlQYBdCf+grdEtusB6EhfSw6+
2s3NTwdv8w1AK4PVZ2arBIDgelzwlkiDAMLqd8FbOg0CiGaMJQcpNAggiO2L
PgPXZ6ZBAM0NueQghQYBNLS92ecl9ZkdNehV3wSA+gZe8JbOVgkAlb1nycFX
GgRQjfqs7OZGgwAy2l1y8PL6zGzXA1DOaxe8JbJVAkAJlhykOJryaBDAPepz
iQYBZGHJwQ0aBPDE9j5T9UmnQQD3WPD2nAYBXGXBWy626wFIZ8lBXrZKAEix
3VxUfZ7TIIBzlhyUY7segF3bF33UJztbJQCsWHJQjQYBfGxv9lGfomzXAzBZ
8NaOBgFvZsFbWxoEvJMFbxFoEPAqFryFokHAS1jwFpDbVIHhWfAWlgYBA7Pg
LbjdC6EaBPTOgrcu7Obm6L4hgOC2l90sOYjMVgnAGHaXHKhPcBoE9K7Zgrd/
/uff/frhh/u/lp/nTWzXA/Sr3pKDLKG5F6bRaRDQnbL1aVKct/ZIg4COFFly
cDU6uS6d3buUN1aMNAiIL/+Ct5SRv8nLNIlJGqVERw2yngSIIOeCt6/De7RL
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
AGco5BTp2Fafd9o2KOeREO/Wtmuav4wFhUR6cqU+b1Zw/UnXA3ikMxRyirSk
U31Yrj/JvCYhxkF+R+/TN9gVaVd59WFWal1cgIP8jq7nbnBkdx1OMedxUR+W
ijSo03mEi28MaXd5Z0nLUWVJfdgq0qDuphKmPwxp9bJmrYN82yD14cjyZaA8
DepuMO901gYntotqKp6YywZVfWtm+pSzQX1dzjL9YTy7SzrrHueflU62OyBF
tgb1NaSb/jCYoxsKqp+Vy3dnZiQ/Lnz9yEuf9sbf2tFRgPqar8GJ1Zq31SFd
96w09xnVqg4nsUgp1NEnf9SgXqYVfU3W4MR5feqekuozsMQAzX9+oyN5GtTF
wN5LKOHceX2mqoe6+owtfQb09b9+/VvLpSzXPoUAQR2rF312D+Zah7r6DK9C
gKbfN+jOMv4urm7Ff4RwIn0L94oBUp+x1QnQ9C/pufFC0l8FH967SCQc+XrZ
banKoa4+A/jll1/+vOfzAdUCNC22y77zeYIvMHP9jU5t3zv+6zFcPkCJ9Sm0
gpdcfv755z/t+XxAzQBNT9YkBJ9iCBA9upqeWeEzMb0+J79d/ScBiqlygKYn
DYocoMiPjeY+43wc262tE+uT+7nWaplB+pW30it4qaB+gKbbDYo8CQr7wIgg
1KG7m570mhSY7H9mKJde92kydpHd0XXU7Y8s4w/xZoPinMUrYR8YEQR5F9GH
6Vl9kqxXm2/stCNAPHGnQRHO4i0vAPHVvetdWWyXGdxLz6zMl3BjzZsA8dCj
BsUhQKRYJaD0ATMnZvdtTJ/8uwVOwHsrrgWI5y43KOAkSIBItG1B9iPnKDpP
Zj1Luc++2/f7CBBZ3G9QEAJEoqM0PGzEyWQnY3qm/If6k7tNBYhcru0XF20S
JECkWx665zFa5eM8MUW785H1UH/49qYCREbLBn1fEiNAdGp72e1GWSp35yPf
oZ5lo9EmK3gZ1edegO93Lse8sUKASHFy6N6L0Wd+1PCRX2Gba2L6zH2+N2j7
TLIVAeKSS8P48vpb2wMs03GuPkS2uhZ3+HFxJkECxCVxnjtdcus4X4VGfYgv
tUFBViMIEJd0esDc7eZyZZH60IXLDWoozlyMXnR3wDw7yD87gqoPvUhqUJDB
P8JjoCPdHTCPZ23qQ3eSGhThQlzzB0BfujtgngXI25vSqWsNaqX5A6AvfR0w
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
     "], {{0, 504}, {555, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag[
    "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
     Association[
      "Exif" -> Association[
        "Software" -> "Created with the Wolfram Language : www.wolfram.com"], 
       "Comments" -> 
       Association[
        "Software" -> "Created with the Wolfram Language : www.wolfram.com", 
         "Creation Time" -> 
         DateObject[{2020, 6, 3, 22, 52, 52.}, "Instant", "Gregorian", -6.]]]],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{555, 504},
   PlotRange->{{0, 555}, {0, 504}}]], "Text",ExpressionUUID->
  "c4e80f78-b0fd-41cc-9736-6e345a72608c"]
}], "Text",
 CellChangeTimes->{{3.8002345318003235`*^9, 3.8002345608203692`*^9}, {
  3.800235383466291*^9, 
  3.800235435412226*^9}},ExpressionUUID->"5679e663-0ce3-4f4d-9e83-\
65a70992cbbc"],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.44944890053125*^9, 3.449448901640625*^9}, {
  3.5798847771076174`*^9, 3.57988478529767*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"8b94f963-7449-4690-8d75-480e4912742f"],

Cell["\<\
Find the Lagrangian in terms of theta, phi, psi, and their time derivatives \
thetadot, phidot, and psidot.
Find the various derivatives and conjugate momenta that you need to generate \
the equations of motion.
Note: dLdphi and dLdpsi are both set to 0 for you, since they are ignorable \
coordinates that do not appear in the Lagrangian.

Let the principal moments be lam1 and lam3.
Let M be the mass.
Let R be the distance from the pivot point to the center of mass along the e3 \
axis.\
\>", "Text",
 CellChangeTimes->{{3.449448923625*^9, 3.449448924671875*^9}, {
  3.7663364099221745`*^9, 3.766336414145465*^9}, {3.800235714533634*^9, 
  3.8002357603749647`*^9}, {3.8002358391485205`*^9, 3.800235881206544*^9}, {
  3.8002359639837627`*^9, 3.8002359722287683`*^9}, {3.800236003388897*^9, 
  3.8002360449309254`*^9}, {3.800242498143572*^9, 
  3.800242500070573*^9}},ExpressionUUID->"107bbeb4-b6e7-4734-a5f4-\
1ff26d15880a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"L", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", "2"}], "*", "lam1", "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"phidot", "^", "2"}], "*", 
         RowBox[{
          RowBox[{"Sin", "[", "theta", "]"}], "^", "2"}]}], "+", 
        RowBox[{"thetadot", "^", "2"}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"1", "/", "2"}], "*", "lam3", "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"psidot", "+", 
         RowBox[{"phidot", "*", 
          RowBox[{"Cos", "[", "theta", "]"}]}]}], ")"}], "^", "2"}]}], "-", 
     RowBox[{"M", "*", "g", "*", "R", "*", 
      RowBox[{"Cos", "[", "theta", "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rule", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"theta", "\[Rule]", 
      RowBox[{"theta", "[", "t", "]"}]}], ",", 
     RowBox[{"phi", "\[Rule]", 
      RowBox[{"phi", "[", "t", "]"}]}], ",", 
     RowBox[{"psi", "\[Rule]", " ", 
      RowBox[{"psi", "[", "t", "]"}]}], ",", 
     RowBox[{"thetadot", "\[Rule]", 
      RowBox[{
       RowBox[{"theta", "'"}], "[", "t", "]"}]}], ",", 
     RowBox[{"phidot", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"phi", "'"}], "[", "t", "]"}]}], ",", 
     RowBox[{"psidot", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"psi", "'"}], "[", "t", "]"}]}]}], "}"}]}], ";"}], "\n", 
 RowBox[{"dLdtheta", "=", " ", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"L", ",", "theta"}], "]"}], "/.", 
   "rule"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dLdphi", "=", "0"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"dLdpsi", "=", "0"}], "\[IndentingNewLine]", 
 RowBox[{"Pphi", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"L", ",", "phidot"}], "]"}], "/.", "rule"}]}], "\n", 
 RowBox[{"Ptheta", "=", " ", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"L", ",", "thetadot"}], "]"}], "/.", "rule"}]}], "\n", 
 RowBox[{"Ppsi", "=", " ", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"L", ",", "psidot"}], "]"}], "/.", "rule"}]}]}], "Input",
 CellChangeTimes->{{3.44944893825*^9, 3.44944908153125*^9}, {3.44944926*^9, 
   3.44944926865625*^9}, 3.44945090553125*^9, {3.4528848839375*^9, 
   3.45288490696875*^9}, {3.8002357833205957`*^9, 3.8002358563915186`*^9}, {
   3.800235887502572*^9, 3.800235915605054*^9}, {3.8002360592339516`*^9, 
   3.8002360619649076`*^9}, {3.8002365709589043`*^9, 3.800236646555498*^9}, {
   3.8002367173738427`*^9, 3.8002367280195847`*^9}, {3.8002401717818975`*^9, 
   3.800240194258893*^9}, {3.800240260182845*^9, 3.8002403023108897`*^9}, {
   3.8002424620804987`*^9, 3.8002424893245955`*^9}, {3.8772229219967203`*^9, 
   3.8772229779223747`*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"b92492e5-6575-457d-a62f-319826573ae4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", " ", "M", " ", "R", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"theta", "[", "t", "]"}], "]"}]}], "+", 
  RowBox[{"lam1", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{
     SuperscriptBox["phi", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
  RowBox[{"lam3", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["phi", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["phi", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["psi", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.877223034480832*^9, 3.8772231264042683`*^9},
 CellLabel->
  "Out[116]=",ExpressionUUID->"53078e0a-887c-439c-a571-f67395353715"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.877223034480832*^9, 3.8772231264042683`*^9},
 CellLabel->
  "Out[117]=",ExpressionUUID->"f2217374-5223-4b9f-9c1d-2da6f2a0fbd6"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.877223034480832*^9, 3.877223126420147*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"55d60cde-f4f3-46f5-b726-5ff0a674035b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lam1", " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", 
     RowBox[{"theta", "[", "t", "]"}], "]"}], "2"], " ", 
   RowBox[{
    SuperscriptBox["phi", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "+", 
  RowBox[{"lam3", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["phi", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["psi", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.877223034480832*^9, 3.877223126420147*^9},
 CellLabel->
  "Out[119]=",ExpressionUUID->"506b0660-df95-4fe8-a499-c20c5dc6184f"],

Cell[BoxData[
 RowBox[{"lam1", " ", 
  RowBox[{
   SuperscriptBox["theta", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}]}]], "Output",
 CellChangeTimes->{3.877223034480832*^9, 3.877223126420147*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"f1ca83e6-98b0-41d5-9305-a2b1a1190bf4"],

Cell[BoxData[
 RowBox[{"lam3", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["phi", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["psi", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.877223034480832*^9, 3.877223126436627*^9},
 CellLabel->
  "Out[121]=",ExpressionUUID->"d8a3be90-8011-4573-84ae-b904deca7ddb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solutions", "Subsection",
 CellChangeTimes->{{3.44944909571875*^9, 
  3.449449100421875*^9}},ExpressionUUID->"293489f6-b28f-4230-b086-\
7216eaba34cd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"L$", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", "lam1", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"phidot", "^", "2"}], "*", 
        RowBox[{
         RowBox[{"Sin", "[", "theta", "]"}], "^", "2"}]}], "+", 
       RowBox[{"thetadot", "^", "2"}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", "lam3", "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"psidot", "+", 
        RowBox[{"phidot", "*", 
         RowBox[{"Cos", "[", "theta", "]"}]}]}], ")"}], "^", "2"}]}], "-", 
    RowBox[{"M", "*", "g", "*", "R", "*", 
     RowBox[{"Cos", "[", "theta", "]"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Pphi$", "=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"L$", ",", "phidot"}], "]"}], "/.", "rule"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Ptheta$", "=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"L$", ",", "thetadot"}], "]"}], "/.", "rule"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Ppsi$", "=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"L$", ",", "psidot"}], "]"}], "/.", "rule"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dLdtheta$", "=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"L$", ",", "theta"}], "]"}], "/.", "rule"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"L", "==", "L$"}], ",", 
       RowBox[{"theta", "[", "t", "]"}]}], "]"}], "]"}], "\[Equal]", 
    RowBox[{"{", 
     RowBox[{"{", "}"}], "}"}]}], ",", 
   RowBox[{"Print", "[", "\"\<L is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<L is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"Pphi", "==", "Pphi$"}], ",", 
       RowBox[{"theta", "[", "t", "]"}]}], "]"}], "]"}], "\[Equal]", 
    RowBox[{"{", 
     RowBox[{"{", "}"}], "}"}]}], ",", 
   RowBox[{"Print", "[", "\"\<Pphi is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Pphi is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"Ptheta", "==", "Ptheta$"}], ",", 
       RowBox[{
        RowBox[{"theta", "'"}], "[", "t", "]"}]}], "]"}], "]"}], "\[Equal]", 
    RowBox[{"{", 
     RowBox[{"{", "}"}], "}"}]}], ",", 
   RowBox[{"Print", "[", "\"\<Ptheta is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Ptheta is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"Ppsi", "==", "Ppsi$"}], ",", 
       RowBox[{"theta", "[", "t", "]"}]}], "]"}], "]"}], "\[Equal]", 
    RowBox[{"{", 
     RowBox[{"{", "}"}], "}"}]}], ",", 
   RowBox[{"Print", "[", "\"\<Ppsi is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Ppsi is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"dLdtheta", "==", "dLdtheta$"}], ",", 
       RowBox[{"theta", "[", "t", "]"}]}], "]"}], "]"}], "\[Equal]", 
    RowBox[{"{", 
     RowBox[{"{", "}"}], "}"}]}], ",", 
   RowBox[{"Print", "[", "\"\<dLdtheta is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<dLdtheta is incorrect.\>\"", "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.44944911140625*^9, 3.4494491180625*^9}, {
   3.449494960697954*^9, 3.4494951611393023`*^9}, {3.452884458734375*^9, 
   3.45288453084375*^9}, 3.579884841146028*^9, 3.625853213320238*^9, {
   3.800235981200774*^9, 3.8002359869177575`*^9}, {3.8002401987968855`*^9, 
   3.8002402325868444`*^9}, {3.8006308085463347`*^9, 3.80063081386333*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"ca9c08e9-16e5-4889-baa7-987cb37ceebf"],

Cell[CellGroupData[{

Cell[BoxData["\<\"L is correct.\"\>"], "Print",
 CellChangeTimes->{3.877223036894944*^9, 3.877223129131198*^9},
 CellLabel->
  "During evaluation of \
In[122]:=",ExpressionUUID->"4f3a1741-58f0-4b9b-a7b6-1425c0c6825d"],

Cell[BoxData["\<\"Pphi is correct.\"\>"], "Print",
 CellChangeTimes->{3.877223036894944*^9, 3.877223129131198*^9},
 CellLabel->
  "During evaluation of \
In[122]:=",ExpressionUUID->"3e64b647-cdd2-418c-ac8a-970f084f813e"],

Cell[BoxData["\<\"Ptheta is correct.\"\>"], "Print",
 CellChangeTimes->{3.877223036894944*^9, 3.877223129131198*^9},
 CellLabel->
  "During evaluation of \
In[122]:=",ExpressionUUID->"5df9893b-be6e-4010-991b-efb1b0f406dc"],

Cell[BoxData["\<\"Ppsi is correct.\"\>"], "Print",
 CellChangeTimes->{3.877223036894944*^9, 3.877223129131198*^9},
 CellLabel->
  "During evaluation of \
In[122]:=",ExpressionUUID->"a0343a18-49d1-4864-8b85-34ff78a9327d"],

Cell[BoxData["\<\"dLdtheta is correct.\"\>"], "Print",
 CellChangeTimes->{3.877223036894944*^9, 3.877223129131198*^9},
 CellLabel->
  "During evaluation of \
In[122]:=",ExpressionUUID->"93049672-88e1-40dc-906f-f4548700e7a8"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[" ", "Subsection",
 CellChangeTimes->{
  3.449449307875*^9},ExpressionUUID->"c62f63e0-3359-4f08-9231-aba3848723e5"],

Cell["Set up the equations of motion:", "Text",
 CellChangeTimes->{{3.800236088264595*^9, 
  3.800236093713545*^9}},ExpressionUUID->"807389ba-07e7-4ab2-8b77-\
3f479d8e4418"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"phieq", "=", 
   RowBox[{"0", "\[Equal]", 
    RowBox[{
     RowBox[{"2", " ", "lam1", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["phi", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], " ", 
      RowBox[{
       SuperscriptBox["theta", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "-", 
     RowBox[{"lam3", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["phi", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["psi", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], ")"}], " ", 
      RowBox[{
       SuperscriptBox["theta", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{"lam1", " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        RowBox[{"theta", "[", "t", "]"}], "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["phi", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{"lam3", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", 
           RowBox[{"theta", "[", "t", "]"}], "]"}]}], " ", 
         RowBox[{
          SuperscriptBox["phi", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["theta", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["phi", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["psi", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"psieq", "=", 
   RowBox[{"0", "\[Equal]", 
    RowBox[{"lam3", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", 
          RowBox[{"theta", "[", "t", "]"}], "]"}]}], " ", 
        RowBox[{
         SuperscriptBox["phi", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["theta", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["phi", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["psi", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"thetaeq", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"g", " ", "M", " ", "R", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"theta", "[", "t", "]"}], "]"}]}], "+", 
     RowBox[{"lam1", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["phi", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
     RowBox[{"lam3", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["phi", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["phi", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["psi", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}], "\[Equal]", 
    RowBox[{"lam1", " ", 
     RowBox[{
      SuperscriptBox["theta", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.800236102184588*^9, 3.8002361314286947`*^9}, {
   3.800236809689*^9, 3.800236944680375*^9}, {3.8002401618938456`*^9, 
   3.800240162806843*^9}, {3.8002403124578495`*^9, 3.800240319898845*^9}, 
   3.8002404308358507`*^9, {3.800242081863649*^9, 3.800242082008649*^9}, {
   3.8002425179635935`*^9, 3.800242531090316*^9}, {3.8772230035016527`*^9, 
   3.8772230280011945`*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"6f46a55f-3bc1-4e0b-bf18-211cb50d69df"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solutions", "Subsection",
 CellChangeTimes->{{3.44944909571875*^9, 
  3.449449100421875*^9}},ExpressionUUID->"ec369042-e777-40da-b372-\
cff6f50555b2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"phieq$", "=", 
   RowBox[{"0", "\[Equal]", 
    RowBox[{
     RowBox[{"2", " ", "lam1", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["phi", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], " ", 
      RowBox[{
       SuperscriptBox["theta", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "-", 
     RowBox[{"lam3", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["phi", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["psi", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], ")"}], " ", 
      RowBox[{
       SuperscriptBox["theta", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{"lam1", " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        RowBox[{"theta", "[", "t", "]"}], "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["phi", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{"lam3", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", 
           RowBox[{"theta", "[", "t", "]"}], "]"}]}], " ", 
         RowBox[{
          SuperscriptBox["phi", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["theta", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["phi", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["psi", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}]}]}], ";", 
  RowBox[{"psieq$", "=", 
   RowBox[{"0", "\[Equal]", 
    RowBox[{"lam3", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", 
          RowBox[{"theta", "[", "t", "]"}], "]"}]}], " ", 
        RowBox[{
         SuperscriptBox["phi", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["theta", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["phi", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["psi", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"thetaeq$", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"g", " ", "M", " ", "R", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"theta", "[", "t", "]"}], "]"}]}], "+", 
     RowBox[{"lam1", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["phi", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
     RowBox[{"lam3", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["phi", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["phi", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["psi", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}], "\[Equal]", 
    RowBox[{"lam1", " ", 
     RowBox[{
      SuperscriptBox["theta", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}]}]}], ";"}], "\n", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FullSimplify", "[", "phieq", "]"}], "\[Equal]", 
    RowBox[{"FullSimplify", "[", "phieq$", "]"}]}], ",", 
   RowBox[{"Print", "[", "\"\<phieq is correct\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<phieq is incorrect\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FullSimplify", "[", "psieq", "]"}], "\[Equal]", 
    RowBox[{"FullSimplify", "[", "psieq$", "]"}]}], ",", 
   RowBox[{"Print", "[", "\"\<psieq is correct\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<psieq is incorrect\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FullSimplify", "[", "thetaeq", "]"}], "\[Equal]", 
    RowBox[{"FullSimplify", "[", "thetaeq$", "]"}]}], ",", 
   RowBox[{"Print", "[", "\"\<thetaeq is correct\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<thetaeq is incorrect\>\"", "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.44944911140625*^9, 3.4494491180625*^9}, {
   3.449494960697954*^9, 3.4494951611393023`*^9}, {3.452884458734375*^9, 
   3.45288453084375*^9}, 3.579884841146028*^9, 3.625853213320238*^9, {
   3.800235981200774*^9, 3.8002359869177575`*^9}, {3.8002401987968855`*^9, 
   3.8002402325868444`*^9}, {3.800241150832823*^9, 3.800241220988383*^9}, {
   3.800242014411375*^9, 3.800242134989891*^9}, {3.8002422124802165`*^9, 
   3.800242270768341*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"ac9b261a-7ef7-4dc3-850c-827ca9cad0b3"],

Cell[CellGroupData[{

Cell[BoxData["\<\"phieq is correct\"\>"], "Print",
 CellChangeTimes->{3.8772230502053757`*^9, 3.8772231349347982`*^9},
 CellLabel->
  "During evaluation of \
In[135]:=",ExpressionUUID->"b2761fa1-e114-4ff7-ac33-609776031498"],

Cell[BoxData["\<\"psieq is correct\"\>"], "Print",
 CellChangeTimes->{3.8772230502053757`*^9, 3.877223135044533*^9},
 CellLabel->
  "During evaluation of \
In[135]:=",ExpressionUUID->"ee76ef7f-45fe-42c6-9638-588a6bb2707f"],

Cell[BoxData["\<\"thetaeq is correct\"\>"], "Print",
 CellChangeTimes->{3.8772230502053757`*^9, 3.877223135456295*^9},
 CellLabel->
  "During evaluation of \
In[135]:=",ExpressionUUID->"3115fd2d-b64a-4709-a312-ff7bfd8ca7b2"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "Subsection",ExpressionUUID->"3ada566e-03cb-45af-8c07-b2238cb36c00"],

Cell["Enter numerical values:", "Text",
 CellChangeTimes->{{3.800236181911996*^9, 
  3.8002361851046977`*^9}},ExpressionUUID->"7ca7fdea-246a-4a12-99a2-\
41c9ddf86854"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lam1", "=", 
   RowBox[{"1.5", "*", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "4"}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"lam3", "=", 
   RowBox[{"2.5", "*", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "4"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", "0.200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "=", "9.8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tmax", "=", "1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phidot0", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theta0", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thetadot0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"psidot0", "=", "20"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol1", "=", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"thetaeq", ",", "phieq", ",", "psieq", ",", 
        RowBox[{
         RowBox[{"psi", "[", "0", "]"}], "==", "0"}], ",", 
        RowBox[{
         RowBox[{"theta", "[", "0", "]"}], "\[Equal]", "theta0"}], ",", 
        RowBox[{
         RowBox[{"phi", "[", "0", "]"}], "==", "0"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"psi", "'"}], "[", "0", "]"}], "\[Equal]", "psidot0"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"theta", "'"}], "[", "0", "]"}], "\[Equal]", "thetadot0"}], 
        ",", 
        RowBox[{
         RowBox[{
          RowBox[{"phi", "'"}], "[", "0", "]"}], "\[Equal]", "phidot0"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"theta", "[", "t", "]"}], ",", 
        RowBox[{"phi", "[", "t", "]"}], ",", 
        RowBox[{"psi", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"phi", "[", "t", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"phi", "[", "t", "]"}], "]"}]}], ",", 
      RowBox[{"Cos", "[", 
       RowBox[{"theta", "[", "t", "]"}], "]"}]}], "}"}], "/.", "sol1"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.44944922265625*^9, 3.449449248375*^9}, {
   3.4494497668125*^9, 3.44944978409375*^9}, 3.800235505559207*^9, {
   3.8002359555147753`*^9, 3.800235957752807*^9}, 3.8002425470010996`*^9, {
   3.877223166146135*^9, 3.877223192955573*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"64375ea8-4a0c-4ceb-8c21-f3df3880a692"],

Cell[BoxData[
 Graphics3DBox[{{{}, {}, 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[2], Line3DBox[CompressedData["
1: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
jORaDjsmOE/e/bdVvx4eXZVZpWP1P7W6edIM804rh8RVuXqgntjKIoud63/u
mhdGMb/01THHWLweyjePSMXgsb5BOzsmZI+NY+m4bXFPPRz6WflLfhAHfBIx
EqaYE0ga/YmbCHw/3XP6O4EDbrxMXxnmQfc4hcpyEaj0xVXJ/IcDJbXPRCMH
JngZhPq4JiDI++h2jryCnb+Tgf4emGfqj8v6RCCIT2E9NvIbB7nhwu4PMH+y
qZg7eheB/DBRcfMvVrfDy+9fY775wMc4zRVBrLEBw2JbE9SEuot8xJx8wce/
0QwBrmpJdJoLO/e2aDYH8/HBmYdaeggCbHQ90nc0wffK47++Ym5S7FjLq4Kg
L+O/wESBJrBN/GHx/9+DcerahqtKIjjwX9pmy74msH6xbbPk/7+zWlCWKdyN
QOod1zs5ySYwHfRgFmLelaj2K4gVG79nmtp6pAkUnXjkszG/bVyqmbhSB59m
FlI+KDaBwStc8QfMj3lyarEt1EHJjwGTXPUmCLWxfPIS88t3XunUDdUBXu1G
6rJ2E1xV8U0OxLwNXxbV2F6H7d9l2TtnmiD68DcWN8w/npqlZBTUgY6YstVh
yyYwzmlMlcO8ZOc+v8dpdYCLtT9s79gEksHXxrkwr7roq5YWWwdmt4LfdLo3
wWzLvNMctl9dg1kCmUF1kD6W5+/mh+Wn8KJaNOZu1RpuMZfqINBmVDAiuQmO
193jLcXqZMr5vqHFWi2Iqsh1bP5sgv3HjW2NsLq9YKftGMeohZHzP06f3NoM
YynUoP+s/79fl99vzNXC+/1/H9fyNYNq+WpvNOY3Dhg3qOFr4YTsIe6YI80g
LGW0rR47X6E7jpzcV1AL9NgczqeXmyH0tZvzCnZ+bTvSNxietTCoJnHx12gz
ZPfNtaRj/Ud2SmHk8GwNkMZ7euS4W8HDU5/KcoYJ6Qk/Nu6O1MAOj1GRhxKt
sBE+rrwL68/0KGXO1N4aOPh0zO2oRitM2+1/Kor18ws0nadh1TUgsD8iO82z
FSZELM8e0sX69le1qONvamCLtNDBqZ5WoIzYeP/SwvpbhdXPBuUaEHVfInXm
toHCabfKTOx7xzzWq5KmUg3sf17lOWR3QMf2jwU/sXvCS1bOahuxarD5IlB4
urMDtHjpxnb7sPGfu7Xo81TDoGPa9XBGBxx1ktteuZcJYjKHFl9PV0HHKZ5p
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
oBOlaSOSNQf/AYZBs50=
       "]]},
     Annotation[#, "Charting`Private`Tag$7630#1"]& ]}, {}},
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{-0.9448746211201927, 0.9164983811155499}, {-0.9528793628933622,
    0.7064635072657983}, {0.29716463704160373`, 0.9800665873148838}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8772231943725433`*^9},
 CellLabel->
  "Out[173]=",ExpressionUUID->"c6c28944-a75b-41e0-b3c3-6d34765e3a1c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lam1", "=", 
   RowBox[{"1.5", "*", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "4"}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"lam3", "=", 
   RowBox[{"2.5", "*", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "4"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", "0.200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "=", "9.8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tmax", "=", "1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phidot0", "=", "15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theta0", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thetadot0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"psidot0", "=", "20"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol1", "=", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"thetaeq", ",", "phieq", ",", "psieq", ",", 
        RowBox[{
         RowBox[{"psi", "[", "0", "]"}], "==", "0"}], ",", 
        RowBox[{
         RowBox[{"theta", "[", "0", "]"}], "\[Equal]", "theta0"}], ",", 
        RowBox[{
         RowBox[{"phi", "[", "0", "]"}], "==", "0"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"psi", "'"}], "[", "0", "]"}], "\[Equal]", "psidot0"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"theta", "'"}], "[", "0", "]"}], "\[Equal]", "thetadot0"}], 
        ",", 
        RowBox[{
         RowBox[{
          RowBox[{"phi", "'"}], "[", "0", "]"}], "\[Equal]", "phidot0"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"theta", "[", "t", "]"}], ",", 
        RowBox[{"phi", "[", "t", "]"}], ",", 
        RowBox[{"psi", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"phi", "[", "t", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"phi", "[", "t", "]"}], "]"}]}], ",", 
      RowBox[{"Cos", "[", 
       RowBox[{"theta", "[", "t", "]"}], "]"}]}], "}"}], "/.", "sol1"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.87722321271649*^9, 3.8772232138874655`*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"1b2d9ba6-8e0f-4595-bc0d-43d9f404f484"],

Cell[BoxData[
 Graphics3DBox[{{{}, {}, 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[2], Line3DBox[CompressedData["
1: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
Dgba6GUse1quGqTiud2Ijvp/+AkC0w==
       "]]},
     Annotation[#, "Charting`Private`Tag$7675#1"]& ]}, {}},
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{-0.20000211555375785`, 
   0.20071066529700093`}, {-0.2014029835988235, 0.20170871827812675`}, {
   0.979437399235767, 0.9800665778412416}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8772232149504676`*^9},
 CellLabel->
  "Out[185]=",ExpressionUUID->"9e7e9940-8495-45c3-84ef-0b7f040f1176"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lam1", "=", 
   RowBox[{"1.5", "*", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "4"}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"lam3", "=", 
   RowBox[{"2.5", "*", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "4"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", "0.200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "=", "9.8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tmax", "=", "1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phidot0", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theta0", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thetadot0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"psidot0", "=", "20"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol1", "=", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"thetaeq", ",", "phieq", ",", "psieq", ",", 
        RowBox[{
         RowBox[{"psi", "[", "0", "]"}], "==", "0"}], ",", 
        RowBox[{
         RowBox[{"theta", "[", "0", "]"}], "\[Equal]", "theta0"}], ",", 
        RowBox[{
         RowBox[{"phi", "[", "0", "]"}], "==", "0"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"psi", "'"}], "[", "0", "]"}], "\[Equal]", "psidot0"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"theta", "'"}], "[", "0", "]"}], "\[Equal]", "thetadot0"}], 
        ",", 
        RowBox[{
         RowBox[{
          RowBox[{"phi", "'"}], "[", "0", "]"}], "\[Equal]", "phidot0"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"theta", "[", "t", "]"}], ",", 
        RowBox[{"phi", "[", "t", "]"}], ",", 
        RowBox[{"psi", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"phi", "[", "t", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"phi", "[", "t", "]"}], "]"}]}], ",", 
      RowBox[{"Cos", "[", 
       RowBox[{"theta", "[", "t", "]"}], "]"}]}], "}"}], "/.", "sol1"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.877223222718299*^9, 3.877223223767599*^9}},
 CellLabel->
  "In[186]:=",ExpressionUUID->"aa239514-d054-4dc0-963e-45a8b6199112"],

Cell[BoxData[
 Graphics3DBox[{{{}, {}, 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[2], Line3DBox[CompressedData["
1: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
lxUNMLr2tjg78VfVu75xJ1DgnMbThUzZ0+hmYiK/TOJbVNqYWUIq2XcWJRkB
j0/iW3dW1TLiP5/yf9DMo8AvQzRHDS30aCmztyOuTeegqlNPge1jipq1Rcdw
ucV05dHq+9ohvdNtbyjQcXHq0I+HUth2py0vrJ7kbzvOyXvubQP912Bo9fE0
/NHv3rba13J9Hao9/7sNXvwXQs/4xw0SpzaU5pE4T3ckR99gfTtcVN8lbars
AaPsygM7iOu6Xv0ywNUOO5o+dD33vQrivSMhq78Tq7/TPPpjdzvYSmpCoLA3
iCTtnSssJvNp/GBwo2M75CY9CowevwHAt23Dg0Ia/Apl27vuRTvEjedMz9wJ
AmP5LXmHyXnkymJ+4nZtB2y4u4b3uEYcvO0zPTJAzsc0LZuvS50dMH38hMTi
lzi4+dnbWIS4/hxb4+mnHTBuaGMbmx4PYQu1NVeTyfx03nbOpXVAyMY7zKkM
9yBI1M2N/wENFAP4/1ZLdIIHY/r6jPkkCC99MW6dSPKWC+/VHkV2wtVnpvSO
p9LBZN/xnS9jyPmr8ai5NKkTap0qeiY2Z8CfINUVKeLt+6/wnsnphJP0x+Iv
3MqAPSbM2Z53abCYKdv3o7ET6nxZmjwsMkHB9dADjmga8AfmRum96wQhFYOj
6nLZcPPGgKJGJA2GP1wp/iLbBREST0/6MOYDf7Lv1oZgGlBaqxnv7CV5LL2b
b05gPpQYc2WtI37m0QLH/zo683AovzaOo0RI9lQSKUKLUtnKiVKWyhIRUbbI
kmxli0RRlkLWQXYxdmMZzNzDMJZCKgpFVMgPQ0Wi5T3z/vu5nut5zpzlvr/f
+zrnzKAG1mlXTxvMcD5DzedTky3uMZHlBfMsX702xPz74RKVtwi5ZWmN/cL6
x3P9DeGcK21I3EngxogMEZ0xO/xVO5SJfjQI34xxbEPT8wbRtiVEZDNgUJfE
uidk7Z9OCZc2lGRv2vr2cAkqzbh1+D+su6KCnpru8GpDehmJ0/cNStHVdhHH
JKzTBhKSWwtvt6G5WevKM6HlqD48IHwJ68MK0rELcSFtyGUD7bcddwUq1XvA
MMKcY39NlmhoGypuVHINNapA6YWkP6xzkYn17gTlu21oB9Mk8G9KBSpycj3I
jflrM+bJacwTzeJXBsYqUAl1o7sj1rFxgws5qmFtKJpYU8KlWIlWB5dq6FgP
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
by6B5I3Mr6x9WU8PK1YupVLBZfGpuTFfKaTz5qUv4/jwQkL95L1SAAuhhouX
p8uB+W357G9WHO7ImSqiApR27b5wQbACotLFu4Ixb7x6e1dzLwDPz/562X0V
ILLNPOkfaz/tOaFR8gIAt/FGr7ZrFXDCS1z1dxkTEdL/FqtvocG7u8ya31MV
MNsfeX4c5xE59jJO/os0yOWn5+zjqoJ5hcJm1r2Obk7S1deu0ODrjuSYyb1V
UMu73fRVIRPtiPicnutEg4qSIdlTZlVwcXx3rgbmKQG5QURfGsRI9qov5FeB
k0LQE54C3A/bNQ58eESD7g/vbL6cq4Y7yyeS0nKZSKNUq9q6kQaEJI5dp6kk
aJyUGXiQyUSKMcPPBoEGUcYxRu/nSGDnO932KQPn65K3x7a00sBzrjxjjVQN
zMg2zx3FfDp84NSn5zSIfthfwx5eAzte2vLNEpjIL5/W6txLg52LetNvamtg
XiJf8CTmH1wkl0pe0aDF109YeboGfB2nb6SlMVHFhG216zsaOHmZhESa1MK7
bT02Oji/357kd/k0RIOBUz8pgRG1wCWm8DcV64HPDewKIh9oEER/+HWhqRae
qHJsnsP64aYb31nCRxoY3ta5biNfB96P5sefJOH4plH6b26MBucX6iyNrtTB
uNNqzmQiE4lZf7RcGqdBhtxaq6bkOuj67MKmjvnOE6+EKj7h37XGc3NWbx2s
O9W+JvoJ7oejwx+3fKbBP4v1h35x1YNxXEbNhwQmGvmeGnYYc3XTrqNtx+sh
83CI5H7MRWQ2wF/8nvyEN2T2gHpAJeyn78Tj9kyVXvLFPDIoY1dJdT0sCVFV
+uKYiPN+rGIKbk/B4e3M5tl6CMs1+iWNeeKsL9tV3P61E7wBx3eTwVnD4onX
Yya6ILtc82GUBuPhbNt32ZNB/p+vIP0REw3vJeozhmmg5an/SXSIDDd6Qt/Y
x+J1+nX496FBGvzkMgqWEGsADpEGRVIMfr/0+8N6AzTYUrhHMdikAUZ/EiLW
Yr6UVitrg8eRnCOmffpFA4wlLHrkR+H5+W/9gCSFBlOhxzgy6Y3g84RncSoS
+5HLWvxs9bidRWZXF/80QqDp8pZTmM88+CUQXUUDmneJR4RqE7zf+/hObgTW
Y9lrXmYX0MDiVtEx47ImIJrmy17GelKtYnqg6iENbs+pCiqnU6BilC97COvP
J57fdn/Twu13JOW/CwYw/vfjwlQw61y85JSGCg0m0T++jEaAoOO9pDOYp+7/
arl7D/5d8lHfbywDXA7kpVXeZqLnqZaSUyJYR+2cXtimRoMehXO/bgdh37E3
N/gnHeuNA2ISXNU0EP3bUb49gInSHx65m/KGChavBC/xFzSDt5D3QIwvE519
yrnOuJoKt7wEu1FrM0xY7RFnw5xxnBiiH0cF84zcl7bjzSAnPODu7YPX76X9
n9gMqJBrPl3lKdkCxfsPuVtjPa/4+CjH3RoKnK0hTCQntsC03Rp7hPV/f1tA
6EGnJsheeTdUF0yHigUblePuTFTAllxQok0GpV8lI0YH24A95MlXS+yP3Gpt
dsxxkoH70je5hbNt4Hf/k9E37LPapYPOe3TUw5ujX2P1r7VBKr8XLQpzrz/H
eNQM6sH6Q4XhjqdtMFwn1t2K/V2+0MJlWd06+BN38pUaFwMSkcRuI+wf0yP7
aQHSNeD3df+3hnYG/OjeOdmL/S/fJsXcrkESxJfmaKmMMGCkkH/9Q8xfr6nW
Do0jwYFGIzuzHwzYwEXzP4X5R96UI/v+VQOf3HY+r+3tcLdghxkD+/EOX4VX
g6+r4O9EkwSvZzscEB07w7ovS3NUW+yAYwVwir04RWfrAJoSISfGGvt0pSPe
VqIVIH1F6shrAeyP/xPmvY65dsdbE82H5ZBC0BvzluoAYb+5aSPWvVhpMWzs
p8tAz6x1p4NmB9j0pImxzpcplFSf1M8rhdcDxnursC9/TVzryI35t+xlNM5W
CkIaZ1/FWHaAqSWbEmufD9cB8o8t9URokm7e/Z9PBwRp+iHWveir05s2dwkR
gefRmweuoR2wsSTyHuse9Zr/DnZ+diuGhG2FEzdjMNc5b8C6d/3mBvMLXowi
qNp8ksiX2gGZ2UZxrPrPtXvTWwO2F4EC94TBnrwOCC15Z86qF23c+DZ4jd8z
cBXg0Okvw/44fcdTVn3JT/v7jOjLQhAhmWzlIuPnZ086sepRJs4u7+vlCsFr
YMyquaUDPtoermDtj2p4IvH8e3ABbF8UTF/zogPU13b6s873RUtzaPZgP0ZQ
LvDvfoN9vDKJzsDcsCueZrgnHzJku9IkP3TAzryHMaz9YH8/XkdX3+XC/bw8
F7OZDqiZyMucw7xDrdKdZ18uLLitPFL/jvtn1e0zG+5PurApv09YDsydlZ/I
/9UBql93F4pi7hn09VDt3mxY3Tzrwc/ZCcVDkk9PYX7DzZU7824WaPLq2fDy
dMKFDYN9dqz7ryqsXr4uewrCWgLfY/g7QSs/IiiUdb+W8KnZFPYMWLl3/5OM
WCf037yszMBc5YX74udiArxgv6GpsrkTfktzHZ3BvDZm57UjpmkgLKem+XJr
J3Afz6oRwfNNZn3NS9nCZIjz+heZsL0TUq6c/O6GeeGR2YJ0pySQVsjlLZPq
hC9O/7xTMe93Jmca7E6EV/dHrWykO8HncsOGDswfSahtPf41Af4qvs/Pwzz6
nR11GfNmT4rf/eJ4qGg4KBGKuXR+Txjrfxw0ZP/jVXSLA/OZ6Z/f8fu/MRut
rmB+W/aDlPq+x7BD6abfH9weplnfiWTMjXwe/QgZi4HQ58WfMiQ74TtbptpL
zI/Xq2bHOUWBQDD1Xr9EJ/TQU9V58boTr7+U0zwXCZpFxyvztnRCqsquk7qY
PxkpV9996z44rBUBXvFOWB18cD4Cc5PAl+RfUaHweH/52lzBTuD4GufHa8tE
MXp19nulPWD7OW4FDrZOGBOPiVC0w/5lyOCBqocjUKw37Etf6YDBOG83P9Y5
xzy7CMWH5kDojm/s+9EBR1sMNdsxNxnbSJIaPIvCyaUNglMdkJHyKs3FnrWv
8lZgPdxEmzvPPlzq7IAccnlvO45LL8zmKbGfYlCdwF/3+cAOuP32btE7JyaK
6rVS3S38GEWb1vkm3MDzvDckStuZiQ6abOUYOxiH3KO/UT844DgwXyRehjn3
pqftB90TkOf5Sy2ueL0nfrWRfniNiRaLxhd0XySjbueQS5GbOmDIWMXOzBXn
BXX1CCmxLOTuF8FZnNkO695KbTrkwUSlt0jbizMK0Q4ronK2HwOyByKJ07eY
KIBNZMfN9c+Qhp3f2goHBjSXBYYE+WG/oO+9g93nGZJrm0+LMWLA0uczxzb6
43Vn4SJhoFOEjnP+Mm+QY8BrlRRrFZx3ive+7vN5V4zUNQyP/XvdBkV8ynfi
cJ7KumhASYFSdKhBp8pxVxuc3nSp1CmUiTLHOCUGT1aizH+6vhY1dOgbdzV0
x/laRyP5zkXHSuT16I7Slww6mFgPUzdGM5FPYbqj4r1K1DRxZcjtPh1uT3Kf
rMLc8J35mraWSsQ7JxPhZU4H+k9Fn59YD7wIM7EYPlyFZp86fL79qwVstngS
Q7EO0dk4Yiv+uwo1jMTtb9NsgSzhqVuPsI46ki/np7aRhNaI1dYdekuDPV8T
ZGyfMlHcP0cxBwkSOizT/+cD1pvHPTU51mUxUd9PCmliNwnRzjx2qXxGA8sY
lT9FmMfNvXP9jUhIMC9Z530ADcQiauWY2Uzk+mVzV+FVEuJdWSI7SdOgauDv
dfc8HLfZbERfXich5a8NGyN5aTC/d8qQJx/HJXWxWLubJPTNPO1ww38AhXVl
GwowH+Z4v9wbRkLJVovmpkkAg+d3sA+x9iMJu2WIpJBQOO9u+tg8FZz7lX4c
LGIivcd+c/0EEuq+qulQ3kGF4gaFqTbMnc1mrMSekpC0jFPqchYVlE2O3jYv
ZqJzN1LK32WT0Dop9uvgT4WZbaolk5hbr9dv2p5HQh/JC6Oc56nAbOW4fpPI
RKTQEOu5fBL6MhA12r2HCj3GCY1rsF+oVjh463QhCUUk3DTczEWFz+h7zCPM
E7qqFvc+I6GUYvu102MUaBdAI5tLWXUhi+48zFXW/mzVomAfnFGQn4O5xOk9
K2WYy4jV6e1IpUCaqfsH1jmR0M3JIYaYi1auHo3xpUDyzengcswP16s4P2B9
d3uFergJ9q+pD8JYdS2OjdVtlwtIyLNf6SW3EvbxfV2fazB33Xq1oh//LtES
lSAJfgpMftNOP4J906W+rafnckhoNZxcRptpgrG16bk1mFfFyAqJZJJQ3LEA
CRqxCdqtOB+Use5JTi3OlsP9fLH088y26CaYuTdgubuKiepGFBOmk0moT73X
XdC9CQQ38jpkVbHif0901GMScu+tW0NVaoKByk2cUdV4HT3d5pIYTELtFwpI
etAIiwvS43o1OJ6/cVWpNCIheWXhwMFfDbAqwmF5rZ6JTt7fy31aH8/DDX6O
vz41QHhOmiDr3uyqkLbo5hMk9PD7+e/kngbI9fIqlSDjuJ3po+d1BLfn4LqH
2woagMch4U475k+7euult+J5Ihom4nGpAXqq3aTXYH9qa11NKPtcjf59JZfx
TJJhVr6afyMF6zFNB4HEkWpkfCXt5n/DZDD6siNTG3P9XU9vxb+rRnuTvfvP
95FBrve6rA/m3w5Utb1/UY24yIaEegoZ6NEam/sorHsz+tV+1VYjsVGJ+KZ0
MvxaYhp7Yd/dN75ZaayyGmV4rC1vTSTDnjuznomYi37M4FksqUYXYgObzj4i
Q0a7YVAt5oq3SpOKc6tRc4ba7ZEwMjz1qNH/hrkb7wbJhIRqdCv03c8hLzJo
PpIvMWLtC+q77iz1uBqV16zoPfcgA2Pq1W/WeTeLiPeOs9HVSLS0dZOyOxlC
9m/d7435scNrb/1+UI3Ssf4VdCVDmbOxdijrPOCc7ZJhRDX6E70my/4aGU5U
Dx+Owbw1bavqdHg1qrUzuC3vTIbsSpX1yaxzi2VdD7rvVqMfLw5L2DqRIbb3
VyOrnuNGvHDw951q9Kv42Q9uzLm295xl1XNG7Do9/UKqke+JVJ/tmLd13qKy
6jOrb3aEngyuRj3LO9lyMf8l17eBVc/pWacUb3e7Gkmsy12Iw99NmHquwar/
GFTa974Jqkb7dnWkTuN27vl7Q5d171a4QJFVBuZxxBZExL/rL+mjMutc4bLo
cRMq5gKcztKvcD+Qgkz+pmA+mh3LUMPv18g45W19gww/5ESfsc4VjhDXtAri
9mQR3lwx8CYDf0HsgXDMKW3jZ3Vx+9+L3+dLu0mGntNHCazzmKOW+y6P4t/b
O/T70ekAMjy8VvXlKqs/U65Pv8P9M3dO6rdxMB7flnRBM8w3K6/lX8X9PMJ0
K/SNIIPfoXkBRcxnTc2/70uuRtwcJHnIIEOy46MOCuue/LNtPK+6qtF4R4eR
3zvc/8fHNUPwfDvcl5vyAa87vbCXnrw3G+Blux77HTz/CXu1Nai5JKRqy5hC
dxvg+BPLw7KYiygmcZyrw/HN99F4ZGwDaNx8uKULry+TRXXN4I/4ea+PZnqF
DdCawsXHi/kr3f2bDmnUoHPvo3ZsGWwAQ48wCa9avC4K1geeFapFUl6pp7PV
G6HR4+/III4DWfdvHbNSqkX5or53TU81gnKeF8ka822twUUShrVInecZc8S4
EbxSM5JHcZyp4i/iJcfWIuvywO/XnBuBwZTM+YDj0oGXfDV6YnVo0Lnt30x8
I1w4U/eQjuMhh+R6zq2n6tFU22HT80ON4HHOWJh1r2Acj91mQY96NB6+bmvF
WCNQr6vK5OO8MNL1IrEkpR55f//aWDjVCMFnpet5MT+9Z6ame7Yeyc+qS11c
bIQgtbG4N4VMxFye2Wm0mYysZbWBd7UR1D7bTB7B3KVsJN5Th4wk/Y/O67M1
gVSMwqdknKfMTf20Hz4lo6OT+4Rt1zfB54TnTDOc16qJNa23u8lozwPv7Qc2
NIGOz4hgNc6PVlK27dy/yagrb+pbiEATBNiRf/NjrnQ457i8YgPKvjaqpC/c
BNW5suRruUw0N8Qv9sGyAUUc3HQ/WrQJ0iXYjeg5uP/fvZPYEdWAPkhsKDqx
qQluDCh3bcV8fdjfzUuNDehOpL6lm3gTtN0mK3njfO1Y5tdyYbYBfc+scliz
uQnm5wjRnTi/Z1m4NGptb0S/fvVmcGJ+kPJ9QhJzzqTzaSTjRhSoKzXhgd8z
XDup6431Q6Da6S8l4Y1o6qqNPMLf3XG1pJGRyURB+7YL765vRITRFzY3cDtv
J4bpbsbcz6UySmamEXEcDnnAhn8Xc6Bx2SUD96cN97N0qSYk8CK7fmZjE9xZ
W9HfmM5Exmsyqx6bNaHLB2hcB/maIJbCmOLF/OmXJZ8RWhOKmsqobuJogmbV
fW+L0rD+sZgOOPizCXHL0yN+/26EvTl3236mMhG/+wrv0l4KSt512PXhEp4P
H/9t/H9d69TfAUinoMgdOZ/uTTbCjrgvox+SmUj3P8Uf8IaCdvVGW8+NNEJC
E8FPHvOPf27Yy2ygovv3tlem9TeCj6zoE58kJrKn8/+c0KGiOn5O38jnjbCu
lvcoYN21cO+IL1cIFbV29p6roTUCcBwPWI/5/wAWZWvu
       "]]},
     Annotation[#, "Charting`Private`Tag$7718#1"]& ]}, {}},
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{-0.19087368993982554`, 
   0.198669330795033}, {-0.19633920763621399`, 0.1967102184738669}, {
   0.980066577841244, 0.9921460426557086}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.877223224543539*^9},
 CellLabel->
  "Out[197]=",ExpressionUUID->"3a5e8169-4076-42a3-b409-7dd887134522"]
}, Open  ]],

Cell["\<\

Enter numerical values, set the initial conditions, and solve the equations \
of motion. Adjust phidot0 here until you find cusps (do not adjust the other \
initial velocities). Provide a value of phidot0 to the nearest radian/second. \
Unfortunately, every time you choose a new value of phidot0, you need to run \
the Clear[\[OpenCurlyDoubleQuote]`*\[CloseCurlyDoubleQuote]] command at the \
beginning of the problem and start again, otherwise Mathematica gets very \
unhappy.\
\>", "Text",
 CellChangeTimes->{{3.4494951811396866`*^9, 3.449495191389883*^9}, {
  3.800235514021308*^9, 3.800235578642617*^9}, {3.800236190079153*^9, 
  3.800236243098319*^9}, {3.8002425535771027`*^9, 
  3.8002425600771065`*^9}},ExpressionUUID->"4b0cd95a-a81f-48d7-b39c-\
fd7dc6e06259"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lam1", "=", 
   RowBox[{"1.5", "*", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "4"}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"lam3", "=", 
   RowBox[{"2.5", "*", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "4"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", "0.200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "=", "9.8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tmax", "=", "1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phidot0", "=", "19.85"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theta0", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thetadot0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"psidot0", "=", "20"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol1", "=", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"thetaeq", ",", "phieq", ",", "psieq", ",", 
        RowBox[{
         RowBox[{"psi", "[", "0", "]"}], "==", "0"}], ",", 
        RowBox[{
         RowBox[{"theta", "[", "0", "]"}], "\[Equal]", "theta0"}], ",", 
        RowBox[{
         RowBox[{"phi", "[", "0", "]"}], "==", "0"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"psi", "'"}], "[", "0", "]"}], "\[Equal]", "psidot0"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"theta", "'"}], "[", "0", "]"}], "\[Equal]", "thetadot0"}], 
        ",", 
        RowBox[{
         RowBox[{
          RowBox[{"phi", "'"}], "[", "0", "]"}], "\[Equal]", "phidot0"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"theta", "[", "t", "]"}], ",", 
        RowBox[{"phi", "[", "t", "]"}], ",", 
        RowBox[{"psi", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"phi", "[", "t", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"phi", "[", "t", "]"}], "]"}]}], ",", 
      RowBox[{"Cos", "[", 
       RowBox[{"theta", "[", "t", "]"}], "]"}]}], "}"}], "/.", "sol1"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.44944932240625*^9, 3.449449347359375*^9}, {
  3.4528849543125*^9, 3.45288495675*^9}, {3.800235614421146*^9, 
  3.800235616572357*^9}, {3.8002362697066393`*^9, 3.800236349172621*^9}, {
  3.8002363806814337`*^9, 3.80023638598457*^9}, {3.8002403377298455`*^9, 
  3.800240349314843*^9}, {3.800240480230901*^9, 3.800240502847843*^9}, {
  3.8002410828614063`*^9, 3.8002410934150915`*^9}, {3.8002425499401035`*^9, 
  3.8002425703361163`*^9}, {3.8002426512733107`*^9, 3.8002426851683283`*^9}, {
  3.8772231040442486`*^9, 3.877223105763757*^9}},
 CellLabel->
  "In[198]:=",ExpressionUUID->"c34f8073-bdf7-43c2-8339-e61ac61f3b8e"],

Cell[BoxData[
 Graphics3DBox[{{{}, {}, 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[2], Line3DBox[CompressedData["
1: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
hBYCqz1X3kcKF5Knh8iloLfTo64HfyEkAV80V95fmt5pv95oTwrabByjaPYT
z/fF3n9X3ndK23pJOnR3CuLFk/rsNEL+/vKZK8+vfh5sCFqHXXbTXSVh/Pm7
H9n2rvj6bPbUsV0paOgoj0kD9uaw32Ur719ZXqrtX8Y+vDu49S3+3qcBO7as
vK/1w2CoxAQf5/vul+1BvxHqdqBflcXe6PDd583K91rtacz/g5Cv/qbqbdjb
PL3M1fD5f3r345jvInbDy2yrsJeuHZfikk9BbgXXtyayUZFkqfO6PyvXM/i9
9ivs9ZsiR4o5qOiAh8Tq8ZX7cuoRXwa+Pi//vpnj4Kaiczna073Y/YXDXhop
4vtbL+P+eDUV7+O87hbsjceGP3zFbhB4WsWfF98vHZm0Quy3r5TEX8TXvyBO
/2gqHxX9sKOei8cuYmMvl4Hdyl42cmYjFT2Wj+b2wq4x2L4hE/u0z/rppE1U
1M9TSDqHXXpNdZIFdsqbE/Y+W6joSdC54/uxb2puF2Tg741VVmtMEaMiMZEv
fSvPzWbEz00/x+e/fupSz5/tVORwo8t2Cq/bEROxpOv491r7+vg83EFF/6kE
jnVhv9gt4FSM72/eln1+t/ZQUdCLew552FldIsO2+L7cCsvIzsb7ojinZsQf
e2UhhbxXKgVdfL/duvAQFZ3apt23HTs8lNuxTzwF2U9vuxR1lIrURL3OTeN9
R2l9Y5OwFe+7nXEexbpUFM080I+wX8ys6VRan4LQWhEowjnHLGrm53nsrq2f
NN5PJiO9VVfGIjyoiGIowHBvwvWQLbNeOSgZuTsV+LjXUtE9JzWeow0E+JRY
nXZ3SUaBE7+ChxAVdUe0Wn/H9eG80qDnHpNkVCvwTzimi4q2leUlJWP/uOWR
/pxkMiL/F3Ct4AMVCTE/lX6ow32hR/h3WUkS8rrM3dK0gYZWqT0Ws63FeW/j
udXdjoloyuoNyd+PhliZA0fZcL1aarwe520Xhyob0g173ehIKOXh9sliArri
yLXhlbHI5SKjXvYmHd345FVgjX3nON1Kfy4G6aTWTSXF0ZGDgRCjB9fV4YQP
IbW3ohG/e1xIdRkd7Vgf8YlUhOvM1nK9Sa0IdGMkX+PVFB3lXjdJNikgoN2h
4UvyrVuIW2jku7I/7psm8eru2bh+foizKSm2BzVFPI5FMNGPm0XB/1IIuLNu
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
       "]]},
     Annotation[#, "Charting`Private`Tag$7761#1"]& ]}, {}},
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{-0.19442415964596893`, 
   0.19866933079503366`}, {-0.1984180705125761, 0.1962324214296291}, {
   0.9800665775825362, 0.9919684907617731}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.877223097604026*^9, 3.8772231066819763`*^9}, 
   3.8772231399852123`*^9, 3.8772232276203547`*^9},
 CellLabel->
  "Out[209]=",ExpressionUUID->"9a688d2b-ec30-4395-b38b-4e3c90b4d08d"]
}, Open  ]],

Cell["Value of phidot0 that leads to cusps:", "Text",
 CellChangeTimes->{{3.449451517921875*^9, 3.449451566859375*^9}, {
  3.7663364313356915`*^9, 3.7663364339522934`*^9}, {3.8002364004994855`*^9, 
  3.8002364091900597`*^9}, {3.800242411316433*^9, 3.8002424122564297`*^9}, {
  3.800242727352998*^9, 
  3.8002427290259943`*^9}},ExpressionUUID->"3fd46504-d809-48dc-ab9e-\
2ac6682ad1d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution to phidot0", "Subsection",
 CellChangeTimes->{{3.452885934625*^9, 
  3.452885939140625*^9}},ExpressionUUID->"8d111068-a218-4fcf-98b1-\
c316ad3b775c"],

Cell["phidot0 = 19.85", "Text",
 CellChangeTimes->{{3.8002364415868835`*^9, 
  3.8002364640561666`*^9}},ExpressionUUID->"b2b28e3d-13b8-4c37-b490-\
1d7f7a7588ad"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Written ",
 StyleBox["Problems",
  FontWeight->"Bold"]
}], "Section",
 CellChangeTimes->{{3.441220828720395*^9, 3.441220849173782*^9}, {
   3.441220923018477*^9, 3.441220923518483*^9}, 3.4428717138731413`*^9, {
   3.6381366370179396`*^9, 3.6381366460191555`*^9}, {3.80021592794001*^9, 
   3.800215928731022*^9}},ExpressionUUID->"8343a18e-4907-457e-a069-\
5a930add8fad"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
3z3CtDuknhX6fo7VAx0zIlOfL4d1cjDmPpVrNYVITJgmL0NxN9g9mB1yyz1/
qO9iYBwtMLRrtIn7+AsiO9AmLZnWeMfip7jcmOwHZa8/+fd3OZsl5tFeS2Ga
zMDwwMK0DRGm3dm5h5o9yuRt/B27gu8eYdodqnxcrqb6Fy+V6Mn/nrBO1WP9
695riwvTigCz/HRvd9xqzx/uuxgYRwoO7eLd01+Qxi2Z1njnVGd+d0/Tsj5c
/JToR3vxiUQ2CdOKLHmEaU0QphGmbbtiqtWOXcF3jzDtDqm7pv4LXF3+umr0
L6bn87Ex1Abid6Fzztz16xVru72ev7LvYmAco2poF+n+/oI0a8m0xm0gf5Tv
rimaefjFi8+diEQiG4ZpZpYqk266TpiWfv6DSsbeHx6XJ4uY60eIRFulFJpW
Nul8MYTp3Ne4zcTvTRdNqAvT7OmOThp/ow2E0mnmqi/z+tNc5UvS9fPdFUnM
hsl5zaWefi0xlpPI1gt75cn3bC14V1txgl3m2Roi7/3pr6vO3c5nnuU3e+tZ
zkwcnnn8l9PDo+qrryIDtt1DZhnW3tiN52/fiaxXBdkJJkWS8MqCCkqLOt1G
vzhCf+rwmMIMXHSzfyV6+6aiGcefSGixJHu9mOX8VB5qWqevYwvEbKjL8/yY
dbI+9YHgqmRO+QSuBfOT/pG/tZ3u4Oh0frFumCbKpFtZrdf5yoN/2zX7pipr
u9mfpJs9nX93wjQrBWv5orCvnZqTshtnJ88q7zm4mMtnvW68FIjZZaFSdsgm
UZkXXOdaubnIKD5M09lmyjeEYwpKFrhxqf64nB4duTt1ruvAKgY1113gerF6
fvN4KtZKaN4G5PGU6INxBsZRPc8mI4rrBhfsegUbf5BRv+y1Q7vr+su8thZq
zmWtEosdq3jF7NEe1FllE+gVb6I1xg6DYRJ1F/M62I3I5w8Xe9ezI+qyi7c0
6TF4N8AM00QmPZORQctdP+KieGO6OIs8eVd65ckLJ72mXudf6facvC7ZXaAn
+gotsnHGpsmqCdN874EWZ2dfrMZqGrFhWu1ppn95r7vHvfHZd72LTs0jVLmc
RPE+hRqWG3VRWvBOf0bzjVhkIh09yip/yzjT4Llfnk+e9XXXlB7KsTgSOwFj
9r7/I5Vnu6jf6JskFU/T5M9TPtLOG13RZ5rHsHYVyHbSHbw8E+eo+/D4iUz5
V4wjlFso5ZyvK8yoi06WValsI0/ECDrM6nZ3fekZFdTNTHAb6nd977cj71AV
sXzH15WJU9BDIN/IJGsh5mDS22bEnVI9JMgv2P6TwdN9dQVVV6fR2V58Udmo
jIutvJSAKOo82pLX2ql8UcrtCfNykjkPVUvIr5cnTwe/upkei5vnne5BUk54
mv+seHdhfkj0A+U0+OY24y6f9btxNxCz6WdS4n91+fsDsZtf3KnBA7vilqDZ
yUQVVJ7Ksuj59c+Ks9O83zablujGjdU06q67/626Xoqe/z+l8UDHs2bHRj/l
ob7LGrGUl1jyNP4NRxRxF+xGBRtxkOv8soeGdlGXeUUt1HWq65VY5Fhlgzoq
lUz8c+G2WmP0MBg2kebX+9N2K7KbbNbe9WT7msjx1sK0F8mH8VDdLiuaoroB
Yi+q8stw/Mdw8nkpX9OWo8qskPecoazKomxejNl7mj03hbLOgRk1K7UyTMsv
Z8+1pn5BS/8VKOTAZV5/mnqKjjjE4Z9/Dl+fL3/IRX+qLlVv6gw1aJElY6/l
tPfi3dvhQbni3EhErhhi3xZQT3XLYYv/3LON7LkXkX40rFtyfkvZKeVmLykH
wzQVxjoHrI9B5fFeuwq87x3LrcX9oIhMAna2N3VbxtxCbWH+X8xFF/xxiTsR
+0Gz/rBzvff+fDd5dqAeHBWJc6snAzgN9bfxny/SMZ5c9DAbmfzXWrqx1JXJ
3OxWXesLzdi187DcbTOi5bs52/UyfE3CtN5gcKBGWeY9YTtlhCwfp3CKLsKb
gt79bSryUdidtuonfff3xDi/ZiK9Ki2ztHV1q0s45vLZqBvXeyzl0s+oy1+e
i35E5R9x6fq/sRUVG4RpxetpuoQjCyofEri9ppsdQjRme7UC98W9uuvu66eq
60X2/N20rQ/0HaTiVpidx3LTn/L6gfGfybvD4VGp53EmV2x2GLEX7GYFW3+Q
a/2yB4Z2UZd5RS1Ud6prlljkWGWTOjLcQJgW0xpjh8Fw5f38Hb7Vm12Mv9gN
TC+0V11xtxWmuVNZ/NsvfhDLAW8+rvD8UOrvyN4yP3HPhanvr8Y88ayYHae6
hBsK02JP0yys+IanHh9YfY73JRrdATrriOmSsYtRjrsC6azL423fuedjBs/I
XJ2obsl5ebpn3Wj1olCzF2ftu2T0wNIcRaxRBbLvtQdCwZZTJq7rUimVXq6J
LszKiy4T+HFpciKBxZKK6WRuYKvGchE/Ovq69g7Ir8OrkskW7l5r5fwS9t+d
NiPDMc9QrXrenUlfU6XFvIoFVvTlVpHDUF+zxnZkOFbu9EKhgc55WG7S6fZ/
qa0ROTqybyP434Orunw27sZ1fZXT1+v/klWjt1kTpt3Yq6xNXn8r5qaK9hxd
UPkXS9d4WqdP9E5lRO/++jgPH53tB6670JKsOkxzx736DpK+6jf/Ka8dGNuz
o6+9P0wbHkbDC3bNgo0/yIa/7IGhXYPLvKIW/OfStMQanpFH0z2aJdNimBbR
GuPHh7DlnVtokHAb+8/aWLl2otYIuM1Jj/Z/yGYV1SdcW3cRQ/JDLR4jhsRc
VlVP08RcghsK02JP09jsxlNxvHVUW3H2HR552KWKCz0n8py78dpFiCxANcDW
0+3UvureTdP8NRIMKo2d2v/bVhVEb0c27/Lvjrifti/WcmpSmLXvLzc6x8CH
Q79ooV03iFtrkxQFujLVUZS+5zxcdk/NbjOinL3hZCspRHQkq4ouFEVaHy7+
VzZp309AMIVIKAV9di2vO6vfX9ER47eg+m5c304vpgfbb+6oUtrlp2nxBSW7
Yj1LTW7PeDct3Jjz2wX25Nva667ZHBLjCNVXWmgDUdPMrL/LyjYn52x2GA0v
2DULtsFBNvtlb5bdoullXnkum5dYbJakxns0T7blSY++EyhaY5PxIQxZePvo
LieFyjz85XGCd2DpuPMwLbJPkBdL/ZBHdPWbjpvXeDetlTAt+jSNzW5wrvYL
sy2EaaWWVv7VEzznLpprzM+BflLcCSYYqeGtkerBkre73rgK7Fwl9duR5VZ7
VcYXZkthWvWJbHGYVvppDuXsrRhReHuJljI9qrGr3Ix6mOLfqpvjtyovfXgM
o64v6yGXdw5tvaxdFF1M9PitnW782n45MUsIkEzPL+SFrDurmt5+S99NE0cT
X1DFNNdQ+gtRHZHDzhsI05xVjVpoA2sPjI2vbHgYzS7Y6zULtsFB3kiYtuZl
7j2X9kosNkxrvEfzW7cQpumvNBofQst/vMqveN8ePSu1Svg24K6EaXI79fcz
xRY2XeOmWaZH/ceNw7To0zQ2u841KxM4PMoTGX292PhpWvCpWWAypO/cxenU
5iaVxy/XllUNvDecNAnWvDWi54f4e3Xf3Kf1q0C++yxzSP4ncjsqHI6c7RNX
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
    "], {{0, 450}, {1165, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{1165, 450},
  PlotRange->{{0, 1165}, {0, 450}}]], "Text",
 CellChangeTimes->{
  3.800216338478967*^9},ExpressionUUID->"3cc879fb-ea93-4f05-b51b-\
d6333f009e68"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1117, 673},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->FrontEnd`FileName[{"Creative"}, "PastelColor.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"bb38a64b-1ac6-494b-bfcc-73e51f42f410"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 154, 3, 65, "Title",ExpressionUUID->"56702932-a0f9-4976-bc60-0cff57ac4743"],
Cell[724, 27, 213, 4, 32, "Text",ExpressionUUID->"4085a8ca-2dd6-4d5c-aa20-040b1c2b00a1"],
Cell[CellGroupData[{
Cell[962, 35, 204, 4, 60, "Section",ExpressionUUID->"9d698942-ba4f-4440-9ae5-04e350046fb8"],
Cell[1169, 41, 521, 10, 53, "Text",ExpressionUUID->"8eeaac1c-c8d5-4b6f-99ac-327ce5cede24"],
Cell[1693, 53, 200, 3, 40, "Input",ExpressionUUID->"1f354660-aebd-4678-8f77-36162bd9dcd0"],
Cell[CellGroupData[{
Cell[1918, 60, 77, 0, 37, "Subsection",ExpressionUUID->"a8a81c26-fca4-4fd3-853b-6fcb53038921"],
Cell[1998, 62, 141, 2, 32, "Text",ExpressionUUID->"6f3e1734-842f-43f5-bc3f-159eef399214"],
Cell[2142, 66, 617, 15, 80, "Input",ExpressionUUID->"03d26a0f-02dd-4cef-a3f0-39a4c7311c9e"],
Cell[2762, 83, 455, 10, 95, "Text",ExpressionUUID->"13b6e399-a4d5-444f-a38a-43f7a5406f7e"],
Cell[3220, 95, 4635, 144, 177, "Input",ExpressionUUID->"2430cdb5-2e4a-47dc-b69d-22ad49055acf"],
Cell[7858, 241, 399, 8, 53, "Text",ExpressionUUID->"9c679298-e248-42b9-a2b6-6dfa68999d65"],
Cell[8260, 251, 807, 18, 118, "Input",ExpressionUUID->"edf29081-febf-46f9-a312-863763075945"],
Cell[9070, 271, 431, 8, 53, "Text",ExpressionUUID->"d34018a8-baf9-42b1-af58-5caba9cdb361"],
Cell[9504, 281, 1504, 49, 196, "Input",ExpressionUUID->"2bf79b2e-be4c-46f8-b59f-12461099eaa8"],
Cell[CellGroupData[{
Cell[11033, 334, 5787, 185, 312, "Input",ExpressionUUID->"4a9360fa-082f-468a-8897-fabd46c83b42"],
Cell[16823, 521, 950, 21, 415, "Output",ExpressionUUID->"ecc64266-bb8b-4b37-b17d-f353df2b914a"],
Cell[17776, 544, 1988, 41, 415, "Output",ExpressionUUID->"ec849541-3abf-4d58-9785-e73e4974a668"],
Cell[19767, 587, 9911, 214, 415, "Output",ExpressionUUID->"7b079966-ada6-43e5-b9d8-6795d5efb766"]
}, Open  ]],
Cell[29693, 804, 264, 6, 32, "Text",ExpressionUUID->"86d63338-e42f-4a09-accb-f965618e7536"],
Cell[CellGroupData[{
Cell[29982, 814, 802, 23, 40, "Input",ExpressionUUID->"0d206660-f5f5-4d0b-bfd8-dcf96b750141"],
Cell[30787, 839, 8875, 194, 415, "Output",ExpressionUUID->"13ccff00-e698-48da-9af7-5cb892f2d1c0"]
}, Open  ]],
Cell[39677, 1036, 440, 8, 32, "Text",ExpressionUUID->"a8101bf4-92c1-4f8d-8cbd-9cc6ebaa66f3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40154, 1049, 77, 0, 37, "Subsection",ExpressionUUID->"71041fc9-492b-4987-8ff7-5b4dcdff4c60"],
Cell[40234, 1051, 344, 8, 53, "Text",ExpressionUUID->"30b1183a-5cd1-4cb4-8853-85b3f6ef5ba5"],
Cell[40581, 1061, 1089, 23, 178, "Input",ExpressionUUID->"24e0ac25-dbd6-45dc-8431-200a1fefc8ce"],
Cell[41673, 1086, 855, 20, 80, "Input",ExpressionUUID->"b7f6add2-fd2d-484b-b4c8-b6ca416db43b"],
Cell[42531, 1108, 100, 0, 32, "Text",ExpressionUUID->"8acb55f8-7415-4a3d-b010-86a707cda455"],
Cell[42634, 1110, 1469, 48, 196, "Input",ExpressionUUID->"56463f2b-cd43-4890-aff9-40e832a89188"],
Cell[44106, 1160, 140, 3, 32, "Text",ExpressionUUID->"601c5d80-ff21-405c-88e3-e0b4549669c0"],
Cell[CellGroupData[{
Cell[44271, 1167, 2112, 60, 99, "Input",ExpressionUUID->"ea8abbc7-52bf-4859-9889-1db1038c5f32"],
Cell[46386, 1229, 1749, 35, 471, "Output",ExpressionUUID->"fba346b9-e3e1-4f83-bdb9-5f6f9f4a147b"]
}, Open  ]],
Cell[48150, 1267, 566, 10, 74, "Text",ExpressionUUID->"f5265ce6-475a-448a-8000-946d234efe97"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[48765, 1283, 249, 4, 60, "Section",ExpressionUUID->"a27f99b3-ebca-4fb2-8978-fb3cabfce264"],
Cell[49017, 1289, 13552, 230, 557, "Text",ExpressionUUID->"5679e663-0ce3-4f4d-9e83-65a70992cbbc"],
Cell[62572, 1521, 265, 5, 40, "Input",ExpressionUUID->"8b94f963-7449-4690-8d75-480e4912742f"],
Cell[62840, 1528, 936, 19, 158, "Text",ExpressionUUID->"107bbeb4-b6e7-4734-a5f4-1ff26d15880a"],
Cell[CellGroupData[{
Cell[63801, 1551, 2799, 73, 196, "Input",ExpressionUUID->"b92492e5-6575-457d-a62f-319826573ae4"],
Cell[66603, 1626, 1169, 33, 40, "Output",ExpressionUUID->"53078e0a-887c-439c-a571-f67395353715"],
Cell[67775, 1661, 177, 3, 40, "Output",ExpressionUUID->"f2217374-5223-4b9f-9c1d-2da6f2a0fbd6"],
Cell[67955, 1666, 175, 3, 40, "Output",ExpressionUUID->"55d60cde-f4f3-46f5-b726-5ff0a674035b"],
Cell[68133, 1671, 869, 25, 40, "Output",ExpressionUUID->"506b0660-df95-4fe8-a499-c20c5dc6184f"],
Cell[69005, 1698, 293, 7, 40, "Output",ExpressionUUID->"f1ca83e6-98b0-41d5-9305-a2b1a1190bf4"],
Cell[69301, 1707, 538, 15, 40, "Output",ExpressionUUID->"d8a3be90-8011-4573-84ae-b904deca7ddb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69876, 1727, 156, 3, 37, "Subsection",ExpressionUUID->"293489f6-b28f-4230-b086-7216eaba34cd"],
Cell[CellGroupData[{
Cell[70057, 1734, 4060, 115, 215, "Input",ExpressionUUID->"ca9c08e9-16e5-4889-baa7-987cb37ceebf"],
Cell[CellGroupData[{
Cell[74142, 1853, 217, 4, 22, "Print",ExpressionUUID->"4f3a1741-58f0-4b9b-a7b6-1425c0c6825d"],
Cell[74362, 1859, 220, 4, 22, "Print",ExpressionUUID->"3e64b647-cdd2-418c-ac8a-970f084f813e"],
Cell[74585, 1865, 222, 4, 22, "Print",ExpressionUUID->"5df9893b-be6e-4010-991b-efb1b0f406dc"],
Cell[74810, 1871, 220, 4, 22, "Print",ExpressionUUID->"a0343a18-49d1-4864-8b85-34ff78a9327d"],
Cell[75033, 1877, 224, 4, 22, "Print",ExpressionUUID->"93049672-88e1-40dc-906f-f4548700e7a8"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[75318, 1888, 120, 2, 37, "Subsection",ExpressionUUID->"c62f63e0-3359-4f08-9231-aba3848723e5"],
Cell[75441, 1892, 173, 3, 32, "Text",ExpressionUUID->"807389ba-07e7-4ab2-8b77-3f479d8e4418"],
Cell[75617, 1897, 4975, 135, 119, "Input",ExpressionUUID->"6f46a55f-3bc1-4e0b-bf18-211cb50d69df"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80629, 2037, 156, 3, 37, "Subsection",ExpressionUUID->"ec369042-e777-40da-b372-cff6f50555b2"],
Cell[CellGroupData[{
Cell[80810, 2044, 5999, 158, 177, "Input",ExpressionUUID->"ac9b261a-7ef7-4dc3-850c-827ca9cad0b3"],
Cell[CellGroupData[{
Cell[86834, 2206, 224, 4, 22, "Print",ExpressionUUID->"b2761fa1-e114-4ff7-ac33-609776031498"],
Cell[87061, 2212, 222, 4, 22, "Print",ExpressionUUID->"ee76ef7f-45fe-42c6-9638-588a6bb2707f"],
Cell[87286, 2218, 224, 4, 22, "Print",ExpressionUUID->"3115fd2d-b64a-4709-a312-ff7bfd8ca7b2"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[87571, 2229, 77, 0, 37, "Subsection",ExpressionUUID->"3ada566e-03cb-45af-8c07-b2238cb36c00"],
Cell[87651, 2231, 167, 3, 32, "Text",ExpressionUUID->"7ca7fdea-246a-4a12-99a2-41c9ddf86854"],
Cell[CellGroupData[{
Cell[87843, 2238, 3208, 91, 351, "Input",ExpressionUUID->"64375ea8-4a0c-4ceb-8c21-f3df3880a692"],
Cell[91054, 2331, 34378, 576, 306, "Output",ExpressionUUID->"c6c28944-a75b-41e0-b3c3-6d34765e3a1c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125469, 2912, 3019, 88, 351, "Input",ExpressionUUID->"1b2d9ba6-8e0f-4595-bc0d-43d9f404f484"],
Cell[128491, 3002, 29700, 500, 224, "Output",ExpressionUUID->"9e7e9940-8495-45c3-84ef-0b7f040f1176"]
}, Open  ]],
Cell[CellGroupData[{
Cell[158228, 3507, 3018, 88, 351, "Input",ExpressionUUID->"aa239514-d054-4dc0-963e-45a8b6199112"],
Cell[161249, 3597, 42029, 702, 233, "Output",ExpressionUUID->"3a5e8169-4076-42a3-b409-7dd887134522"]
}, Open  ]],
Cell[203293, 4302, 779, 14, 95, "Text",ExpressionUUID->"4b0cd95a-a81f-48d7-b39c-fd7dc6e06259"],
Cell[CellGroupData[{
Cell[204097, 4320, 3514, 95, 351, "Input",ExpressionUUID->"c34f8073-bdf7-43c2-8339-e61ac61f3b8e"],
Cell[207614, 4417, 40043, 669, 233, "Output",ExpressionUUID->"9a688d2b-ec30-4395-b38b-4e3c90b4d08d"]
}, Open  ]],
Cell[247672, 5089, 384, 6, 32, "Text",ExpressionUUID->"3fd46504-d809-48dc-ab9e-2ac6682ad1d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[248093, 5100, 164, 3, 37, "Subsection",ExpressionUUID->"8d111068-a218-4fcf-98b1-c316ad3b775c"],
Cell[248260, 5105, 161, 3, 32, "Text",ExpressionUUID->"b2b28e3d-13b8-4c37-b490-1d7f7a7588ad"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[248470, 5114, 387, 9, 60, "Section",ExpressionUUID->"8343a18e-4907-457e-a069-5a930add8fad"],
Cell[248860, 5125, 61010, 1005, 361, "Text",ExpressionUUID->"3cc879fb-ea93-4f05-b51b-d6333f009e68"]
}, Open  ]]
}, Open  ]]
}
]
*)

